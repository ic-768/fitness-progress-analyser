{"version":3,"sources":["Components/LoginForm.js","Components/RegisterForm.js","Components/Banner.js","Services/exercises.js","Components/DayGrid.js","Components/DaySubmissions.js","Components/RegimentForm.js","Components/DayForm.js","Components/LandingPage.js","Functions/workoutFunctions.js","Components/AnalysisPlot.js","Components/Analysis.js","Components/HistoryWorkout.js","Components/History.js","Components/ExerciseCounter.js","Components/ExerciseSubmission.js","Components/Headquarters.js","Services/register.js","Services/login.js","Functions/userFunctions.js","App.js","index.js"],"names":["LoginForm","submitCredentials","setUser","useState","username","setUsername","password","setPassword","inputStyle","margin","style","display","flexDirection","alignItems","onSubmit","event","a","preventDefault","user","marginTop","backgroundColor","borderRadius","padding","justifyContent","className","color","value","placeholder","onChange","target","width","height","to","RegisterForm","history","useHistory","push","Banner","logout","expanded","setExpanded","logoStyle","Navbar","bg","variant","expand","Brand","onClick","src","Text","Toggle","aria-controls","Collapse","id","Nav","Link","size","baseUrl","token","setRegiment","regiment","config","headers","Authorization","axios","patch","response","data","setToken","newToken","sendWorkout","workout","post","getUserWorkouts","get","console","log","DayGrid","day","currentRegiment","setCurrentRegiment","exercise","setExercise","border","trim","includes","charAt","toUpperCase","slice","concat","name","type","flexWrap","alignContent","DaySubmissions","map","i","classNames","timeout","marginRight","marginLeft","filter","RegimentForm","submissionVisibility","setVisibility","regimentHasEmptyDay","key","length","finaliseRegiment","exerciseService","returnedRegiment","loggedUser","JSON","parse","window","localStorage","getItem","regIsSet","setItem","stringify","useEffect","marginBottom","Object","keys","item","position","bottom","justifyItems","Button","visibility","paddingRight","paddingLeft","DayForm","flexGrow","Container","fontWeight","ToggleButton","checked","dayKey","LandingPage","location","useLocation","enter","exit","path","setTodaysExercises","setDaysExercises","Date","getDay","values","exercisesFromWorkouts","workouts","exerciseArray","dayObject","exercises","exerciseNamesFromWorkouts","filterExercises","toLowerCase","datedAnalysis","exerciseName","interval","timeProperty","totalReps","getTime","date","toDateString","toLocaleDateString","month","filteredWorkouts","forEach","uniqueTimes","sets","reps","AnalysisPlot","analysis","areaChart","AreaChart","top","right","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Area","stroke","fill","Analysis","exerciseNameCache","index","indexOf","suggestions","setSuggestions","selection","setSelection","analysisType","setAnalysisType","analysisResults","setAnalysisResults","allTimeAnalysis","OverlayTrigger","placement","overlay","props","Tooltip","backgroundImage","suggestion","Dropdown","Menu","Item","HistoryWorkout","workoutDate","workoutMins","getMinutes","getHours","Table","striped","bordered","hover","History","setFilteredWorkouts","Form","FormControl","undefined","filterWorkouts","CounterButtonStyle","CounterContainerStyle","CustomToggle","children","eventKey","open","setOpen","decoratedOnClick","useAccordionToggle","ExerciseCounter","newWorkout","setNewWorkout","indexInArray","oldWorkout","oldArray","decrement","number","Accordion","Card","Header","Body","ExerciseSubmission","setWorkouts","daysExercises","uniqueNames","Set","removedExercises","setRemovedExercises","submitWorkout","_","sentWorkout","userWorkouts","uniqueName","HeadQuarters","whiteSpace","register","credentials","login","LoginService","ExerciseService","days","App","removeItem","overflow","Headquarters","registerService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6ac046e.chunk.js","sourcesContent":["import React,{useState} from \"react\" \nimport {Link } from \"react-router-dom\"\nconst LoginForm=({submitCredentials, setUser})=>{ \n\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\")\n\n\tconst inputStyle={margin:\"20px\"}\n\treturn ( \n\t\t<form  style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}onSubmit={async (event)=>{\n\t\t\tevent.preventDefault()\n\t\t\tconst user=await submitCredentials({username,password})\n\t\t\tsetUser(user)\n\t\t}}> \n\t\t\t<div style={{marginTop:\"10vh\",display:\"flex\", flexDirection:\"column\",\n\t\t\t\tbackgroundColor: \"rgba(100, 100, 100, 0.5)\", borderRadius:\"5px\",padding:\"20px\",\n\t\t\t\tjustifyContent:\"center\", alignItems:\"center\"}}>\n\t\t\t\t<h1 className=\"HomeRoute a-routeFadeIn\"style={{color:\"white\"}}>Log in</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<input style={inputStyle} value={username} placeholder=\"username\" onChange={(event)=>{\n\t\t\t\t\t\tsetUsername(event.target.value) }}/>\n\t\t\t\t\t<input style={inputStyle}  value={password} placeholder=\"password\" onChange={(event)=>{\n\t\t\t\t\t\tsetPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button style={{width:\"80px\",height:\"40px\",padding:\"5px\"}}>submit</button> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h2 className=\"HomeRoute a-routeFadeIn\" style={{marginTop:\"auto\",color:\"white\"}}>New? <Link style={{color:\"turquoise\"}} to=\"/register\"> Register </Link></h2>\n\t\t</form>\t\n\t)\n} \n\nexport default LoginForm\n","import React,{useState} from \"react\" \nimport {useHistory,Link} from \"react-router-dom\"\n\nconst RegisterForm=({submitCredentials})=>{ \n\tconst history=useHistory()\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\")\n\n\tconst inputStyle={margin:\"20px\"}\n\treturn ( \n\t\t<div >\n\t\t\t<form style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}} onSubmit={(event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tsubmitCredentials({username,password})\n\t\t\t\thistory.push(\"/\")\n\t\t\t}}> \n\t\t\t\t<div style={{marginTop:\"10vh\",display:\"flex\", flexDirection:\"column\",\n\t\t\t\t\tbackgroundColor: \"rgba(100, 100, 100, 0.5)\", borderRadius:\"5px\",padding:\"20px\",\n\t\t\t\t\tjustifyContent:\"center\", alignItems:\"center\"}}>\n\t\t\t\t\t<h1 className=\"HomeRoute a-routeFadeIn\" style={{color:\"white\",}}>Register</h1>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input style={inputStyle}value={username} placeholder=\"username\" onChange={(event)=>{\n\t\t\t\t\t\t\tsetUsername(event.target.value) }}/>\n\t\t\t\t\t\t<input style={inputStyle}value={password} placeholder=\"password\" onChange={(event)=>{\n\t\t\t\t\t\t\tsetPassword(event.target.value) }}/> \n\t\t\t\t\t</div>\n\t\t\t\t\t<button style={{width:\"80px\",height:\"40px\",padding:\"5px\"}}>submit</button> \n\t\t\t\t</div>\n\t\t\t\t<h2 className=\"HomeRoute a-routeFadeIn\" style={{color:\"white\",marginTop:\"auto\"}}>Back to <Link style={{color:\"turquoise\"}} to=\"/\"> Login </Link></h2>\n\t\t\t</form>\t\n\t\t</div>\n\t)\n}\n\n\n\n\n\nexport default RegisterForm\n","import React,{useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\" \nimport {MdDirections} from \"react-icons/md\"\n\nconst Banner=({user,logout})=>{ \n\tconst history = useHistory()\n\tconst [expanded,setExpanded]=useState(true) \n\tconst logoStyle={width:100}\n\t// Because clicking on a link in navbar would leave it expanded\n\treturn user\n\t\t? (\n\t\t\t<>\n\t\t\t\t<Navbar expanded ={expanded} bg=\"light\" variant=\"light\" expand=\"sm\">\n\t\t\t\t\t<Navbar.Brand onClick={()=>{setExpanded(false); history.push(\"/\")}}><img style={logoStyle} src=\"https://svgsilh.com/svg_v2/1539614.svg\"/></Navbar.Brand>\n\t\t\t\t\t<Navbar.Text>{user.username}</Navbar.Text>\n\t\t\t\t\t<Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")}  \n\t\t\t\t\t\taria-controls=\"basic-navbar-nav\" />\n\t\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t\t<Nav.Link onClick={()=>{setExpanded(false);history.push(\"/\")}}> Home</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link onClick={()=>{setExpanded(false);history.push(\"/analysis\")}}> Analysis</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link onClick={()=>{setExpanded(false);history.push(\"/history\")}}> History</Nav.Link>\n\t\t\t\t\t\t\t<Nav.Link onClick={()=>{logout();history.push(\"/\")}}>Disconnect</Nav.Link>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar.Collapse >\n\t\t\t\t</Navbar>\n\t\t\t</>\n\t\t)\n\t\t:(\n\t\t\t<Navbar style={{display:\"flex\", justifyContent:\"center\",backgroundColor:\"#eeeeee\", color:\"black\"}}>\n\t\t\t\t<Navbar.Brand><img style={logoStyle} src=\"https://svgsilh.com/svg_v2/1539614.svg\"/></Navbar.Brand>\n\t\t\t\t<Navbar.Text><h2 style={{color:\"black\"}} >Welcome to Fitness Express! Next stop <MdDirections size=\"2em\" color=\"black\" /> Gainsville!</h2></Navbar.Text>\n\t\t\t</Navbar>\n\t\t)\n}\n\n\nexport default Banner\n","import axios from \"axios\"\nconst baseUrl = \"/api/workout\"\n\nlet token = null \nconst setToken = newToken=> {\n\ttoken = `bearer ${newToken}`\n}\n\nconst setRegiment=async(regiment)=> {\n\tconst config = {\n\t\theaders:{Authorization:token,\n\t\t}}\n\tconst response = await axios.patch(`${baseUrl}/regiment`, regiment, config)\n\treturn response.data\n}\n\nconst sendWorkout=async(workout)=> {\n\tconst config = {\n\t\theaders:{Authorization:token}\n\t}\n\tconst response = await axios.post(baseUrl, workout, config)\n\treturn response.data\n}\n\nconst getUserWorkouts=async()=>{\n\tconst config ={\n\t\theaders:{Authorization:token}\n\t}\n\tconst response = await axios.get(baseUrl, config)\n\tconsole.log(response.data)\n\treturn response.data\n}\n\nexport default {setToken,sendWorkout,getUserWorkouts,setRegiment}\n\n","import React,{useState} from \"react\"\n\nconst DayGrid=({day,currentRegiment,setCurrentRegiment})=>{ \n\tconst [exercise,setExercise] = useState(\"\") //individual exercise to control input\n\n\tif(!currentRegiment[day]){return(null)} //If inactive day\n\treturn( \n\n\t\t<form style={{borderRadius:\"20px\",margin:\"5px\",display:\"flex\",flexDirection:\"column\", border:\"1px solid black\",\n\t\t\tjustifyContent:\"center\",}} onSubmit={(event)=>{event.preventDefault()\n\t\t\t{/*Append submitted exercise to one of day arrays in currentRegiment*/}\n\t\t\tif(exercise.trim()){ //no empty strings\n\t\t\t\tif(currentRegiment[day].includes( //no same exercise in day\n\t\t\t\t\t(exercise.charAt(0).toUpperCase()+ // compare formatted entry\n\t\t\t\t\texercise.slice(1)).trim())){\n\t\t\t\t\tconsole.log(\"you're already doing that today\")} \n\n\t\t\t\telse{ //format and update state\n\t\t\t\t\tsetCurrentRegiment({...currentRegiment, [day]:currentRegiment[day].concat(\n\t\t\t\t\t\t(exercise.charAt(0).toUpperCase()+exercise.slice(1)).trim()) }) //Capitalise first letter, and trim whitespace off ends\n\t\t\t\t\tsetExercise(\"\")\n\t\t\t\t}}\n\t\t}}> \n\n\t\t\t<div style={{borderRadius:\"20px\",backgroundColor:\"#DDDDDD\", display:\"flex\", flexDirection:\"column\"}}> {/*exercise input*/}\n\t\t\t\t<h2 style={{margin:\"20px\", color:\"black\"}}>{day}</h2> \n\t\t\t\t<input value={exercise} name={day} placeholder={day} onChange={(event)=>{\n\t\t\t\t\tif(event.target.value!==\" \"){\n\t\t\t\t\t\tsetExercise(event.target.value)\n\t\t\t\t\t}}}/>\n\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t</div> \n\n\t\t\t<div style={{display:\"flex\",flexWrap:\"wrap\",flexDirection:\"column\",\n\t\t\t\talignContent:\"center\",justifyContent:\"space-between\"}}>\n\n\t\t\t</div>\n\t\t</form> \n\t)\n\n}\n\nexport default DayGrid","import React from \"react\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nconst DaySubmissions=({currentRegiment,setCurrentRegiment, day})=>{\n\n\treturn(\n\t\t<div key={day} style={{backgroundColor:\"black\",display:\"flex\", flexDirection:\"column\",alignItems:\"center\",borderRadius:\"20px\",border:\"1px solid green\",padding:\"10px\",margin:\"10px\", }}>\n\t\t\t<h2 style={{color:\"white\"}}>{day}</h2>\n\n\t\t\t<TransitionGroup> {/*for fade effect*/}\n\t\t\t\t{currentRegiment[day].map((exercise,i)=>( \n\t\t\t\t\t<CSSTransition classNames=\"t-daySubmission\" timeout={300} key={i}>\n\t\t\t\t\t\t<div  style={{display:\"flex\", flexDirection:\"column\",alignContent:\"center\",alignItems:\"center\",\n\t\t\t\t\t\t\tjustifyContent:\"center\",\n\t\t\t\t\t\t\tmarginTop:\"10px\"   }}> {/*show each submitted exercise*/}\n\t\t\t\t\t\t\t<div style={{width:\"100%\",display:\"flex\",  alignContent:\"center\",alignItems:\"center\"}}>\n\t\t\t\t\t\t\t\t<h5 style={{color:\"white\",margin:\"8px\",marginRight:\"20px\"}}>\n\t\t\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t\t\t</h5> \n\t\t\t\t\t\t\t\t{/*remove exercise*/}\n\t\t\t\t\t\t\t\t<button  style={{padding:\"5px\",marginLeft:\"auto\"}}type=\"button\" onClick={()=>\n\t\t\t\t\t\t\t\t\tsetCurrentRegiment( \n\t\t\t\t\t\t\t\t\t\t{...currentRegiment, \n\t\t\t\t\t\t\t\t\t\t\t[day]:currentRegiment[day].filter((name)=>(\n\t\t\t\t\t\t\t\t\t\t\t\tname!=exercise)\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t)}><h5 style={{color:\"white\"}}>remove</h5>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t))}\n\t\t\t</TransitionGroup>\n\n\t\t</div>\n\t\t\t\t\t\t\n\t)\n\n}\n\n\nexport default DaySubmissions","import React,{useState,useEffect} from \"react\"\nimport Button from \"react-bootstrap/Button\" \nimport exerciseService from \"../Services/exercises\"\nimport {useHistory} from \"react-router-dom\"\nimport DayGrid from \"./DayGrid\"\nimport DaySubmissions from \"./DaySubmissions\"\nimport {MdFitnessCenter} from \"react-icons/md\"\n\nconst RegimentForm=({user,setUser,currentRegiment, setCurrentRegiment})=>{ \n\tconst [submissionVisibility,setVisibility]=useState(\"hidden\") \n\tconst history = useHistory() \n\n\tconst regimentHasEmptyDay=()=>{  //returns true if any entry is empty\n\t\tfor (const key in currentRegiment){\n\t\t\tif(currentRegiment[key]&&currentRegiment[key].length===0){\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\tconst finaliseRegiment=async()=>{ //when regiment form has been filled out\n\t\tif (!regimentHasEmptyDay()){ // Don't allow submission unless all active days are filled \n\t\t\tconst returnedRegiment=await exerciseService.setRegiment(currentRegiment) //use server's response as data to be set. Also sets regIsSet in server\n\t\t\tconst loggedUser=JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\n\t\t\tsetUser({...user, regIsSet:true}) //update local data\n\t\t\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(returnedRegiment))\n\t\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({...loggedUser,regIsSet:true}))\n\t\t\thistory.push(\"/\")\n\t\t}\n\t}\n\n\tuseEffect(()=>{\n\t\tregimentHasEmptyDay() \n\t\t\t? setVisibility(\"hidden\")\n\t\t\t: setVisibility(\"visible\") \n\t},[currentRegiment]) //Make submission button appear only once everything is filled\n\n\treturn(\n\t\t<div className=\"HomeRoute a-routeFadeIn\" style={{display:\"flex\", flexDirection:\"column\", alignItems:\"center\",marginTop:\"20px\",height:\"100%\",}}>\n\n\t\t\t<div style={{marginBottom:\"40px\",padding:\"0 25px 0 25px\",borderRadius:\"40px\",backgroundColor:\"white\"}}>\n\t\t\t\t<h1 >Time to fill out your weekly regiment!  <MdFitnessCenter/></h1>\n\t\t\t\t<h3 >(Don&apos;t worry, you can reset it at any time)</h3>\n\t\t\t</div>\n\t\t\t<div style={{display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\", alignItems:\"flex-start\"}}> \n\t\t\t\t{/*for each  (non-null) day-array in currentRegiment, create a DayGrid to fill in target exercises*/}\n\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>(  \n\t\t\t\t\t<DayGrid key={i} day={item} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>\n\t\t\t\t))} \n\n\t\t\t\t<div style={{marginBottom:\"8px\",alignItems:\"center\",position:\"fixed\",bottom:\"0\",\n\t\t\t\t\tflexWrap:\"wrap\",display:\"flex\",justifyContent:\"center\",justifyItems:\"center\", \n\t\t\t\t\tbackgroundColor:\"rgb(0,0,0,0.9)\", borderRadius:\"20px\"}}>\n\t\t\t\t\t{/*Same, but for submissions of a day*/}\n\t\t\t\t\t{Object.keys(currentRegiment).map((day)=>{\n\t\t\t\t\t\tif(!currentRegiment[day]){return(null)}\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<DaySubmissions key={day} day={day} setCurrentRegiment={setCurrentRegiment}currentRegiment={currentRegiment}/> \n\t\t\t\t\t\t)})}\n\t\t\t\t</div>\n\t\t\t</div >\n\t\t\t<div>\n\t\t\t\t<Button style={{backgroundColor:\"green\",visibility:submissionVisibility,\n\t\t\t\t\tmarginBottom:\"80px\",width:\"80px\",height:\"80px\",\n\t\t\t\t\tborderRadius:\"20px\",paddingRight:\"0px\",paddingLeft:\"0px\"}}\n\t\t\t\tonClick={()=>{finaliseRegiment()}}>\n\t\t\t\t\t<h4>All set</h4>\n\t\t\t\t</Button>   \n\n\t\t\t\t<Button style={{backgroundColor:\"red\",\n\t\t\t\t\tmarginBottom:\"80px\",width:\"80px\",height:\"80px\",\n\t\t\t\t\tborderRadius:\"20px\",paddingRight:\"0px\", paddingLeft:\"0px\"}}\n\t\t\t\tonClick={()=>{history.push(\"/\")}}>\n\t\t\t\t\t<h4>Back</h4>\n\t\t\t\t</Button>   \n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default RegimentForm\n","import React from \"react\"\nimport ToggleButton from \"react-bootstrap/ToggleButton\"\nimport Button from \"react-bootstrap/Button\"\nimport {useHistory} from \"react-router-dom\"\nimport  Container from \"react-bootstrap/Container\"\nimport Banner from \"../Components/Banner\"\n\nconst DayForm=({currentRegiment,setCurrentRegiment})=>{\n\tconst history=useHistory()\n\n\tconst toggleRegimentDay=(dayKey)=>{  //toggles a specific day between null/empty array\n\t\tif (currentRegiment[dayKey]){\n\t\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:null})\n\t\t\treturn\n\t\t}\n\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:[]})\n\t} \n\treturn(\n\t\t<div style={{ display:\"flex\", flexDirection:\"column\", flexGrow:\"1\"}}className=\"HomeRoute a-routeFadeIn\">\n\t\t\t<Banner/>\n\t\t\t<Container style={{ flexGrow:\"1\",display:\"flex\",flexDirection:\"column\", justifyContent:\"center\"}}>\n\t\t\t\t<form style={{padding:\"50px\",borderRadius:\"20px\",backgroundColor:\"rgb(255,255,255,0.35)\",display:\"flex\",flexDirection:\"column\", alignItems:\"center\"}}> {/*one checkbox for each day, to toggle if it will be an active day or not*/}\n\t\t\t\t\t<h1 style={{borderRadius:\"20px\",padding:\"20px\",backgroundColor:\"rgb(255,255,255,0.95)\",fontWeight:\"bold\",color:\"black\",marginTop:\"40px\"}}>Which days will you be working out on?</h1>\n\t\t\t\t\t<div style={{flexWrap:\"wrap\",marginTop:\"20px\",display:\"flex\", justifyContent:\"center\",justifyItems:\"center\"}}>\n\t\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>{ \n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<div key={i} style={{ \n\t\t\t\t\t\t\t\t\tbackgroundColor:currentRegiment[item]\n\t\t\t\t\t\t\t\t\t\t? \"rgb(0,200,0)\"\n\t\t\t\t\t\t\t\t\t\t: \"rgb(172,100,100)\", margin:\"20px\",borderRadius:\"10px\",border:\"1px solid white\",display:\"flex\",flexDirection:\"column\", alignItems:\"center\", }}>\n\t\t\t\t\t\t\t\t\t<h2 style={{color:\"white\"}}>{item}</h2>\n\t\t\t\t\t\t\t\t\t<ToggleButton size=\"lg\"style={{backgroundColor:\"white\",borderRadius:\"50%\",margin:\"20px\"}}key={i} checked={currentRegiment[item]} \n\t\t\t\t\t\t\t\t\t\tvalue=\"\" type=\"checkbox\" onChange={()=>{toggleRegimentDay(item)}}>\n\t\t\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Button size=\"lg\"style={{marginTop:\"20px\",backgroundColor:\"green\"}}onClick={(event)=>{\n\t\t\t\t\t\tevent.preventDefault();history.push(\"/setTargetWorkout\")}}>Next</Button> \n\t\t\t\t</form>\n\t\t\t</Container>\n\t\t</div>\n\n\t)\n}\n\nexport default DayForm","import React,{useEffect} from \"react\" \nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\nimport RegimentForm from \"./RegimentForm\"\nimport DayForm from \"./DayForm\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nconst LandingPage=({currentRegiment,setCurrentRegiment,user,setUser})=>{ //Responsible for weekly regiment setup\n\tconst location=useLocation()\n\n\tuseEffect(()=>{  \n\t\tconst regiment=JSON.parse(window.localStorage.getItem(\"currentRegiment\"))\n\t\tsetCurrentRegiment(regiment)\n\t},[]) \n\t\n\treturn (  \n\t\t<TransitionGroup style={{flexGrow:\"1\",display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t<CSSTransition\n\t\t\t\tkey={location}\n\t\t\t\ttimeout={{ enter: 500, exit: 200 }}>\n\t\t\t\t<Switch location={location}>\n\t\t\t\t\t<Route path=\"/setTargetWorkout\"> {/*second page*/}\n\t\t\t\t\t\t<RegimentForm user={user} setUser={setUser} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>)\n\t\t\t\t\t</Route> \n\t\t\t\t\t<Route path=\"/\"> {/*initial page*/}\n\t\t\t\t\t\t<DayForm currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/> \n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</CSSTransition>\n\t\t</TransitionGroup>\n\t)\n} \n\nexport default LandingPage","export const setTodaysExercises = (currentRegiment, setDaysExercises) => { \n\tconst day=(new Date()).getDay() //Sunday starts at 0 with Date method - with currentRegiment array at 6.\n\tif (day===0){ //Case when Sunday\n\t\tconst exercisesForToday=(Object.values(currentRegiment)[6]) \n\t\tsetDaysExercises(exercisesForToday)\n\t}\n\telse{ //For all other days we can just -1.\n\t\tconst exercisesForToday=(Object.values(currentRegiment)[day-1]) \n\t\tsetDaysExercises(exercisesForToday) \n\t} \n}\n\nexport const exercisesFromWorkouts=(workouts)=>{ //exercise data is nested a bit deep\n\tconst exerciseArray = [] \n\tworkouts.map((dayObject)=>(dayObject.exercises))\n\t\t.map((workout)=>{ \n\t\t\texerciseArray.push(...workout)\n\t\t})\n\treturn exerciseArray \n}\n\n//same as above, but one step further\nexport const exerciseNamesFromWorkouts=(workouts)=>{\n\treturn(\n\t\texercisesFromWorkouts(workouts).map((exercise)=>exercise.name)\n\t)\n\n}\nexport const filterExercises = (exercises, name) => ( \n\t//Filter exercise array of a workout object\n\texercises.filter((exercise) => (\n\t\texercise.name.toLowerCase().includes(name.toLowerCase())\n\t))\n)\n\nexport const getTotalReps = (exercises, name) => { \n\t{ /**\n\t\t* ! Because of filterExercises(), if searching for totalReps of \"abs\", \n\t\t\tabs curls and abs crunches will be mixed together.\n\t\t**/\n\t}\n\t/*e.g. if user did 3 sets of 8, and then 2 sets of 2 => return 8*3+1*2*/\n\ttry{\n\t\tconst filteredWorkouts = filterExercises(exercises, name) //filter exercises by name \n\t\tconst repsArray = filteredWorkouts.map((exercise) => { //total reps on each exercise\n\t\t\treturn (exercise.reps*exercise.sets)\n\t\t}) \n\t\t//sum all reps in array\n\t\treturn( repsArray.reduce((sum,currentValue)=>(sum+currentValue)))\n\t}\n\tcatch{\n\t\tconsole.log(\"Provided exercise does not seem to be in the array\") } \n}\n\nexport const getDaysWorkout = (days) => { //returns array of isolated exercise objects \n\tconst today = new Date().toDateString()\n\tconst objectArray = days.filter((day) => ( //only keep workouts that happened today\n\t\ttoday == new Date(day.date).toDateString()\n\t))\n\tconst exerciseArray = exercisesFromWorkouts(objectArray) \n\n\treturn exerciseArray\n}\n\n//! Not used, keeping just in case\nexport const getWeeksWorkouts = (days)=>{ \n\tconst weekMillis = 604800000 //milliseconds in a week\n\tconst today=new Date().getTime()\n\n\tconst result=exercisesFromWorkouts(days.filter((day)=>{\n\t\tconst date=new Date(day.date).getTime()\n\t\treturn( //if less than a week's worth of milliseconds\n\t\t\ttoday-date<=weekMillis\n\t\t)\n\t}))\n\treturn result\n}\n\nexport const getMonthsWorkouts = (days)=>{\n\tconst monthMillis = 2678400000 //TODO not 100% sure on this => 31*24*60*60*1000\n\tconst today=new Date().getTime()\n\n\tconst result=exercisesFromWorkouts(days.filter((day)=>{\n\t\tconst date=new Date(day.date).getTime()\n\t\treturn( //if less than a week's worth of milliseconds\n\t\t\ttoday-date<=monthMillis\n\t\t)\n\t}))\n\treturn result\n}\n\nexport const getAllWorkouts=(days)=>{\n\treturn exercisesFromWorkouts(days)\n}\n\nexport const datedAnalysis=(workouts,exerciseName,interval)=>{ //interval = daily / monthly\n\t/*Aggregate data for a specific exercise over a time period.\n\tReturns array of objects with unique \"timeProperty\" and \"totalReps\" fields*/\n\n\tif(interval!==\"daily\" && interval !== \"monthly\"){\n\t\tconsole.log(\"Interval is invalid\")\n\t\treturn }\n\n\tconst getTime = interval === \"daily\" //To compare time of workouts\n\t\t? (exercise) => (new Date (exercise.date).toDateString())\n\t\t: (exercise) => (new Date (exercise.date).toLocaleDateString(\"default\",{month:\"long\"})) \n\n\tconst filteredWorkouts=[] //Array of objects containing date and exercise\n\tworkouts.filter((workout)=>{ \n\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName) \n\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})\n\t\t}) \n\t}) \n\n\tif(filteredWorkouts.length==0){return(null)} //if empty, abort\n\n\tlet timeProperty // for getting formatted dates with getTime()\n\tlet totalReps // reps accumulator\n\tconst uniqueTimes=[] //array of unique dates / months\n\n\tif (filteredWorkouts.length==1){ // If only one workout, return reps*sets and date\n\t\ttotalReps=filteredWorkouts[0].sets*filteredWorkouts[0].reps\n\t\ttimeProperty = getTime(filteredWorkouts[0]) \n\t\treturn({timeProperty, totalReps})}\n\n\tfilteredWorkouts.forEach((workout,i)=>{\n\t\tif(i===0){ // if first repetition\n\t\t\ttimeProperty = getTime(workout)  //initialise time and reps\n\t\t\ttotalReps=workout.exercise.reps*workout.exercise.sets\n\t\t} \n\t\telse{\n\t\t\tif (timeProperty === getTime(workout)){ // Same date \n\t\t\t\tif (i!==filteredWorkouts.length-1){ // Not end of array, aggregate reps\n\t\t\t\t\ttotalReps+=workout.exercise.reps*workout.exercise.sets\n\t\t\t\t}\n\t\t\t\telse{ // End of array, push final entry\n\t\t\t\t\ttotalReps+=workout.exercise.reps*workout.exercise.sets\n\t\t\t\t\tuniqueTimes.push({timeProperty,totalReps}) }  \n\t\t\t}\n\n\t\t\telse{ // different date\n\t\t\t\tuniqueTimes.push({timeProperty, totalReps}) //push reps so far\n\t\t\t\ttimeProperty=getTime(workout) //set time and reps equal to current workout\n\t\t\t\ttotalReps=workout.exercise.reps*workout.exercise.sets\n\t\t\t}\n\t\t}\n\n\t} )\n\tconsole.log(uniqueTimes)\n\treturn(uniqueTimes)\n}\n\nexport const allTimeAnalysis=(workouts,exerciseName)=>{ \n\tconst filteredWorkouts=[]\t\n\tlet totalReps=0\n\n\tworkouts.map((workout)=>{   //For every workout\n\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)   // filter exercises\n\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise}) // and push data\n\t\t}) \n\t}) \n\n\tfilteredWorkouts.forEach((workout)=>{  // Accumulate reps\n\t\ttotalReps+=workout.exercise.reps*workout.exercise.sets \n\t})\n\n\treturn [{timeProperty:\"All-Time\", totalReps}]\n}\n\n","import React from \"react\"\nimport { CartesianGrid,AreaChart, Area, XAxis, YAxis,  Tooltip, } from \"recharts\"\n\nconst AnalysisPlot=({analysis})=>{\n\tconsole.log(analysis)\n\n\tconst areaChart=(\n\t\t<AreaChart\n\t\t\twidth={600}\n\t\t\theight={400}\n\t\t\tdata={analysis}\n\t\t\tmargin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n\t\t>\n\t\t\t<CartesianGrid strokeDasharray=\"10 10\" />\n\t\t\t<XAxis dataKey=\"timeProperty\" />\n\t\t\t<YAxis />\n\t\t\t<Tooltip />\n\t\t\t<Area\n\t\t\t\ttype='monotone'\n\t\t\t\tdataKey='totalReps'\n\t\t\t\tstroke='#8884d8'\n\t\t\t\tfill='#8884d8'\n\t\t\t/>\n\t\t</AreaChart> \n\t)\n\n\n\tif(analysis){ \n\t\treturn (\n\t\t\tareaChart\n\t\t)\n\n\t}\n\treturn(null)\n}\n\nexport default AnalysisPlot\n","import React,{useState, useEffect} from \"react\" \nimport {allTimeAnalysis,exerciseNamesFromWorkouts, datedAnalysis} from \"../Functions/workoutFunctions\"\nimport Button from \"react-bootstrap/Button\"\nimport Tooltip from \"react-bootstrap/Tooltip\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\nimport AnalysisPlot from \"./AnalysisPlot\"\n\nconst Analysis=({workouts})=>{\n\n\t/***************STYLING******************/\n\tconst toolTipButtonStyle={\n\t\tmarginLeft:\"10px\",\n\t\tborderRadius:\"90%\",\n\t\tbackgroundImage: \"linear-gradient(to bottom, rgba(0,0,0,0.6), rgba(255,255,255,0.2) 39%,rgba(255,255,255,0.15) 11%,rgba(0,0,0,1))\",\n\t\twidth:\"30px\"\n\t}\n\n\tconst renderTooltip = (props) => (\n\t\t<Tooltip id=\"button-tooltip\" {...props}>\n\t\t\tStart typing an exercise name! :)\n\t\t</Tooltip>\n\t)\n\t/***************STYLING******************/\n\n\tconst exerciseNameCache=exerciseNamesFromWorkouts(workouts)\n\t\t.filter((name,index)=>( //keep only 1 instance of each name\n\t\t\texerciseNamesFromWorkouts(workouts).indexOf(name)===index)\n\t\t\t/*indexOf returns index of first matching element\n\t\t\tif repetition of element in array, it will not equal the index of the first\n\t\t\telement, thus being discarded */\n\t\t)\n\tconst [suggestions,setSuggestions]=useState([]) \n\tconst [selection,setSelection]=useState(null)  //Selection to be analysed\n\tconst [analysisType,setAnalysisType]=useState(null)  //Daily/Monthly/All-Time\n\tconst [analysisResults,setAnalysisResults]=useState(null)  //Data from analysis\n\n\tuseEffect(()=>{\n\t\tif(analysisType===\"Daily\"){\n\t\t\tsetAnalysisResults(datedAnalysis(workouts,selection||suggestions[0],\"daily\"))\n\t\t}\n\t\telse if(analysisType===\"Monthly\"){\n\t\t\tsetAnalysisResults(datedAnalysis(workouts,selection||suggestions[0],\"monthly\"))\n\t\t} \n\t\telse{setAnalysisResults(allTimeAnalysis(workouts,selection||suggestions[0])) }\n\n\t},[selection, analysisType])\n\t\n\treturn(\n\t\t<div style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\",alignContent:\"center\",alignItems:\"center\"}}>\n\t\t\t{ analysisResults && selection && \n\t\t\t(\n\t\t\t\t<div style={{marginTop:\"10px\",display:\"flex\", flexDirection:\"column\", alignItems:\"center\"}}>\n\t\t\t\t\t<h2 style={{color:\"white\",borderRadius:\"50px\",padding:\"20px\",backgroundColor:\"black\"}}>{analysisType}</h2>\n\t\t\t\t\t<AnalysisPlot analysis={analysisResults}/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div>\n\t\t\t\t<input style={{marginTop:\"20px\"}} onChange={(event)=>{ //filter suggestions\n\t\t\t\t\tsetSuggestions(exerciseNameCache.filter((name)=>(\n\t\t\t\t\t\tname.toLowerCase().includes(event.target.value.toLowerCase())\n\t\t\t\t\t))) }} placeholder=\"exercise\"> \n\t\t\t\t</input> \n\t\t\t\t<OverlayTrigger placement=\"right\"\n\t\t\t\t\toverlay={renderTooltip}>\n\t\t\t\t\t<Button size=\"sm\" variant=\"primary\" style={toolTipButtonStyle}>?</Button>\n\t\t\t\t</OverlayTrigger>\n\t\t\t</div>\n\t\t\t{suggestions.length<5 //if suggestions narrowed down, allow setting the selection for analysis\n\t\t\t\t? (<ul style={{marginTop:\"30px\",padding:\"0px\",display:\"flex\", \n\t\t\t\t\tjustifyContent:\"center\",\n\t\t\t\t\tjustifyItems:\"center\", alignContent:\"center\",\n\t\t\t\t}}>{suggestions.map((suggestion,index)=> \n\t\t\t\t\t\t(<div style={{ margin:\"0px 5px 0px 10px\",display:\"flex\", flexDirection:\"column\", alignItems:\"center\",}}key={index}>\n\t\t\t\t\t\t\t<h5 style={{color:\"black\"}}>{suggestion}</h5> \n\t\t\t\t\t\t\t<Dropdown key ={`${index}Button`}>\n\t\t\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAnalyse \n\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Daily\");setSelection(suggestions[index])}}> Daily</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Monthly\");setSelection(suggestions[index])}}> Monthly</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"All-Time\");setSelection(suggestions[index])}}> All-Time</Dropdown.Item>\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t)} </ul>)  \n\t\t\t\t: (<h2 style={{margin:\"40px 0 40px 0\",color:\"black\"}}>Too many suggestions to show!</h2>)}\n\n\t\t</div>\n\t)\n}\n\nexport default Analysis","import React from \"react\"\nimport Table from \"react-bootstrap/Table\"\n\nconst HistoryWorkout = ({workout}) => {\n\n\tif(workout){\n\t\tconst workoutDate=new Date(workout.date)\n\t\tconst workoutMins= workoutDate.getMinutes() < 10\n\t\t\t? \"0\"+workoutDate.getMinutes() // to make double digit\n\t\t\t: workoutDate.getMinutes()\n\t\treturn( \n\t\t\t<div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n\t\t\t\t<h1 style={{backgroundColor:\"\",color:\"black\",padding:\"10px\",borderRadius:\"20px\",\n\t\t\t\t\tmarginTop:\"40px\"}}>{workoutDate.toDateString() +\", \" \n\t\t\t\t\t\t\t\t+ workoutDate.getHours()+ \":\" \n\t\t\t\t\t\t\t\t+ workoutMins}</h1>\n\t\t\t\t<Table striped bordered hover variant=\"dark\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr style={{backgroundColor:\"black\", }}> \n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Exercise</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Repetitions</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Sets</h2></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{workout.exercises.map((exercise,index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.name}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.reps}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.sets}</h3></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t)}\n}\nexport default HistoryWorkout","import React, {useState} from \"react\"\nimport {filterExercises} from \"../Functions/workoutFunctions\"\nimport Form from \"react-bootstrap/Form\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport HistoryWorkout from \"./HistoryWorkout\"\n\nconst History=({workouts})=>{ \n\tconst [filteredWorkouts,setFilteredWorkouts]=useState(workouts) \n\t//Will be using filteredWorkouts for everything.\n\n\tconst filterWorkouts=(workouts,filter)=>{ \n\t\tsetFilteredWorkouts(\n\t\t\tworkouts.map((workout)=>{ \n\t\t\t\t/* If no match, result will be empty array. */\n\t\t\t\tconst result=filterExercises(workout.exercises,filter)\n\t\t\t\tif(result.length!==0){return(workout)}  //if non-empty array\n\t\t\t}).filter((value)=>value!=undefined))\n\t}\n\n\treturn(\n\t\t<div style={{padding:\"20px 90px 0 90px\",flexGrow:\"1\",display:\"flex\", \n\t\t\tflexDirection:\"column\", alignContent:\"center\",justifyContent:\"center\",\n\t\t\talignItems:\"center\",justifyItems:\"center\",}}>\n\t\t\t<Form  onSubmit={(event)=>{event.preventDefault()}}>\n\t\t\t\t<FormControl type=\"text\" placeholder=\"Search exercises\" className=\"mr-sm-2\" onChange={(event)=>{ \n\t\t\t\t\tfilterWorkouts(workouts,event.target.value)\n\t\t\t\t}} />\n\t\t\t</Form>\n\n\t\t\t{ filteredWorkouts.length>0 && \n\t\t\t<ul style={{backgroundColor:\"white\",borderRadius:\"20px\",margin:\"10px\",padding:\"20px\",border:\"2px solid black\",display:\"flex\", flexDirection:\"column\", }}>\n\t\t\t\t{filteredWorkouts.map((workout,index)=>( \n\t\t\t\t\t<HistoryWorkout workout={workout} key={index}/> \n\t\t\t\t))}\n\t\t\t</ul>}\n\t\t</div>\n\n\t)\n}\n\nexport default History","import React,{useEffect,useState} from \"react\"\nimport Button from \"react-bootstrap/Button\"\nimport Accordion from \"react-bootstrap/Accordion\"\nimport Card from \"react-bootstrap/Card\"\nimport {useAccordionToggle} from \"react-bootstrap/AccordionToggle\"\nimport {GoEyeClosed} from \"react-icons/go\"\nimport {AiFillEye} from \"react-icons/ai\"\n\nconst CounterButtonStyle={margin:\"10px\", height:\"60px\", width:\"60px\", borderRadius:\"50%\" }\nconst CounterContainerStyle={alignItems:\"center\", margin:\"5px\",backgroundColor:\"white\", borderRadius:\"30px\", display:\"flex\",flexDirection:\"column\"}\n\nfunction CustomToggle({ children, eventKey,open, setOpen }) { \n\tconst decoratedOnClick = useAccordionToggle(\n\t\teventKey,\n\t\t() => setOpen(!open)\n\t) \n\treturn (\n\t\t<Button\n\t\t\tstyle={{ color:\"white\",backgroundColor: open ? \"red\" : \"green\" }}\n\t\t\tonClick={decoratedOnClick}\n\t\t>\n\t\t\t{children}\n\t\t</Button>)}\n\nconst ExerciseCounter=({newWorkout, setNewWorkout,indexInArray,exerciseName})=>{ \n\tconst [exercise,setExercise] = useState({name:exerciseName, reps:1, sets:1})\n\tconst [open,setOpen] = useState(false) // if counter is expanded \n\n\tconsole.log(newWorkout)\n\n\tuseEffect(()=>{ // To handle outside changes to newWorkout (can trigger itself, but if statement returns it)\n\t\tif (newWorkout[indexInArray]==exercise){return} //is up to date\n\t\telse{\n\t\t\tconst oldWorkout=[...newWorkout] // mutably update oldWorkout\n\t\t\toldWorkout[indexInArray]=exercise\n\t\t\tsetNewWorkout(oldWorkout) //to immutably update state\n\t\t}\n\t},[newWorkout])\n\n\tuseEffect(()=>{ // update newWorkout\n\t\tif(exercise){ \n\t\t\tif(newWorkout.length>0){\n\t\t\t\tconst oldArray=[...newWorkout]\n\t\t\t\toldArray[indexInArray]=exercise\n\t\t\t\tsetNewWorkout(oldArray)\n\t\t\t} \n\t\t\telse{ //If first exercise\n\t\t\t\tsetNewWorkout([exercise]) \n\t\t\t} \n\t\t} \n\t},[exercise]) \n\n\tconst decrement=(number)=>( //1 set of 1 reps is minimum submittable \n\t\tnumber-1 || 1) \n\n\treturn(\n\t\t<div> \n\t\t\t<Accordion>\n\t\t\t\t<Card>\n\t\t\t\t\t<Card.Header style={{border:\"none\",width:\"100%\"}}>\n\t\t\t\t\t\t<h3 style={{color:\"black\"}}>{exerciseName} </h3>\n\t\t\t\t\t\t<CustomToggle open={open} setOpen={setOpen} eventKey=\"0\"> \n\t\t\t\t\t\t\t{open \n\t\t\t\t\t\t\t\t?<GoEyeClosed/>\n\t\t\t\t\t\t\t\t:<AiFillEye/>} \n\t\t\t\t\t\t</CustomToggle> \n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Accordion.Collapse  eventKey=\"0\">\n\t\t\t\t\t\t<Card.Body style={{borderRadius:\"20px\",backgroundColor:\"rgb(0,0,0,0.8)\", display:\"flex\"}}>\n\t\t\t\t\t\t\t{exercise &&\n\t\t\t\t<>\n\t\t\t\t\t<div style={CounterContainerStyle}> \n\t\t\t\t\t\t<Button style={CounterButtonStyle} onClick={()=>{\n\t\t\t\t\t\t\tif(open){\n\t\t\t\t\t\t\t\tsetExercise({...exercise, reps:exercise.reps+1})\n\t\t\t\t\t\t\t}}}><h1>+</h1>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<h3>{exercise.reps} </h3>\n\n\t\t\t\t\t\t<Button style={CounterButtonStyle} onClick={()=>{\n\t\t\t\t\t\t\tif(open){\n\t\t\t\t\t\t\t\tsetExercise({...exercise, reps:decrement(exercise.reps)})\n\t\t\t\t\t\t\t}}}><h1>-</h1>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<h3>reps</h3> \n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"d-flex\" style={CounterContainerStyle}> \n\t\t\t\t\t\t<Button style={CounterButtonStyle} onClick={()=>{\n\t\t\t\t\t\t\tif(open){ \n\t\t\t\t\t\t\t\tsetExercise({...exercise, sets:exercise.sets+1}) }}} ><h1>+</h1>\n\t\t\t\t\t\t</Button> \n\t\t\t\t\t\t<h3>{exercise.sets}</h3>\n\t\t\t\t\t\t<Button style={CounterButtonStyle} onClick={()=>{ \n\t\t\t\t\t\t\tif(open){\n\t\t\t\t\t\t\t\tsetExercise({...exercise, sets:decrement(exercise.sets)}) \n\t\t\t\t\t\t\t}}} ><h1>-</h1>\n\t\t\t\t\t\t</Button> \n\t\t\t\t\t\t<h3>sets</h3> \n\t\t\t\t\t</div> \n\t\t\t\t</>}\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Accordion.Collapse>\n\t\t\t\t</Card>\n\t\t\t</Accordion>\n\n\t\t</div>\n\t) \n}\nexport default ExerciseCounter\n","import React,{useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\n\nimport ExerciseCounter from \"../Components/ExerciseCounter\"\nimport exerciseService from \"../Services/exercises\" \nimport {setTodaysExercises} from \"../Functions/workoutFunctions\"\n\nconst ExerciseSubmission=({currentRegiment,\n\tsetWorkouts,\n\tdaysExercises,setDaysExercises})=>{ \n\tconst uniqueNames=[... new Set(daysExercises)]\n\tconst history=useHistory()\n\n\tif (!daysExercises){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h1>\n\t\t\tNo exercises for today! Get some rest you beast :) \n\t\t\t\t</h1>\n\t\t\t\t<button onClick={()=>{history.push(\"/\")}}>Home</button>\n\t\t\t</div> \n\t\t)}\n\n\tconst [newWorkout, setNewWorkout]=useState([])\n\tconst [removedExercises, setRemovedExercises]=useState([])\n\n\tconst submitWorkout=async ()=>{\n\t\tconsole.log(\"newWorkout is\",newWorkout)\n\n\t\tif(newWorkout.length>0){\n\t\t\tconst validEntries = newWorkout // Non-empty\n\t\t\t\t.filter((_,i) =>  \n\t\t\t\t\tnewWorkout[i] && true)\n\n\t\t\tif (validEntries.length>0) { \n\t\t\t\tconst sentWorkout=await exerciseService.sendWorkout(newWorkout) //server response to new workout submission \n\t\t\t\tconst userWorkouts = JSON.parse(window.localStorage.getItem(\"userWorkouts\")) //local storage copy of workouts \n\t\t\t\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(userWorkouts.concat(sentWorkout))) //update local Storage\n\t\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))//update state\n\t\t\t\thistory.push(\"/\") \n\t\t\t} \n\t\t\telse{\n\t\t\t\tconsole.log(\"No valid entries\")\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"Couldn't find a single submitted exercise :/\")\n\t\t}\n\t\t\t\n\t} \n\t\n\t//TODO Ensure backend can deal with this, REFACTOR\n\treturn ( \n\t\t<div style={{display:\"flex\", \n\t\t\tflexDirection:\"column\",\n\t\t\talignItems:\"center\"\n\t\t}}>\n\t\t\t{removedExercises.map((exercise)=>(\n\t\t\t\t<div onClick={()=>{setRemovedExercises(removedExercises.filter((name)=>(name!=exercise)));setDaysExercises(daysExercises.concat(exercise))}}key={exercise}>{ exercise }</div>\n\t\t\t))\n\t\t\t}\n\n\t\t\t<h2 style={{marginTop:\"30px\",marginBottom:\"80px\"}}>Today&apos;s exercises</h2> \n\t\t\t<ul style={{display:\"flex\", flexWrap:\"wrap\"}}>\n\n\t\t\t\t{/*Create area for each exercise*/\n\t\t\t\t\tuniqueNames.map((uniqueName) => ( \n\t\t\t\t\t\t<div key={uniqueName}>\n\t\t\t\t\t\t\t<button onClick={()=>{setDaysExercises(daysExercises.concat(uniqueName))}}> Add set </button> \n\t\t\t\t\t\t\t<button onClick={()=>{setNewWorkout(newWorkout.filter((name)=>(name==uniqueName)));setRemovedExercises(removedExercises.concat(uniqueName));setDaysExercises(daysExercises.filter((name)=>(uniqueName!==name)))}}> Remove </button> \n\t\t\t\t\t\t\t{\tdaysExercises.map((exerciseName,i)=>{ \n\t\t\t\t\t\t\t\tif (exerciseName==uniqueName){ //append all ExerciseCounters to their respective divs\n\t\t\t\t\t\t\t\t\treturn( \n\t\t\t\t\t\t\t\t\t\t<div key={`${i} ${exerciseName}`}> \n\t\t\t\t\t\t\t\t\t\t\t<ExerciseCounter newWorkout={newWorkout} setNewWorkout={setNewWorkout} exerciseName={exerciseName} indexInArray={i}/>\n\t\t\t\t\t\t\t\t\t\t\t{/*Submit another instance of same exercise (for different reps)*/} \n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div> \n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</ul>\n\t\t\t<button onClick={()=>{setRemovedExercises([]);setTodaysExercises(currentRegiment,setDaysExercises);setNewWorkout([]) }}> reset </button> {/*Remove extra*/}\n\t\t\t<button onClick={()=>submitWorkout(newWorkout)}>submit!</button>\n\t\t\t<button onClick={()=>{history.push(\"/\")}}>Home</button>\n\t\t</div>\n\t)\n} \n\nexport default ExerciseSubmission\n","import React from \"react\" \nimport {Switch,Route,useHistory} from \"react-router-dom\"\nimport Button  from \"react-bootstrap/Button\"\nimport Analysis from \"./Analysis\"\nimport History from \"./History\"\nimport ExerciseSubmission from \"./ExerciseSubmission\"\nimport { BiBoltCircle, BiArchiveOut } from \"react-icons/bi\"\nimport { GiBoltEye } from \"react-icons/gi\"\n\nconst HeadQuarters=({currentRegiment,setWorkouts,workouts, daysExercises,setDaysExercises})=>{\n\tconst history = useHistory()\n\t\n\treturn (\n\t\t<div style={{display:\"flex\",flexDirection:\"column\",flexGrow:\"1\", }}className=\"HomeRoute a-routeFadeIn\">\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/dailySubmission\">\n\t\t\t\t\t<ExerciseSubmission currentRegiment={currentRegiment}setWorkouts={setWorkouts} daysExercises={daysExercises} setDaysExercises={setDaysExercises}/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/history\"> \n\t\t\t\t\t<History workouts={workouts}/> \n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/analysis\"> \n\t\t\t\t\t<Analysis workouts={workouts}/> \n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<div style={{flexGrow:\"1\", display:\"flex\", flexDirection:\"column\",\n\t\t\t\t\t\tjustifyContent:\"center\",alignItems:\"center\",\n\t\t\t\t\t}}> \n\t\t\t\t\t\t<h1 style={{padding:\"20px\",borderRadius:\"20px\",backgroundColor:\"black\",color:\"white\",marginTop:\"40px\",marginBottom:\"40px\",}}>Welcome!</h1>\n\t\t\t\t\t\t<div style={{flexGrow:\"1\", display:\"flex\", flexDirection:\"column\",\n\t\t\t\t\t\t\tjustifyContent:\"center\",alignItems:\"center\",\n\t\t\t\t\t\t}}> \n\t\t\t\t\t\t\t<div style={{display:\"flex\", justifyContent:\"space-between\",backgroundColor:\"cornflowerblue\", borderRadius:\"38px\"}}>\n\t\t\t\t\t\t\t\t<div style={{width:\"190px\",margin:\"40px\",alignItems:\"center\",display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t\t\t\t\t\t\t<h3 style={{marginTop:\"50px\",}}>Performance</h3>\n\t\t\t\t\t\t\t\t\t<Button style={{width:\"180px\", height:\"180px\", borderRadius:\"50%\"}} variant=\"dark\" onClick={()=>{history.push(\"/analysis\")}}>\n\t\t\t\t\t\t\t\t\t\t<BiBoltCircle size=\"150px\"/>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div style={{width:\"190px\",margin:\"40px\",alignItems:\"center\",display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t\t\t\t\t\t\t<h3 style={{whiteSpace:\"nowrap\",}}>Submit Workout</h3>\n\t\t\t\t\t\t\t\t\t<Button style={{width:\"180px\", height:\"180px\", borderRadius:\"50%\"}} variant=\"dark\" onClick={()=>{history.push(\"/dailySubmission\")}}>\n\t\t\t\t\t\t\t\t\t\t<BiArchiveOut size=\"150px\"/>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div style={{width:\"190px\",margin:\"40px\",alignItems:\"center\",display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t\t\t\t\t\t\t<h3 style={{marginTop:\"50px\",color:\"black\"}}>History</h3>\n\t\t\t\t\t\t\t\t\t<Button style={{width:\"180px\", height:\"180px\", borderRadius:\"50%\"}} variant=\"dark\" onClick={()=>{history.push(\"/history\")}}>\n\t\t\t\t\t\t\t\t\t\t<GiBoltEye size=\"150px\"/>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n\nexport default HeadQuarters\n","import axios from \"axios\"\nconst baseurl = \"/api/users\"\n\nconst register = async credentials => {\n\tconsole.log(credentials,\"credentials\")\n\tconst response = await axios.post(baseurl, credentials)\n\tconsole.log(response.data)\n\treturn response.data\n}\n\nexport default {register}\n","import axios from \"axios\"\nconst baseurl = \"/api/login\"\n\nconst login = async credentials => {\n\tconst response = await axios.post(baseurl, credentials)\n\treturn response.data\n}\n\nexport default { login }\n\n","import ExerciseService from \"../Services/exercises\"\nimport LoginService from \"../Services/login\"\n\nexport const login = async(username, password) => {\n\tconst user = await LoginService.login(username, password)\n\tExerciseService.setToken(user.token) \n\n\t/*initialise local storage*/ \n\t/* set user's details. Last field specifies if user has set a workout regiment (false for new users) */\n\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({token:user.token, username:user.username, regIsSet:user.regIsSet})) \n\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(user.days)) // workout history of user \n\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(user.currentRegiment)) //if not, will be object with empty arrays\n\treturn user\n}\n\nexport const logout = (setUser)=>{\n\twindow.localStorage.removeItem(\"loggedUser\")\n\twindow.localStorage.removeItem(\"userWorkouts\")\n\twindow.localStorage.removeItem(\"currentRegiment\")\n\tsetUser(null)\n}\n","import React,{useState,useEffect} from \"react\"\nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nimport LoginForm from \"./Components/LoginForm\"\nimport RegisterForm from \"./Components/RegisterForm\"\nimport Banner from \"./Components/Banner\"\nimport LandingPage from \"./Components/LandingPage\"\nimport Headquarters from \"./Components/Headquarters\"\nimport Container from \"react-bootstrap/Container\"\n\nimport registerService from \"./Services/register\"\nimport exerciseService from \"./Services/exercises\"\nimport {login,logout}from \"./Functions/userFunctions\"\nimport { setTodaysExercises } from \"./Functions/workoutFunctions\"\n\n\nfunction App(){ \n\tconst location=useLocation()\n\n\t/*user contains authorization token, username, and flag to show if a target regiment has been set.\n\t User workouts history is sent to localStorage on log-in*/\n\tconst [user, setUser] = useState(null) \t\n\tconst [daysExercises, setDaysExercises] = useState([]) // today's target exercises\n\tconst [currentRegiment, setCurrentRegiment] = useState({}) // whole week target exercises\n\tconst [workouts, setWorkouts] = useState() // whole week target exercises\n\n\tuseEffect(()=>{  //Check to see if user is already logged in\n\t\tconst user = JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\t\tif (user){ \n\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))\n\t\t\tsetUser(user)\n\t\t\texerciseService.setToken(user.token) //token will be set on each render\n\t\t}\t\n\t},[]) \n\n\tuseEffect(()=>{ //Set user's target workout (for a whole week)\n\t\tif(user){\n\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))\n\t\t\tconst regiment=JSON.parse(window.localStorage.getItem(\"currentRegiment\"))\n\t\t\tsetCurrentRegiment(regiment) \n\t\t}\n\t}\n\t,[user])\n\n\tuseEffect(()=>{ //Set exercises of today's workout\n\t\tif(user){ \n\t\t\tsetTodaysExercises(currentRegiment, setDaysExercises)\n\t\t}\n\t}\n\t,[currentRegiment])\n\n\treturn ( \n\t\t<div className=\"App\" style={{display:\"flex\",flexDirection:\"column\",height:\"100vh\", backgroundImage:\"url(/Media/kicking.jpg)\"}}>\n\t\t\t{user ? //if user is logged in\n\t\t\t\t<>\n\t\t\t\t\t{user.regIsSet\n\t\t\t\t\t\t?  //User isn't new and has a regiment set - allow submissions, performance analysis & workout history view\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Banner user={user} logout={()=>{logout(setUser) }}/>  \n\t\t\t\t\t\t\t<Container style={{overflow:\"auto\",backgroundColor:\"rgb(255,255,255,0.94\",flexGrow:\"1\",display:\"flex\",flexDirection:\"column\", alignItems:\"center\" }}>\n\t\t\t\t\t\t\t\t<Headquarters currentRegiment={currentRegiment}setWorkouts={setWorkouts} workouts={workouts} daysExercises={daysExercises} setDaysExercises={setDaysExercises}/>\n\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t:  //if user hasn't set a regiment, do that.\n\t\t\t\t\t\t<LandingPage currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment} user={user} setUser={setUser}/>\n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t\t: //if no user, register or login\n\t\t\t\t<div style={{backgroundImage:(\"url(/Media/kicking.jpg\"), //in public folder\n\t\t\t\t\theight:\"100%\",display:\"flex\", justifyContent:\"center\", alignItems:\"flex-start\"}}>\n\t\t\t\t\t<TransitionGroup style={{flexGrow:\"1\",display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\t\tkey={location}\n\t\t\t\t\t\t\ttimeout={{ enter: 500, exit: 200 }}>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t\t\t\t<RegisterForm submitCredentials={registerService.register}/>\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t\t<LoginForm submitCredentials={login} setUser={setUser}/> \n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch> \n\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t</TransitionGroup>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t) \n} \n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"bootstrap/dist/js/bootstrap.js\"\nimport {BrowserRouter as Router} from  \"react-router-dom\"\n\n\nReactDOM.render(\n\t<Router>\n\t\t<App /> \n\t</Router>,\n\tdocument.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}
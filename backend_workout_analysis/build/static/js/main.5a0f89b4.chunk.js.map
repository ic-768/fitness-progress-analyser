{"version":3,"sources":["Components/LoginForm.js","Components/RegisterForm.js","Components/Banner.js","Services/exercises.js","Components/DayGrid.js","Components/DaySubmissions.js","Components/RegimentForm.js","Components/DayForm.js","Components/LandingPage.js","Functions/workoutFunctions.js","Components/AnalysisPlot.js","Components/MenuCard.js","Components/Analysis.js","Components/HistoryWorkout.js","Components/CalendarPicker.js","Components/History.js","Components/StatRow.js","Components/ExerciseBox.js","Components/ExerciseSubmission.js","Components/Headquarters.js","Components/Notification.js","Services/register.js","Services/login.js","Functions/userFunctions.js","App.js","index.js"],"names":["LoginForm","setNotification","submitCredentials","setUser","useState","username","setUsername","password","setPassword","inputStyle","width","padding","marginBottom","border","borderBottom","style","paddingTop","display","alignItems","onSubmit","event","a","preventDefault","user","console","log","color","message","borderRadius","backgroundColor","height","marginRight","flexDirection","justifyItems","className","value","placeholder","onChange","target","to","RegisterForm","history","useHistory","push","textAlign","Banner","logout","position","marginLeft","paddingLeft","borderLeft","cursor","onClick","Navbar","justifyContent","Brand","src","Text","baseUrl","token","setRegiment","regiment","config","headers","Authorization","axios","patch","response","data","setToken","newToken","sendWorkout","workout","post","getUserWorkouts","get","DayGrid","day","currentRegiment","setCurrentRegiment","exercise","setExercise","margin","trim","includes","charAt","toUpperCase","slice","concat","name","marginTop","type","flexWrap","alignContent","DaySubmissions","map","i","flexGrow","filter","RegimentForm","submissionVisibility","setVisibility","regimentHasEmptyDay","key","length","finaliseRegiment","exerciseService","returnedRegiment","loggedUser","JSON","parse","window","localStorage","getItem","regIsSet","setItem","stringify","useEffect","Container","overflow","Object","keys","item","visibility","paddingRight","DayForm","fontWeight","checked","dayKey","LandingPage","location","useLocation","timeout","enter","exit","path","exercisesFromWorkouts","workouts","exerciseArray","dayObject","exercises","forEach","exerciseNamesFromWorkouts","filterExercisesByName","toLowerCase","datedAnalysis","exerciseName","interval","parameter","timeProperty","total","getTime","Date","date","toDateString","toLocaleDateString","month","accumulate","workoutObject","sets","reps","weight","filteredWorkouts","uniqueTimes","allTimeAnalysis","AnalysisPlot","analysis","dataKey","areaChart","AreaChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Area","stroke","fill","MenuCard","header","body","Analysis","exerciseNameCache","index","indexOf","suggestions","setSuggestions","selection","setSelection","analysisType","setAnalysisType","repsAnalysis","setRepsAnalysis","weightAnalysis","setWeightAnalysis","overflowY","minWidth","boxShadow","suggestion","Dropdown","Toggle","Menu","Item","HistoryWorkout","workoutDate","workoutMins","getMinutes","getHours","Table","striped","bordered","hover","variant","CalendarPicker","dateRange","setDateRange","callback","newDateRange","showNeighboringMonth","locale","selectRange","History","filterQuery","setFilterQuery","useDate","setUseDate","setFilteredWorkouts","filterByDate","results","dates","resultArray","filterWorkoutsByDate","undefined","Form","FormControl","listStyleType","StatRow","weightColor","cellStyle","paddingBottom","ExerciseBox","newWorkout","setNewWorkout","Array","ExerciseSubmission","setWorkouts","daysExercises","uniqueNames","setUniqueNames","removedExercises","setRemovedExercises","selectedExercise","setSelectedExercise","Set","submitWorkout","exercisesForSubmission","_","sentWorkout","userWorkouts","uniqueName","indexInArray","HeadQuarters","centeredStyle","linkStyle","exact","Notification","zIndex","register","credentials","login","LoginService","ExerciseService","days","App","backgroundImage","setBackgroundImage","notification","setDaysExercises","setTimeout","getDay","values","setTodaysExercises","backgroundSize","removeItem","Headquarters","registerService","ReactDOM","render","document","getElementById"],"mappings":"8QA6CeA,EA1CC,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,gBAAgBC,EAA8B,EAA9BA,kBAAmBC,EAAW,EAAXA,QAAW,EAEjCC,mBAAS,IAFwB,mBAExDC,EAFwD,KAE9CC,EAF8C,OAGjCF,mBAAS,IAHwB,mBAGxDG,EAHwD,KAG9CC,EAH8C,KAKzDC,EAAW,CAACC,MAAM,QAAQC,QAAQ,IAAIC,aAAa,OAAQC,OAAO,OAAQC,aAAa,mBAG7F,OACC,sBAAOC,MAAO,CAACC,WAAW,OAAOC,QAAQ,OAAQC,WAAW,UAC3DC,SAAQ,uCAAE,WAAOC,GAAP,eAAAC,EAAA,6DACTD,EAAME,iBADG,SAEQpB,EAAkB,CAACG,WAASE,aAFpC,QAEHgB,EAFG,SAIRC,QAAQC,IAAIF,GACZpB,EAAQoB,IAGRtB,EAAgB,CAACyB,MAAM,MAAMC,QAAQ,kCAR7B,2CAAF,sDADT,SAaC,sBAAKZ,MAAO,CAACa,aAAa,gBAAgBC,gBAAgB,QAAQlB,QAAQ,gBAAgBmB,OAAO,QAAQpB,MAAM,QAC9GqB,YAAY,OAAOd,QAAQ,OAAQe,cAAc,SACjDd,WAAW,UAFZ,UAIC,sBAAKH,MAAS,CAAEH,aAAa,OAAOD,QAAQ,MAAMM,QAAQ,OAAQe,cAAc,SAAUC,aAAa,cAAvG,UACC,oBAAIlB,MAAQ,CAACH,aAAa,QAASsB,UAAU,0BAA7C,qBACA,uBAAOnB,MAAON,EAAY0B,MAAO9B,EAAU+B,YAAY,WACtDC,SAAU,SAACjB,GAASd,EAAYc,EAAMkB,OAAOH,UAC9C,uBAAOpB,MAAON,EAAY0B,MAAO5B,EAAU6B,YAAY,WACtDC,SAAU,SAACjB,GAASZ,EAAYY,EAAMkB,OAAOH,aAE/C,sBAAKpB,MAAS,CAACE,QAAQ,OAAQe,cAAc,SAASd,WAAW,UAAjE,UACC,wBAAQH,MAAO,CAACF,OAAO,OAAQe,aAAa,MAAMC,gBAAgB,UAAUnB,MAAM,QAAQoB,OAAO,OAAOnB,QAAQ,OAAhH,oBACA,yDAAgC,cAAC,IAAD,CAAMI,MAAO,CAACW,MAAM,WAAYa,GAAG,YAAnC,mCCGtBC,EAtCI,SAAC,GAAwC,IAAvCvC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,kBAC/BuC,EAAQC,cAD4C,EAE5BtC,mBAAS,IAFmB,mBAEnDC,EAFmD,KAEzCC,EAFyC,OAG5BF,mBAAS,IAHmB,mBAGnDG,EAHmD,KAGzCC,EAHyC,KAKpDC,EAAW,CAACC,MAAM,QAAQC,QAAQ,IAAIC,aAAa,OAAQC,OAAO,OAAQC,aAAa,mBAE7F,OACC,sBAAMC,MAAO,CAACC,WAAW,OAAOC,QAAQ,OAAQC,WAAW,UAC1DC,SAAQ,uCAAE,WAAOC,GAAP,SAAAC,EAAA,6DACTD,EAAME,iBADG,SAECpB,EAAkB,CAACG,WAASE,aAF7B,kCAGRkC,EAAQE,KAAK,KACb1C,EAAgB,CAACyB,MAAM,QAAQC,QAAQ,kBAJ/B,sBAMJ1B,EAAgB,CAACyB,MAAM,MAAMC,QAAQ,4BANjC,2CAAF,sDADT,SASC,sBAAKZ,MAAO,CAACa,aAAa,gBAAgBC,gBAAgB,QAAQlB,QAAQ,gBAAgBmB,OAAO,QAAQpB,MAAM,QAC9GqB,YAAY,OAAOd,QAAQ,OAAQe,cAAc,SACjDd,WAAW,UAFZ,UAIC,sBAAKH,MAAS,CAAEH,aAAa,OAAOD,QAAQ,MAAMM,QAAQ,OAAQe,cAAc,SAAUC,aAAa,cAAvG,UACC,oBAAIlB,MAAQ,CAACL,MAAM,OAAOE,aAAa,OAAOgC,UAAU,QAASV,UAAU,0BAA3E,uBACA,uBAAOnB,MAAON,EAAY0B,MAAO9B,EAAU+B,YAAY,WACtDC,SAAU,SAACjB,GAASd,EAAYc,EAAMkB,OAAOH,UAC9C,uBAAOpB,MAAON,EAAY0B,MAAO5B,EAAU6B,YAAY,WACtDC,SAAU,SAACjB,GAASZ,EAAYY,EAAMkB,OAAOH,aAE/C,sBAAKpB,MAAS,CAACE,QAAQ,OAAQe,cAAc,SAASd,WAAW,UAAjE,UACC,wBAAQH,MAAO,CAACF,OAAO,OAAQe,aAAa,MAAMC,gBAAgB,UAAUnB,MAAM,QAAQoB,OAAO,OAAOnB,QAAQ,OAAhH,sBACA,mDAAqB,cAAC,IAAD,CAAMI,MAAO,CAACW,MAAM,WAAYa,GAAG,IAAnC,kC,SCRXM,EArBF,SAAC,GAAiB,IAAhBtB,EAAe,EAAfA,KAAKuB,EAAU,EAAVA,OACbL,EAAUC,cAGhB,OAAOnB,EAEL,sBAAKR,MAAO,CAACgC,SAAS,QAAQ9B,QAAQ,OAAQC,WAAW,SAASY,OAAO,OAAOpB,MAAM,QAAtF,UACC,oBAAIK,MAAO,CAACiC,WAAW,OAAOjB,YAAY,OAAOL,MAAM,SAAvD,SAAkEH,EAAKlB,WACvE,oBAAIU,MAAO,CAACkC,YAAY,OAAOvB,MAAM,QAAQwB,WAAW,kBAAkBC,OAAO,WAAYC,QAAS,WAAKN,IAASL,EAAQE,KAAK,MAAjI,SAAwI,8CAKzI,eAACU,EAAA,EAAD,CAAQtC,MAAO,CAACE,QAAQ,OAAQqC,eAAe,SAASzB,gBAAgB,UAAWH,MAAM,SAAzF,UACC,cAAC2B,EAAA,EAAOE,MAAR,UAAc,qBAAKxC,MAZN,CAACL,MAAM,KAYiB8C,IAAI,6CACzC,eAACH,EAAA,EAAOI,KAAR,WAAa,oBAAI1C,MAAO,CAACE,QAAQ,UAApB,yBAAgD,oBAAIF,MAAO,CAACW,MAAM,UAAUT,QAAQ,UAApC,oC,yBClB3DyC,EAAU,eAEZC,EAAQ,KAKNC,EAAW,uCAAC,WAAMC,GAAN,iBAAAxC,EAAA,6DACXyC,EAAS,CACdC,QAAQ,CAACC,cAAcL,IAFP,SAIMM,IAAMC,MAAN,UAAeR,EAAf,aAAmCG,EAAUC,GAJnD,cAIXK,EAJW,yBAKVA,EAASC,MALC,2CAAD,sDA8BF,GAACC,SAlCC,SAAAC,GAChBX,EAAK,iBAAaW,IAiCMC,YAtBR,uCAAC,WAAMC,GAAN,iBAAAnD,EAAA,6DACXyC,EAAS,CACdC,QAAQ,CAACC,cAAcL,IAFP,kBAKOM,IAAMQ,KAAKf,EAASc,EAASV,GALpC,cAKVK,EALU,yBAMTA,EAASC,MANA,0DAST,GATS,yDAAD,sDAsBoBM,gBAThB,uCAAC,8BAAArD,EAAA,6DACfyC,EAAQ,CACbC,QAAQ,CAACC,cAAcL,IAFH,SAIEM,IAAMU,IAAIjB,EAASI,GAJrB,cAIfK,EAJe,OAKrB3C,QAAQC,IAAI0C,EAASC,MALA,kBAMdD,EAASC,MANK,2CAAD,qDASgCR,e,QCGtCgB,EAvCD,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,IAAIC,EAAsC,EAAtCA,gBAAgBC,EAAsB,EAAtBA,mBAAsB,EAC1B3E,mBAAS,IADiB,mBAClD4E,EADkD,KACzCC,EADyC,KAGzD,OAEC,uBAAMlE,MAAO,CAACa,aAAa,MAAMsD,OAAO,MAAMjE,QAAQ,OAAOe,cAAc,UACxEb,SAAU,SAACC,GAASA,EAAME,iBAEzB0D,EAASG,SACRL,EAAgBD,GAAKO,UACtBJ,EAASK,OAAO,GAAGC,cACpBN,EAASO,MAAM,IAAIJ,QACnB3D,QAAQC,IAAI,oCAGZsD,EAAmB,2BAAID,GAAL,kBAAuBD,EAAKC,EAAgBD,GAAKW,QACjER,EAASK,OAAO,GAAGC,cAAcN,EAASO,MAAM,IAAIJ,WACtDF,EAAY,OAZf,UAgBC,sBAAKlE,MAAO,CAACL,MAAM,QAAQ4C,eAAe,SAASpC,WAAW,SAASU,aAAa,MAAOX,QAAQ,OAAQe,cAAc,UAAzH,cACC,oBAAIjB,MAAO,CAACJ,QAAQ,OAAOiB,aAAa,MAAOF,MAAM,SAArD,SAAkEmD,IAClE,uBAAO9D,MAAO,CAACL,MAAM,SAASyB,MAAO6C,EAAUS,KAAMZ,EAAKzC,YAAY,WAAWC,SAAU,SAACjB,GACnE,MAArBA,EAAMkB,OAAOH,OACf8C,EAAY7D,EAAMkB,OAAOH,UAE3B,wBAAQpB,MAAO,CAAC2E,UAAU,MAAM/E,QAAQ,MAAMD,MAAM,OAAOoB,OAAO,OAAOjB,OAAO,OAAOe,aAAa,MAAMC,gBAAgB,WAAW8D,KAAK,SAA1I,oBAGD,qBAAK5E,MAAO,CAACE,QAAQ,OAAO2E,SAAS,OAAO5D,cAAc,SACzD6D,aAAa,SAASvC,eAAe,uBCK1BwC,EApCM,SAAC,GAA6C,IAA5ChB,EAA2C,EAA3CA,gBAAgBC,EAA2B,EAA3BA,mBAAoBF,EAAO,EAAPA,IAE1D,OACC,qBAAe9D,MAAO,CAACJ,QAAQ,OAAOM,QAAQ,OAAQe,cAAc,SAASd,WAAW,UAAxF,SAEC,oBAAIH,MAAO,CAACJ,QAAQ,IAAIuE,OAAO,IAAIxE,MAAM,OAAQO,QAAQ,OAAQe,cAAc,UAA/E,SACE8C,EAAgBD,GAAKkB,KAAI,SAACf,EAASgB,GAAV,OACzB,sBAA8BjF,MAAO,CAACC,WAAW,MAAMN,MAAM,OAAOO,QAAQ,OAAOgF,SAAS,IAC3FjE,cAAc,UADf,cAGC,sBAAKjB,MAAO,CAACL,MAAM,OAAOO,QAAQ,OAAOC,WAAW,SAAU2E,aAAa,SAAUvC,eAAe,SAASrB,aAAa,UAA1H,UACC,mBAAGlB,MAAO,CAACmE,OAAO,IAAKnD,YAAY,OAAnC,SACEiD,IAGF,wBAASjE,MAAO,CAACF,OAAO,OAAOe,aAAa,MAAMoB,WAAW,QAAQ2C,KAAK,SAASvC,QAAS,kBAC3F2B,EAAmB,2BACdD,GADa,kBAEfD,EAAKC,EAAgBD,GAAKqB,QAAO,SAACT,GAAD,OACjCA,GAAMT,SAJV,yBARF,UAAcA,GAAd,OAAyBgB,UAJlBnB,I,SCsEGsB,EApEI,SAAC,GAAsD,IAArD5E,EAAoD,EAApDA,KAAKpB,EAA+C,EAA/CA,QAAQ2E,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,mBAAsB,EAC7B3E,mBAAS,UADoB,mBACjEgG,EADiE,KAC5CC,EAD4C,KAElE5D,EAAUC,cAEV4D,EAAoB,WACzB,IAAK,IAAMC,KAAOzB,EACjB,GAAGA,EAAgByB,IAAoC,IAA9BzB,EAAgByB,GAAKC,OAC7C,OAAO,EAET,OAAO,GAGFC,EAAgB,uCAAC,8BAAApF,EAAA,yDACjBiF,IADiB,gCAEQI,EAAgB9C,YAAYkB,GAFpC,OAEf6B,EAFe,OAGfC,EAAWC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eAExD9G,EAAQ,2BAAIoB,GAAL,IAAW2F,UAAS,KAC3BH,OAAOC,aAAaG,QAAQ,kBAAkBN,KAAKO,UAAUT,IAC7DI,OAAOC,aAAaG,QAAQ,aAAaN,KAAKO,UAAL,2BAAmBR,GAAnB,IAA8BM,UAAS,MAChFzE,EAAQE,KAAK,KARQ,2CAAD,qDAkBtB,OANA0E,qBAAU,WACTf,IACGD,EAAc,UACdA,EAAc,aAChB,CAACvB,IAGF,eAACwC,EAAA,EAAD,CAAWvG,MAAS,CAACe,OAAO,OAAOyF,SAAS,OAAOrG,WAAW,SAASU,aAAa,MAAMC,gBAAgB,QACzGZ,QAAQ,OAAQe,cAAc,UAD/B,UAEC,sBAAKE,UAAU,0BAA0BnB,MAAO,CAACwG,SAAS,OAAOtG,QAAQ,OAAQe,cAAc,SAC9Fd,WAAW,SAASwE,UAAU,OAAO5D,OAAO,OAAOmE,SAAS,KAD7D,UAEC,+DACA,qBAAKlF,MAAO,CAACe,OAAO,OAAOD,gBAAgB,QAAQZ,QAAQ,OAAQ2E,SAAS,OAAOtC,eAAe,SAAUpC,WAAW,cAAvH,SAEEsG,OAAOC,KAAK3C,GAAiBiB,KAAI,SAAC2B,EAAK1B,GACvC,OAAIlB,EAAgB4C,GAEnB,sBAAa3G,MAAS,CAAC2E,UAAU,OAAOzE,QAAQ,OAAQe,cAAc,SAAUd,WAAW,UAA3F,UACC,cAAC,EAAD,CAAU2D,IAAK6C,EAAM5C,gBAAiBA,EAAiBC,mBAAoBA,IAC3E,cAAC,EAAD,CAA2BF,IAAK6C,EAAM3C,mBAAoBA,EAAmBD,gBAAiBA,GAAzE4C,KAFZ1B,GAFwB,aAWtC,sBAAKjF,MAAO,CAAC2E,UAAU,QAAvB,UACC,wBAAQ3E,MAAO,CAACc,gBAAgB,UAAU8F,WAAWvB,EACpD1F,MAAM,OAAOoB,OAAO,OACpBF,aAAa,OACdwB,QAAS,WAAKqD,KAHd,kBAOA,wBAAQ1F,MAAO,CACdL,MAAM,OAAOoB,OAAO,OACpBF,aAAa,MAAMgG,aAAa,MAAO3E,YAAY,OACpDG,QAAS,WAAKX,EAAQE,KAAK,MAH3B,yBC1BWkF,EAlCD,SAAC,GAAwC,IAAvC/C,EAAsC,EAAtCA,gBAAgBC,EAAsB,EAAtBA,mBACzBtC,EAAQC,cASd,OACC,sBAAK3B,MAAO,CAACwG,SAAS,QAAtB,UACC,cAAC,EAAD,IACA,cAACD,EAAA,EAAD,UACC,uBAAMvG,MAAO,CAACc,gBAAgB,QAAQqD,OAAO,OAAOvE,QAAQ,OAAOiB,aAAa,MAAMX,QAAQ,OAAOe,cAAc,SAAUd,WAAW,UAAxI,cACC,oBAAIH,MAAO,CAACa,aAAa,OAAOjB,QAAQ,OAAOmH,WAAW,OAAOpG,MAAM,QAAQgE,UAAU,QAAzF,oDACA,qBAAK3E,MAAO,CAAC6E,SAAS,OAAOF,UAAU,OAAOzE,QAAQ,OAAQqC,eAAe,SAASrB,aAAa,UAAnG,SACEuF,OAAOC,KAAK3C,GAAiBiB,KAAI,SAAC2B,EAAK1B,GAAN,OACjC,sBAAKjF,MAAQ,CAACE,QAAQ,OAAQe,cAAc,SAASd,WAAW,SAASR,MAAM,QAAQwE,OAAO,OAAOvE,QAAQ,OAAOiB,aAAa,MAAMf,OAAO,mBAA9I,UACC,6BAAM6G,IACN,uBAAOxF,UAAU,iBAAiByD,KAAK,WAAYoC,QAASjD,EAAgB4C,IAAO,GAClFrF,SAAU,WAlBM,IAAC2F,EAkBFxG,QAAQC,IAAIqD,GAjB9BA,EADoBkD,EAkB6CN,GAhBpE3C,EAAmB,2BAAID,GAAL,kBAAuBkD,EAAQ,QAGlDjD,EAAmB,2BAAID,GAAL,kBAAuBkD,EAAQ,WAU0HhC,QAQxK,wBAAQjF,MAAO,CAACe,OAAO,OAAO4D,UAAU,OAAO7D,gBAAgB,UAAUhB,OAAO,OAAQe,aAAa,OAAOwB,QAAS,SAAChC,GACrHA,EAAME,iBAAiBmB,EAAQE,KAAK,sBADrC,2BCMUsF,EA3BG,SAAC,GAAqD,IAApDnD,EAAmD,EAAnDA,gBAAgBC,EAAmC,EAAnCA,mBAAmBxD,EAAgB,EAAhBA,KAAKpB,EAAW,EAAXA,QACrD+H,EAASC,cAOf,OALAd,qBAAU,WACT,IAAMxD,EAASgD,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBACtDlC,EAAmBlB,KAClB,IAGD,cAAC,kBAAD,CAAiB9C,MAAO,CAACe,OAAO,OAAOmE,SAAS,IAAIhF,QAAQ,OAAQe,cAAc,UAAlF,SACC,cAAC,gBAAD,CAGCoG,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAH9B,SAIC,eAAC,IAAD,CAAQJ,SAAUA,EAAlB,UACC,eAAC,IAAD,CAAOK,KAAK,oBAAZ,cACC,cAAC,EAAD,CAAchH,KAAMA,EAAMpB,QAASA,EAAS2E,gBAAiBA,EAAiBC,mBAAoBA,IADnG,OAGA,eAAC,IAAD,CAAOwD,KAAK,IAAZ,cACC,cAAC,EAAD,CAASzD,gBAAiBA,EAAiBC,mBAAoBA,WAP5DmD,M,QCTIM,EAAsB,SAACC,GAEnC,IAAMC,EAAgB,GAKtB,OAJAD,EAAS1C,KAAI,SAAC4C,GAAD,OAAcA,EAAUC,aACnCC,SAAQ,SAACrE,GACTkE,EAAc/F,KAAd,MAAA+F,EAAa,YAASlE,OAEjBkE,GAIKI,EAA0B,SAACL,GAEvC,OAAOD,EAAsBC,GAAU1C,KAAI,SAACf,GAAD,OAAYA,EAASS,SAGpDsD,EAAwB,SAACH,EAAWnD,GAAZ,OAEpCmD,EAAU1C,QAAO,SAAClB,GAAD,OAChBA,EAASS,KAAKuD,cAAc5D,SAASK,EAAKuD,mBAsC/BC,EAAc,SAACR,EAASS,EAAaC,EAASC,GAK1D,GAAc,UAAXD,GAAmC,YAAbA,EAAzB,CAIA,IAwBIE,EACAC,EAzBEC,EAAuB,UAAbJ,EACb,SAACnE,GAAD,OAAe,IAAIwE,KAAMxE,EAASyE,MAAMC,gBACxC,SAAC1E,GAAD,OAAe,IAAIwE,KAAMxE,EAASyE,MAAME,mBAAmB,UAAU,CAACC,MAAM,UAEzEC,EAA2B,SAAdT,EAChB,SAACU,GAAD,OAAkBA,EAAc9E,SAAS+E,KAAKD,EAAc9E,SAASgF,MACrE,SAACF,GAAD,OAAkBA,EAAc9E,SAASiF,OAAOH,EAAc9E,SAAS+E,KAAKD,EAAc9E,SAASgF,MAEhGE,EAAiB,GAcvB,GAZe,SAAZd,EACFX,EAASvC,QAAO,SAAC1B,GACFA,EAAQoE,UAAU1C,QAAO,SAAClB,GAAD,OAAYA,EAASS,MAAMyD,KAC1DL,SAAQ,SAACnB,GAAQwC,EAAiBvH,KAAK,CAAC8G,KAAKjF,EAAQiF,KAAKzE,SAAS0C,UAI5Ee,EAASvC,QAAO,SAAC1B,GACFA,EAAQoE,UAAU1C,QAAO,SAAClB,GAAD,OAAYA,EAASiF,QAAUjF,EAASS,MAAMyD,KAC7EL,SAAQ,SAACnB,GAAQwC,EAAiBvH,KAAK,CAAC8G,KAAKjF,EAAQiF,KAAKzE,SAAS0C,UAGjD,GAAzBwC,EAAiB1D,OAAW,OAAO,KAItC,IAAM2D,EAAY,GAElB,OAA6B,GAAzBD,EAAiB1D,QACpB8C,EAAMO,EAAWK,EAAiB,IAE3B,CAAC,CAACb,aADTA,EAAeE,EAAQW,EAAiB,IACjBZ,YAGxBY,EAAiBrB,SAAQ,SAACrE,EAAQwB,GAC1B,IAAJA,GACFqD,EAAeE,EAAQ/E,GACvB8E,EAAMO,EAAWrF,IAGb6E,IAAiBE,EAAQ/E,GACxBwB,IAAIkE,EAAiB1D,OAAO,EAC/B8C,GAAOO,EAAWrF,IAGlB8E,GAAOO,EAAWrF,GAClB2F,EAAYxH,KAAK,CAAC0G,eAAaC,YAIhCa,EAAYxH,KAAK,CAAC0G,eAAcC,UAChCD,EAAaE,EAAQ/E,GACrB8E,EAAMO,EAAWrF,OAGb2F,GA1DN3I,QAAQC,IAAI,wBA6DD2I,EAAgB,SAAC3B,EAASS,EAAaE,GACnD,IAAMc,EAAiB,GACnBZ,EAAM,EAsBV,MApBe,SAAZF,GACFX,EAAS1C,KAAI,SAACvB,GACCA,EAAQoE,UAAU1C,QAAO,SAAClB,GAAD,OAAYA,EAASS,MAAMyD,KAC1DL,SAAQ,SAAC7D,GAAYkF,EAAiBvH,KAAK,CAAC8G,KAAKjF,EAAQiF,KAAKzE,mBAGvEkF,EAAiBrB,SAAQ,SAACrE,GACzB8E,GAAO9E,EAAQQ,SAASgF,KAAKxF,EAAQQ,SAAS+E,UAI/CtB,EAAS1C,KAAI,SAACvB,GACCA,EAAQoE,UAAU1C,QAAO,SAAClB,GAAD,OAAaA,EAASiF,QAAUjF,EAASS,MAAMyD,KAC9EL,SAAQ,SAAC7D,GAAYkF,EAAiBvH,KAAK,CAAC8G,KAAKjF,EAAQiF,KAAKzE,mBAGvEkF,EAAiBrB,SAAQ,SAACrE,GACzB8E,GAAO9E,EAAQQ,SAASiF,OAAOzF,EAAQQ,SAASgF,KAAKxF,EAAQQ,SAAS+E,SAG5D,IAART,EAAkB,KACf,CAAC,CAACD,aAAa,QAASC,MAAMA,GAAO,Q,6DC/H9Be,EAhCI,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAExBC,EACL,eAACC,EAAA,EAAD,CACC/J,MAAO,IACPoB,OAAQ,IACRsC,KAAMkG,EACNpF,OAAQ,CAAEwF,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,GAJhD,UAMC,cAACC,EAAA,EAAD,CAAeC,gBAAgB,UAC/B,cAACC,EAAA,EAAD,CAAOT,QAAQ,iBACf,cAACU,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACCxF,KAAK,WACL4E,QAASA,EACTa,OAAO,UACPC,KAAK,eAMR,OAAGf,EAEDE,EAIK,M,SCbOc,EAfE,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KACpB/I,EAAQC,cACd,OACC,sBAAK3B,MAAO,CAACa,aAAa,MAAMhB,aAAa,OAAOoC,WAAW,OAAO0C,UAAU,OAAO/E,QAAQ,OAAOkB,gBAAgB,QAAQZ,QAAQ,OAAOe,cAAc,UAA3J,UACC,oBAAIjB,MAAO,CAACH,aAAa,QAAzB,SACC,oBAAGwC,QAAS,WAAKX,EAAQE,KAAK,MAA9B,UACC,cAAC,IAAD,CAAgB5B,MAAO,CAACoC,OAAO,aAC9BoI,OAGFC,QCiGWC,EAxGA,SAAC,GAAc,IAAbhD,EAAY,EAAZA,SACViD,EAAkB5C,EAA0BL,GAChDvC,QAAO,SAACT,EAAKkG,GAAN,OACP7C,EAA0BL,GAAUmD,QAAQnG,KAAQkG,KAH1B,EAQOvL,mBAAS,IARhB,mBAQrByL,EARqB,KAQTC,EARS,OASG1L,mBAAS,MATZ,mBASrB2L,EATqB,KASXC,EATW,OAUS5L,mBAAS,MAVlB,mBAUrB6L,EAVqB,KAURC,EAVQ,OAYS9L,mBAAS,MAZlB,mBAYrB+L,EAZqB,KAYRC,EAZQ,OAaahM,mBAAS,MAbtB,mBAarBiM,EAbqB,KAaNC,EAbM,KA+B5B,GAhBAjF,qBAAU,WACS,UAAf4E,GACFK,EAAkBrD,EAAcR,EAASsD,GAAWF,EAAY,GAAG,QAAQ,WAC3EO,EAAgBnD,EAAcR,EAASsD,GAAWF,EAAY,GAAG,QAAQ,UAEnD,YAAfI,GACPK,EAAkBrD,EAAcR,EAASsD,GAAWF,EAAY,GAAG,QAAQ,WAC3EO,EAAgBnD,EAAcR,EAASsD,GAAWF,EAAY,GAAG,UAAU,WAG3ES,EAAkBlC,EAAgB3B,EAASsD,GAAWF,EAAY,GAAG,WACrEO,EAAgBhC,EAAgB3B,EAASsD,GAAWF,EAAY,GAAG,YAGnE,CAACE,EAAWE,IAEQ,IAAlBxD,EAASjC,OAAY,OACxB,sBAAKzF,MAAO,CAACE,QAAQ,OAAQa,OAAO,QAApC,UACC,cAAC,EAAD,CAAUyJ,OAAQ,uBAAwBC,KAAM,kBAAK,QAErD,qBAAKzK,MAAO,CAAG2E,UAAU,OAAOzE,QAAQ,OAAOe,cAAc,UAA7D,SACC,sBAAKjB,MAAO,CAACH,aAAa,OAAO2L,UAAU,OAAOC,SAAS,QAAQ7L,QAAQ,qBAAqB8L,UAAY,kCAAmC7K,aAAa,MAC3JC,gBAAgB,QAAQmB,WAAW,OAAOjB,YAAY,QADvD,UAEC,kFACA,oBAAIhB,MAAO,CAAC2E,UAAU,QAAtB,wHAsCJ,OACC,sBAAK3E,MAAO,CAACE,QAAQ,OAAOa,OAAO,QAAnC,UACC,cAAC,EAAD,CAAUyJ,OAAQ,UAAWC,KAjCpB,kBACV,qCACC,uBAAOzK,MAAO,CAAC2E,UAAU,QAASrD,SAAU,SAACjB,GAC5C0K,EAAeJ,EAAkBxF,QAAO,SAACT,GAAD,OACvCA,EAAKuD,cAAc5D,SAAShE,EAAMkB,OAAOH,MAAM6G,oBACzC5G,YAAY,aAEnByJ,EAAYrF,OAAO,EAChB,qBAAIzF,MAAO,CAAC2E,UAAU,OAAO/E,QAAQ,MAAMM,QAAQ,OACrDe,cAAc,SACdsB,eAAe,SACfrB,aAAa,SAAU4D,aAAa,UAHlC,UAICgG,EAAY9F,KAAI,SAAC2G,EAAWf,GAAZ,OACjB,sBAAK5K,MAAO,CAAEmE,OAAO,mBAAmBjE,QAAQ,OAAQe,cAAc,SAAUd,WAAW,UAA3F,UACA,oBAAIH,MAAO,CAACW,MAAM,SAAlB,SAA6BgL,IAC7B,eAACC,EAAA,EAAD,CAAU5L,MAAQ,CAACa,aAAa,QAAhC,UACC,cAAC+K,EAAA,EAASC,OAAV,sBAGA,eAACD,EAAA,EAASE,KAAV,WACC,cAACF,EAAA,EAASG,KAAV,CAAe1J,QAAS,WAAK8I,EAAgB,SAASF,EAAaH,EAAYF,KAA/E,oBACA,cAACgB,EAAA,EAASG,KAAV,CAAe1J,QAAS,WAAK8I,EAAgB,WAAWF,EAAaH,EAAYF,KAAjF,sBACA,cAACgB,EAAA,EAASG,KAAV,CAAe1J,QAAS,WAAK8I,EAAgB,YAAYF,EAAaH,EAAYF,KAAlF,4BAPF,UAAkDA,EAAlD,aAF2GA,MAL3G,OAmBA,oBAAI5K,MAAO,CAACmE,OAAO,gBAAgBxD,MAAM,SAAzC,iDASFyK,GAAgBJ,GACjB,qBAAKhL,MAAO,CAAE2E,UAAU,OAAOzE,QAAQ,OAAOe,cAAc,UAA5D,SACC,sBAAKjB,MAAO,CAACwL,UAAU,OAAOC,SAAS,QAAQ7L,QAAQ,sBAAsB8L,UAAY,kCAAmC7K,aAAa,MACxIC,gBAAgB,QAAQmB,WAAW,OAAOjB,YAAY,OAAOnB,aAAa,QAD3E,UAGC,6BAAMqL,IACN,mDACA,cAAC,EAAD,CAAc3B,SAAU6B,EAAc5B,QAAQ,UAE7C8B,GACC,qCACC,qDACA,cAAC,EAAD,CAAc/B,SAAU+B,EAAgB9B,QAAQ,sB,2BChE1CwC,EAlCQ,SAAC,GAAe,IAAdvI,EAAa,EAAbA,QAExB,GAAGA,EAAQ,CACV,IAAMwI,EAAY,IAAIxD,KAAKhF,EAAQiF,MAC7BwD,EAAaD,EAAYE,aAAe,GAC3C,IAAIF,EAAYE,aAChBF,EAAYE,aACf,OACC,sBAAKnM,MAAO,CAACE,QAAQ,OAAQe,cAAc,SAASd,WAAW,UAA/D,UACC,oBAAIH,MAAO,CAACc,gBAAgB,GAAGH,MAAM,QAAQf,QAAQ,OAAOiB,aAAa,OACxE8D,UAAU,QADX,SACqBsH,EAAYtD,eAAgB,KAC3CsD,EAAYG,WAAY,IACxBF,IACN,cAACG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,SACC,kCACC,qBAAIzM,MAAO,CAACc,gBAAgB,SAA5B,UACC,oBAAIK,UAAU,QAAd,SAAsB,oBAAInB,MAAO,CAACW,MAAM,kBAAlB,wBACtB,oBAAIQ,UAAU,QAAd,SAAsB,oBAAInB,MAAO,CAACW,MAAM,kBAAlB,2BACtB,oBAAIQ,UAAU,QAAd,SAAsB,oBAAInB,MAAO,CAACW,MAAM,kBAAlB,oBACtB,oBAAIQ,UAAU,QAAd,SAAsB,oBAAInB,MAAO,CAACW,MAAM,kBAAlB,yBAEtB8C,EAAQoE,UAAU7C,KAAI,SAACf,EAAS2G,GAAV,OACtB,+BACC,oBAAIzJ,UAAU,QAAd,SAAsB,oBAAInB,MAAO,CAACW,MAAM,SAAlB,SAA6BsD,EAASS,SAC5D,oBAAIvD,UAAU,QAAd,SAAsB,oBAAInB,MAAO,CAACW,MAAM,SAAlB,SAA6BsD,EAASgF,SAC5D,oBAAI9H,UAAU,QAAd,SAAsB,oBAAInB,MAAO,CAACW,MAAM,SAAlB,SAA6BsD,EAAS+E,SAC5D,oBAAI7H,UAAU,QAAd,SAAsB,oBAAInB,MAAO,CAACW,MAAM,SAAlB,SAA6BsD,EAASiF,QAAU,QAJ9D0B,gB,SCHD8B,I,OAjBQ,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,UAAUC,EAAqC,EAArCA,aAAclF,EAAuB,EAAvBA,SAASmF,EAAc,EAAdA,SAOzD,OACC,cAAC,IAAD,CACCvL,SAPiB,SAACwL,GACnBF,EAAaE,GACbD,EAASnF,EAASoF,IAMjB1L,MAAOuL,EACPI,sBAAsB,EACtBC,OAAQ,QACRC,aAAa,MC8EDC,GAvFD,SAAC,GAAc,IAAbxF,EAAY,EAAZA,SAAY,EACWrI,mBAAS,IADpB,mBACpB8N,EADoB,KACPC,EADO,OAEA/N,oBAAS,GAFT,mBAEpBgO,EAFoB,KAEZC,EAFY,OAGIjO,mBAAS,IAAIoJ,MAHjB,mBAGpBkE,EAHoB,KAGVC,EAHU,OAKkBvN,mBAASqI,GAL3B,mBAKpByB,EALoB,KAKHoE,EALG,KAOrBC,EAAa,SAAC9F,EAASiF,GAC5B,GAAGU,EAAQ,CACV,IAAMI,EAAQ,INiBmB,SAAC/F,EAAUgG,GAE9C,IAAMC,EAAY,GAOlB,OANAjG,EAASI,SAAQ,SAACrE,GACb,IAAIgF,KAAKhF,EAAQiF,OAASgF,EAAM,IAAM,IAAIjF,KAAKhF,EAAQiF,OAAOgF,EAAM,IACvEC,EAAY/L,KAAK6B,MAIZkK,GMzBLC,CAAqBlG,EAASiF,GAAW7E,SAAQ,SAACrE,GAC7CuE,EAAsBvE,EAAQoE,UAAUsF,GAAa1H,OAAO,GAC/DgI,EAAQ7L,KAAK6B,MAEf8J,EAAoBE,KAiBtB,GAdAnH,qBAAU,WACL+G,EACHG,EAAa9F,EAASiF,GAGtBY,EACC7F,EAAS1C,KAAI,SAACvB,GAEb,GAAmB,IADNuE,EAAsBvE,EAAQoE,UAAUsF,GAC3C1H,OAAY,OAAOhC,KAE5B0B,QAAO,SAAC/D,GAAD,YAAgByM,GAAPzM,QAEnB,CAAC+L,EAAYE,IAEQ,IAAnB3F,EAASjC,OAAa,OACzB,cADkC,CAClC,OAAKzF,MAAO,CAACE,QAAQ,OAAQa,OAAO,QAApC,UACC,cAAC,EAAD,CAAUyJ,OAAQ,aAAcC,KAAM,kBAAK,QAE3C,qBAAKzK,MAAO,CAAG2E,UAAU,OAAOzE,QAAQ,OAAOe,cAAc,UAA7D,SACC,sBAAKjB,MAAO,CAACH,aAAa,OAAO2L,UAAU,OAAOC,SAAS,QAAQ7L,QAAQ,qBAAqB8L,UAAY,kCAAmC7K,aAAa,MAC3JC,gBAAgB,QAAQmB,WAAW,OAAOjB,YAAY,QADvD,UAEC,kFACA,oBAAIhB,MAAO,CAAC2E,UAAU,QAAtB,0FAyBJ,OACC,mCACC,sBAAK3E,MAAO,CAACE,QAAQ,OAAQa,OAAO,QAApC,UACC,cAAC,EAAD,CAAUyJ,OAAQ,aAAcC,KArBxB,kBACV,qCACC,+CACA,cAACqD,EAAA,EAAD,CAAO9N,MAAO,CAACH,aAAa,QAASO,SAAU,SAACC,GAASA,EAAME,kBAA/D,SACC,cAACwN,EAAA,EAAD,CAAanJ,KAAK,OAAOvD,YAAY,mBAAmBF,UAAU,UAAUG,SAAU,SAACjB,GACtF+M,EAAe/M,EAAMkB,OAAOH,YAG9B,gCACC,mBAAGpB,MAAO,CAACgB,YAAY,OAAOd,QAAQ,UAAtC,4BACA,uBAAO0E,KAAK,WAAWxD,MAAOiM,EAAShL,QAAS,WAAKiL,GAAYD,MAFlE,OAIA,cAAC,GAAD,CAAgBV,UAAWA,EAAWC,aAAcA,EAAclF,SAAUA,EAAUmF,SAAUW,UAW/F,qBAAKxN,MAAO,CAAG2E,UAAU,OAAOzE,QAAQ,OAAOe,cAAc,UAA7D,SACGkI,GAAoBA,EAAiB1D,OAAO,GAC/C,qBAAKzF,MAAO,CAACH,aAAa,OAAO2L,UAAU,OAAOC,SAAS,QAAQ7L,QAAQ,qBAAqB8L,UAAY,kCAAmC7K,aAAa,MAC3JC,gBAAgB,QAAQmB,WAAW,OAAOjB,YAAY,QADvD,SAEC,oBAAIhB,MAAO,CAAEe,OAAO,UAAUiN,cAAc,OAAOlN,gBAAgB,QAAQD,aAAa,OAAOX,QAAQ,OAAQe,cAAc,UAA7H,SACEkI,EAAiBnE,KAAI,SAACvB,EAAQmH,GAAT,OACrB,6BACC,cAAC,EAAD,CAAgBnH,QAASA,KADjBmH,kB,UCpDDqD,GA/BD,SAAC,GAA0B,IAAzBhK,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,YAElBgK,EAAcjK,EAASiF,OAAS,UAAY,OAC5CiF,EAAU,CAACxO,MAAM,OAAOsC,WAAW,QAEzC,OACC,sBAAKjC,MAAO,CAACoO,cAAc,OAAOzJ,UAAU,OAAOzE,QAAQ,QAA3D,UACC,wBAAQF,MAAO,CAACgB,YAAY,OAAQnB,aAAa,OAAOC,OAAO,OAAOe,aAAa,MAAMF,MAAMuN,GAAc7L,QAAS,WAAK6B,EAAY,2BAAID,GAAL,IAAeiF,OACjJjF,EAASiF,OAAS,KAAO,MAD7B,gBADD,IAGC,sBAAKlJ,MAAOmO,EAAZ,UACC,6CACA,uBAAOnO,MAAO,CAACL,MAAM,OAAOkC,UAAU,QAASP,SAAU,SAACjB,GACzD6D,EAAY,2BAAID,GAAL,kBAAgB,OAAQ5D,EAAMkB,OAAOH,UAASA,MAAS6C,EAAQ,UAE5E,sBAAKjE,MAAOmO,EAAZ,UACC,sCACA,uBAAOnO,MAAO,CAACL,MAAM,OAAOkC,UAAU,QAASP,SAAU,SAACjB,GACzD6D,EAAY,2BAAID,GAAL,kBAAgB,OAAQ5D,EAAMkB,OAAOH,UAASA,MAAS6C,EAAQ,UAE3EA,EAASiF,QACT,sBAAKlJ,MAAOmO,EAAZ,UACC,wCACA,uBAAOnO,MAAO,CAACL,MAAM,OAAOkC,UAAU,QAASP,SAAU,SAACjB,GACzD6D,EAAY,2BAAID,GAAL,kBAAgB,SAAU5D,EAAMkB,OAAOH,UAASA,MAAS6C,EAAQ,SAH9E,W,UCmCWoK,GApDG,SAAC,GAA8C,IAA7C1G,EAA4C,EAA5CA,cAAe2G,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAIxCpG,EAAaR,EAAc,GAAGjD,KAEpC,OACC,qBAAK1E,MAAO,CAAE2E,UAAU,OAAOzE,QAAQ,OAAOe,cAAc,UAA5D,SACC,sBAAKjB,MAAO,CAACyL,SAAS,QAAQ7L,QAAQ,sBAAsB8L,UAAY,kCAAmC7K,aAAa,MACvHC,gBAAgB,QAAQmB,WAAW,OAAOjB,YAAY,QADvD,UAEC,uCACA,sBAAKhB,MAAO,CAACW,MAAM,UAAUd,aAAa,OAAOK,QAAQ,OAAOC,WAAW,UAA3E,UACC,qBAAIH,MAAO,CAACE,QAAQ,SAASS,MAAM,SAAnC,UAA8CwH,EAA9C,OACA,wBAAQnI,MAAO,CAACc,gBAAgB,UAAUmB,WAAW,OAAOnC,OAAO,OAAOe,aAAa,OAAOwB,QAAS,WAAKkM,EAC3GD,EAAWtJ,KAAI,SAACwJ,GAAS,OAAOrG,IAAeqG,EAAM,GAAG9J,KACrD8J,EAAM/J,OAAO,CAACC,KAAKyD,EAAac,KAAK,EAAED,KAAK,EAAEE,OAAO,OACrDsF,OAHJ,wBAOD,qBAAKxO,MAAO,CAACoO,cAAc,OAAOrO,aAAa,uBAA/C,SACE4H,EAAc3C,KAAI,SAACf,EAASgB,GAAV,OAClB,sBAAKjF,MAAO,CAACE,QAAQ,QAArB,cACC,cAAC,GAAD,CAAS+D,SAAUA,EAAUC,YAAa,SAACD,GAC1CsK,EACCD,EAAWtJ,KAAI,SAACwJ,GAAS,OAAOrG,IAAeqG,EAAM,GAAG9J,KACrDiD,EAAc3C,KAAI,SAAC2B,EAAKiE,GACzB,OAAI3F,IAAI2F,EACA3G,EAED0C,KAEN6H,SAEJ7G,EAAclC,OAAO,GACtB,mBACCpD,QAAS,WAAKkM,EAAcD,EAAWtJ,KAAI,SAAC2B,GAAD,OAC1CwB,IAAiBxB,EAAK,GAAGjC,KACtBiD,EAAcxC,QAAO,SAACwB,EAAKiE,GAAN,OAAeA,GAAO3F,KAC3C0B,OAJL,SAQC,cAAC,KAAD,CAAgB3G,MAAO,CAACoC,OAAO,iBArBjC,UAAqC6B,GAArC,OAAgDgB,eCoGvCwJ,GAtHU,SAAC,GAAgD,IAA/CvP,EAA8C,EAA9CA,gBAAgBwP,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,cACjDjN,EAAQC,cAEd,IAAKgN,EAEJ,OACC,qBAAK3O,MAAO,CAACE,QAAQ,OAAQa,OAAO,QAApC,SACC,cAAC,EAAD,CAAUyJ,OAAQ,eAAgBC,KAAM,kBAAK,+DAPwB,MAarCpL,mBAAS,IAb4B,mBAajEuP,EAbiE,KAarDC,EAbqD,OAetCxP,mBAAS,IAf6B,mBAejEiP,EAfiE,KAerDC,EAfqD,OAgB1BlP,mBAAS,IAhBiB,mBAgBjEyP,EAhBiE,KAgB/CC,EAhB+C,OAiB1B1P,mBAAS,MAjBiB,mBAiBjE2P,EAjBiE,KAiB/CC,EAjB+C,KAmBxE3I,qBAAU,WACTiI,EAAeI,EAAc3J,KAAI,SAACmD,GAAD,MAAkB,CAAC,CAACzD,KAAKyD,EAAac,KAAK,EAAED,KAAK,QACnF6F,EAAe,YAAK,IAAIK,IAAIP,OAE5B,CAACA,IAEFrI,qBAAU,WACTuI,EAAe,YAAK,IAAIK,IAAIP,OAC3B,IAEF,IAAMQ,EAAa,uCAAC,gCAAA7O,EAAA,yDACb8O,EAAuB,GAC7Bd,EAAWxG,SAAQ,SAACH,GACnBA,EAAcG,SAAQ,SAAC7D,GAAYmL,EAAuBxN,KAAKqC,WAG7DmL,EAAuB3J,OAAO,GANd,sBAOG6I,EACnBnJ,QAAO,SAACkK,EAAEpK,GAAH,OACPmK,EAAuBnK,KAAM,KAEdQ,OAAO,GAXN,iCAYOE,EAAgBnC,YAAY4L,GAZnC,QAYXE,EAZW,SAcVC,EAAezJ,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,iBAC5DF,OAAOC,aAAaG,QAAQ,eAAeN,KAAKO,UAAUkJ,EAAa9K,OAAO6K,KAC9EZ,EAAY5I,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBACnDhH,EAAgB,CAACyB,MAAM,QAAQC,QAAQ,kCACvCc,EAAQE,KAAK,MAGb1C,EAAgB,CAACyB,MAAM,MAAMC,QAAQ,4BArBrB,wBAyBjBH,QAAQC,IAAI,oBAzBK,gCA6BlBxB,EAAgB,CAACyB,MAAM,MAAMC,QAAQ,oDA7BnB,4CAAD,qDA0EnB,OACC,sBAAKZ,MAAO,CAACE,QAAQ,OAAQa,OAAO,QAApC,UACC,cAAC,EAAD,CAAWyJ,OAAQ,eAAgBC,KA5C1B,kBACV,qCACGmE,EAAY5J,KAAI,SAACwK,EAAWvK,GAAZ,OACjB,cADsC,CACtC,OAAKjF,MAAO,CAACe,OAAO,OAAOb,QAAQ,OAAOC,WAAW,SAAUoC,eAAe,SAC7E4B,OAAO,MAAMtD,aAAa,MAAM6K,UAAU,mCAD3C,UAGC,mBAAGrJ,QAAS,WAAK4M,EAAoBO,IAAcxP,MAAO,CAACL,MAAM,OAAOyC,OAAO,UAAU+B,OAAO,EAAElC,WAAW,MAAMjB,YAAY,QAA/H,SAA0IwO,IAC1I,mBAAGxP,MAAO,CAACoC,OAAO,UAAUxC,QAAQ,MAAMuE,OAAO,GAChD9B,QAAS,WACR0M,EAAoBD,EAAiBrK,OAAO+K,IAC5CjB,EAAcD,EAAWnJ,QAAO,SAACwC,GAAD,OAAkBA,EAAc,GAAGjD,OAAO8K,MAC1EX,EAAeD,EAAYzJ,QAAO,SAACT,GAAD,OAAS8K,IAAa9K,OAJ1D,SAMC,cAAC,KAAD,CAAiB1E,MAAO,CAACiC,WAAW,OAAOjB,YAAY,QAASqB,QAAS,mBAV3E,UAEQmN,GAFR,OAEqBvK,OAcpB6J,EAAiBrJ,OAAO,GACzB,oBAAIzF,MAAO,CAAC2E,UAAU,OAAO9C,UAAU,UAAvC,qBACCiN,EAAiB9J,KAAI,SAACf,GACvB,OACC,qBAAKjE,MAAO,CAACoC,OAAO,UAAUrB,OAAO,OAAOb,QAAQ,OAAOC,WAAW,SAAUoC,eAAe,SAC9F1B,aAAa,MAAM6K,UAAU,mCAD9B,SAGC,mBACCrJ,QAAS,WACR0M,EAAoBD,EAAiB3J,QAAO,SAACT,GAAD,OAASA,GAAMT,MAC3DsK,EAAcD,EAAW7J,OAAO,CAAC,CAAC,CAACC,KAAKT,EAASgF,KAAK,EAAED,KAAK,EAAEE,OAAO,UACtE2F,EAAeD,EAAYnK,OAAQR,KAJrC,SAMEA,KAPEA,MAYP,wBAAQjE,MAAO,CAACa,aAAa,MAAMf,OAAO,OAAO6E,UAAU,QAAStC,QAAS,kBAC5E8M,EAAcb,IADf,0BAQCA,EAAWtJ,KAAI,SAAC2C,EAAc1C,GAC9B,GAAI0C,EAAc,GAAGjD,OAAOsK,EAC5B,OACC,aADO,CACN,GAAD,CAAqBrH,cAAeA,EAAe2G,WAAYA,EAAYC,cAAeA,EAAekB,aAAcxK,GAArGA,U,UC3DRyK,GAnDI,SAAC,GAAyD,IAAxDxQ,EAAuD,EAAvDA,gBAAgBwP,EAAuC,EAAvCA,YAAYhH,EAA2B,EAA3BA,SAAUiH,EAAiB,EAAjBA,cAEpDgB,EAAc,CAAC9P,aAAa,OAAO8E,UAAU,MAAMzE,QAAQ,OAAQC,WAAW,UAC9EyP,EAAY,CAAC1P,QAAQ,SAAUS,MAAM,QAASyB,OAAO,WAErDV,EAAQC,cAEd,OACC,eAAC,IAAD,WACC,eAAC,IAAD,CAAOkO,OAAK,EAACrI,KAAK,IAAlB,UACC,qBAAKxH,MAAO,CAACe,OAAO,OAAOb,QAAQ,QAAnC,SACC,sBACCF,MAAO,CAACiC,WAAW,OAAO0C,UAAU,QAAQzE,QAAQ,OAAOe,cAAc,UAD1E,UAEC,qBAAKoB,QAAS,WAAKX,EAAQE,KAAK,qBAAqB5B,MAAO2P,EAA5D,SACC,oBAAI3P,MAAO4P,EAAX,SACC,kCAAI,cAAC,KAAD,CAAa5P,MAAO,CAACW,MAAM,WAA/B,4BAIF,qBAAK0B,QAAS,WAAKX,EAAQE,KAAK,aAC/B5B,MAAO2P,EADR,SAEC,oBAAI3P,MAAO4P,EAAX,SACC,kCAAI,cAAC,KAAD,CAAa5P,MAAO,CAACW,MAAM,WAA/B,8BAGF,qBAAK0B,QAAS,WAAKX,EAAQE,KAAK,cAC/B5B,MAAO2P,EADR,SAEC,oBAAI3P,MAAO4P,EAAX,SACC,kCAAI,cAAC,KAAD,CAAa5P,MAAO,CAACW,MAAM,WAA/B,qCAKH+G,GAAYA,EAASjC,OAAO,EAC1B,oBAAIzF,MAAO,CAACgC,SAAS,WAAY8H,OAAO,IAAIjK,aAAa,OAAOoC,WAAW,OAAOtB,MAAM,SAAxF,2BACA,oBAAIX,MAAO,CAACgC,SAAS,WAAY8H,OAAO,IAAIjK,aAAa,OAAOoC,WAAW,OAAOtB,MAAM,SAAxF,yBAEJ,cAAC,IAAD,CAAO6G,KAAK,mBAAZ,SACC,cAAC,GAAD,CAAoBtI,gBAAiBA,EAAiBwP,YAAaA,EAClEC,cAAeA,MAEjB,cAAC,IAAD,CAAOnH,KAAK,WAAZ,SACC,cAAC,GAAD,CAASE,SAAUA,MAEpB,cAAC,IAAD,CAAOF,KAAK,YAAYxH,MAAS,CAAEe,OAAO,QAA1C,SACC,cAAC,EAAD,CAAU2G,SAAUA,UCxCToI,GAVM,SAAC,GAAqB,IAApBlP,EAAmB,EAAnBA,QAAQD,EAAW,EAAXA,MAC9B,OAAGC,EAED,qBAAKZ,MAAO,CAAC6B,UAAU,SAASkO,OAAO,IAAIpQ,MAAM,QAAQqC,SAAS,WAAY2H,IAAI,IAAI7I,gBAAgBH,GAAtG,SACC,6BAAKC,MAID,MCGO,IAACoP,SAVF,uCAAG,WAAMC,GAAN,eAAA3P,EAAA,+EAEQ4C,IAAMQ,KAJf,aAI6BuM,GAF5B,cAET7M,EAFS,yBAGRA,EAASC,MAHD,0DAMR,GANQ,yDAAH,uDCUC,IAAE6M,MAVN,uCAAG,WAAMD,GAAN,eAAA3P,EAAA,+EAEW4C,IAAMQ,KAJf,aAI6BuM,GAF/B,cAEN7M,EAFM,yBAGLA,EAASC,MAHJ,0DAML,GANK,yDAAH,uDCAE6M,GAAK,uCAAG,WAAM5Q,EAAUE,GAAhB,eAAAc,EAAA,sEACD6P,GAAaD,MAAM5Q,EAAUE,GAD5B,cACdgB,EADc,OAEpB4P,EAAgB9M,SAAS9C,EAAKoC,OAI9BoD,OAAOC,aAAaG,QAAQ,aAAaN,KAAKO,UAAU,CAACzD,MAAMpC,EAAKoC,MAAOtD,SAASkB,EAAKlB,SAAU6G,SAAS3F,EAAK2F,YACjHH,OAAOC,aAAaG,QAAQ,eAAeN,KAAKO,UAAU7F,EAAK6P,OAC/DrK,OAAOC,aAAaG,QAAQ,kBAAkBN,KAAKO,UAAU7F,EAAKuD,kBAR9C,kBASbvD,GATa,2CAAH,wDC2GH8P,OAzFf,WACC,IAAMnJ,EAASC,cADF,EAEgC/H,mBAAS,+BAFzC,mBAENkR,EAFM,KAEUC,EAFV,OAG0BnR,mBAAS,MAHnC,mBAGNoR,EAHM,KAGOvR,EAHP,OAQWG,mBAAS,MARpB,mBAQNmB,EARM,KAQApB,EARA,OAS6BC,mBAAS,IATtC,mBASNsP,EATM,KASS+B,EATT,OAUiCrR,mBAAS,IAV1C,mBAUN0E,EAVM,KAUWC,EAVX,OAWmB3E,mBAAS,MAX5B,mBAWNqI,EAXM,KAWIgH,EAXJ,KAmDb,OArCApI,qBAAU,WACNmK,GACFE,YAAW,WACVzR,EAAgB,QACd,OAEH,CAACuR,IAEHnK,qBAAU,WACT,IAAM9F,EAAOsF,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eACjD1F,IACFkO,EAAY5I,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBACnD9G,EAAQoB,GACRmF,EAAgBrC,SAAS9C,EAAKoC,UAE/B,IAED0D,qBAAU,WACT,GAAG9F,EAAK,CACPgQ,EAAmB,mCACnB9B,EAAY5I,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBACnD,IAAMpD,EAASgD,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBACtDlC,EAAmBlB,QAGnB0N,EAAmB,iCAGpB,CAAChQ,IAEF8F,qBAAU,WACN9F,GflE6B,SAACuD,EAAiB2M,GAEnD,IAAM5M,GAAK,IAAI2E,MAAQmI,SAGtBF,EAFS,IAAN5M,EACsB2C,OAAOoK,OAAO9M,GAAiB,GAI/B0C,OAAOoK,OAAO9M,GAAiBD,EAAI,Ie2D3DgN,CAAmB/M,EAAiB2M,KAGrC,CAAC3M,IAGD,sBAAK5C,UAAU,MAAMnB,MAAO,CAACe,OAAO,QAASwP,gBAAgB,OAAD,OAAQA,EAAR,KAC3DQ,eAAe,SADhB,UAEEN,GAAgB,cAAC,GAAD,CAAc9P,MAAO8P,EAAa9P,MAAOC,QAAS6P,EAAa7P,UAE/EJ,EACA,mCACEA,EAAK2F,SAEL,sBAAKnG,MAAO,CAACe,OAAO,QAApB,UACC,cAAC,EAAD,CAAQP,KAAMA,EAAMuB,OAAQ,YDnEb,SAAC3C,GACtB4G,OAAOC,aAAa+K,WAAW,cAC/BhL,OAAOC,aAAa+K,WAAW,gBAC/BhL,OAAOC,aAAa+K,WAAW,mBAC/B5R,EAAQ,MC+D+B2C,CAAO3C,MACxC,cAAC6R,GAAD,CAAc/R,gBAAiBA,EAAiBwP,YAAaA,EAAahH,SAAUA,EACnFiH,cAAeA,OAGjB,cAAC,EAAD,CAAa5K,gBAAiBA,EAAiBC,mBAAoBA,EAAoBxD,KAAMA,EAAMpB,QAASA,MAI9G,cAAC,kBAAD,CAAiBY,MAAO,CAACe,OAAO,OAAOb,QAAQ,OAASgB,aAAa,cAArE,SACC,cAAC,gBAAD,CAECmG,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAF9B,SAGC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACC,cAAC,EAAD,CAActI,gBAAiBA,EAAiBC,kBAAmB+R,GAAgBlB,aAEpF,cAAC,IAAD,CAAOxI,KAAK,IAAZ,SACC,cAAC,EAAD,CAAWtI,gBAAiBA,EAAiBC,kBAAmB+Q,GAAO9Q,QAASA,UAP7E+H,S,cCpFXgK,IAASC,OACR,cAAC,IAAD,UACC,cAAC,GAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.5a0f89b4.chunk.js","sourcesContent":["import React,{useState} from \"react\" \nimport {Link } from \"react-router-dom\"\n\nconst LoginForm=({setNotification,submitCredentials, setUser})=>{ \n\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\")\n\n\tconst inputStyle={width:\"400px\",padding:\"0\",marginBottom:\"55px\", border:\"none\", borderBottom:\"1px solid black\"}\n\t//TODO notification on wrong credentials\n\n\treturn ( \n\t\t<form  style={{paddingTop:\"40px\",display:\"flex\", alignItems:\"center\"}}\n\t\t\tonSubmit={async (event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tconst user=await submitCredentials({username,password})\n\t\t\t\tif(user){\n\t\t\t\t\tconsole.log(user)\n\t\t\t\t\tsetUser(user) \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Wrong username or password :(\"})\n\n\t\t\t\t}\n\t\t\t}}> \n\t\t\t<div style={{borderRadius:\"0 20px 20px 0\",backgroundColor:\"white\",padding:\"90px 0 0 60px\",height:\"624px\",width:\"608px\",\n\t\t\t\tmarginRight:\"auto\",display:\"flex\", flexDirection:\"column\",\n\t\t\t\talignItems:\"center\",\n\t\t\t}}>\n\t\t\t\t<div style = {{ marginBottom:\"50px\",padding:\"0px\",display:\"flex\", flexDirection:\"column\", justifyItems:\"flex-start\"}}>\n\t\t\t\t\t<h1 style ={{marginBottom:\"80px\"}} className=\"HomeRoute a-routeFadeIn\">Log in.</h1>\n\t\t\t\t\t<input style={inputStyle} value={username} placeholder=\"Username\" \n\t\t\t\t\t\tonChange={(event)=>{setUsername(event.target.value) }}/>\n\t\t\t\t\t<input style={inputStyle} value={password} placeholder=\"Password\" \n\t\t\t\t\t\tonChange={(event)=>{setPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div style = {{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n\t\t\t\t\t<button style={{border:\"none\", borderRadius:\"5px\",backgroundColor:\"#ff8933\",width:\"400px\",height:\"40px\",padding:\"5px\"}}>Log in</button> \n\t\t\t\t\t<p> Don&apos;t have an account? <Link style={{color:\"#ff8933\"}} to=\"/register\"> Sign up </Link></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\t\n\t)\n} \n\nexport default LoginForm\n","import React,{useState} from \"react\" \nimport {useHistory,Link} from \"react-router-dom\"\n\nconst RegisterForm=({setNotification, submitCredentials})=>{ \n\tconst history=useHistory()\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\")\n\n\tconst inputStyle={width:\"400px\",padding:\"0\",marginBottom:\"55px\", border:\"none\", borderBottom:\"1px solid black\"}\n\n\treturn ( \n\t\t<form style={{paddingTop:\"40px\",display:\"flex\", alignItems:\"center\"}}\n\t\t\tonSubmit={async (event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif( await\tsubmitCredentials({username,password})){ //Account creation succeeded\n\t\t\t\t\thistory.push(\"/\")\n\t\t\t\t\tsetNotification({color:\"white\",message:\"User created!\"})\n\t\t\t\t}\n\t\t\t\telse{setNotification({color:\"red\",message:\"Username already exists\"})}\n\t\t\t}}> \n\t\t\t<div style={{borderRadius:\"0 20px 20px 0\",backgroundColor:\"white\",padding:\"90px 0 0 60px\",height:\"624px\",width:\"608px\",\n\t\t\t\tmarginRight:\"auto\",display:\"flex\", flexDirection:\"column\",\n\t\t\t\talignItems:\"center\",\n\t\t\t}}>\n\t\t\t\t<div style = {{ marginBottom:\"50px\",padding:\"0px\",display:\"flex\", flexDirection:\"column\", justifyItems:\"flex-start\"}}>\n\t\t\t\t\t<h1 style ={{width:\"100%\",marginBottom:\"80px\",textAlign:\"left\"}} className=\"HomeRoute a-routeFadeIn\"> Register</h1>\n\t\t\t\t\t<input style={inputStyle} value={username} placeholder=\"Username\" \n\t\t\t\t\t\tonChange={(event)=>{setUsername(event.target.value) }}/>\n\t\t\t\t\t<input style={inputStyle} value={password} placeholder=\"Password\" \n\t\t\t\t\t\tonChange={(event)=>{setPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div style = {{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n\t\t\t\t\t<button style={{border:\"none\", borderRadius:\"5px\",backgroundColor:\"#ff8933\",width:\"400px\",height:\"40px\",padding:\"5px\"}}>Register</button> \n\t\t\t\t\t<p> Have an account? <Link style={{color:\"#ff8933\"}} to=\"/\"> Log in </Link></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\t\n\t)\n} \n\n\nexport default RegisterForm\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Navbar from \"react-bootstrap/Navbar\"\n\nconst Banner=({user,logout})=>{ \n\tconst history = useHistory()\n\tconst logoStyle={width:100}\n\t// Because clicking on a link in navbar would leave it expanded\n\treturn user\n\t\t? (\n\t\t\t<div style={{position:\"fixed\",display:\"flex\", alignItems:\"center\",height:\"80px\",width:\"100%\"}}> \n\t\t\t\t<h3 style={{marginLeft:\"80px\",marginRight:\"22px\",color:\"white\"}}>{user.username}</h3>\n\t\t\t\t<h3 style={{paddingLeft:\"22px\",color:\"white\",borderLeft:\"1px solid white\",cursor:\"pointer\",}}onClick={()=>{logout();history.push(\"/\")}}><a>Sign out</a></h3> \n\t\t\t</div>\n\t\t\n\t\t)\n\t\t:(\n\t\t\t<Navbar style={{display:\"flex\", justifyContent:\"center\",backgroundColor:\"#eeeeee\", color:\"black\"}}>\n\t\t\t\t<Navbar.Brand><img style={logoStyle} src=\"https://svgsilh.com/svg_v2/1539614.svg\"/></Navbar.Brand>\n\t\t\t\t<Navbar.Text><h2 style={{display:\"inline\"}} >Welcome to </h2><h2 style={{color:\"#ff8933\",display:\"inline\"}}>Fitness Express</h2></Navbar.Text>\n\t\t\t</Navbar>\n\t\t)\n}\n\n\nexport default Banner\n","import axios from \"axios\"\nconst baseUrl = \"/api/workout\"\n\nlet token = null \nconst setToken = newToken=> {\n\ttoken = `bearer ${newToken}`\n}\n\nconst setRegiment=async(regiment)=> {\n\tconst config = {\n\t\theaders:{Authorization:token,\n\t\t}}\n\tconst response = await axios.patch(`${baseUrl}/regiment`, regiment, config)\n\treturn response.data\n}\n\nconst sendWorkout=async(workout)=> {\n\tconst config = {\n\t\theaders:{Authorization:token}\n\t}\n\ttry{\n\t\tconst response = await axios.post(baseUrl, workout, config)\n\t\treturn response.data \n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nconst getUserWorkouts=async()=>{\n\tconst config ={\n\t\theaders:{Authorization:token}\n\t}\n\tconst response = await axios.get(baseUrl, config)\n\tconsole.log(response.data)\n\treturn response.data\n}\n\nexport default {setToken,sendWorkout,getUserWorkouts,setRegiment}\n\n","import React,{useState} from \"react\"\n\nconst DayGrid=({day,currentRegiment,setCurrentRegiment})=>{ \n\tconst [exercise,setExercise] = useState(\"\") //individual exercise to control input\n\n\treturn( \n\n\t\t<form style={{borderRadius:\"5px\",margin:\"5px\",display:\"flex\",flexDirection:\"column\",\n\t\t}} onSubmit={(event)=>{event.preventDefault()\n\t\t\t{/*Append submitted exercise to one of day arrays in currentRegiment*/}\n\t\t\tif(exercise.trim()){ //no empty strings\n\t\t\t\tif(currentRegiment[day].includes( //no same exercise in day\n\t\t\t\t\t(exercise.charAt(0).toUpperCase()+ // compare formatted entry\n\t\t\t\t\texercise.slice(1)).trim())){\n\t\t\t\t\tconsole.log(\"you're already doing that today\")} \n\n\t\t\t\telse{ //format and update state\n\t\t\t\t\tsetCurrentRegiment({...currentRegiment, [day]:currentRegiment[day].concat(\n\t\t\t\t\t\t(exercise.charAt(0).toUpperCase()+exercise.slice(1)).trim()) }) //Capitalise first letter, and trim whitespace off ends\n\t\t\t\t\tsetExercise(\"\")\n\t\t\t\t}}\n\t\t}}> \n\n\t\t\t<div style={{width:\"120px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"5px\", display:\"flex\", flexDirection:\"column\"}}> {/*exercise input*/}\n\t\t\t\t<h2 style={{padding:\"10px\",borderRadius:\"5px\", color:\"black\", }}>{day}</h2> \n\t\t\t\t<input style={{width:\"120px\"}}value={exercise} name={day} placeholder=\"exercise\" onChange={(event)=>{\n\t\t\t\t\tif(event.target.value!==\" \"){\n\t\t\t\t\t\tsetExercise(event.target.value)\n\t\t\t\t\t}}}/>\n\t\t\t\t<button style={{marginTop:\"5px\",padding:\"0px\",width:\"57px\",height:\"20px\",border:\"none\",borderRadius:\"5px\",backgroundColor:\"#FF8933\"}}type=\"submit\">add</button>\n\t\t\t</div> \n\n\t\t\t<div style={{display:\"flex\",flexWrap:\"wrap\",flexDirection:\"column\",\n\t\t\t\talignContent:\"center\",justifyContent:\"space-between\"}}>\n\n\t\t\t</div>\n\t\t</form> \n\t)\n\n}\n\nexport default DayGrid","import React from \"react\"\n\nconst DaySubmissions=({currentRegiment,setCurrentRegiment, day})=>{\n\n\treturn(\n\t\t<div key={day} style={{padding:\"10px\",display:\"flex\", flexDirection:\"column\",alignItems:\"center\",\n\t\t}}>\n\t\t\t<ul style={{padding:\"0\",margin:\"0\",width:\"100%\", display:\"flex\" ,flexDirection:\"column\"}}>\n\t\t\t\t{currentRegiment[day].map((exercise,i)=>( \n\t\t\t\t\t<div  key={`${exercise}${i}`} style={{paddingTop:\"4px\",width:\"100%\",display:\"flex\",flexGrow:\"1\", \n\t\t\t\t\t\tflexDirection:\"column\",\n\t\t\t\t\t}}> {/*show each submitted exercise*/}\n\t\t\t\t\t\t<div style={{width:\"100%\",display:\"flex\",alignItems:\"center\", alignContent:\"center\", justifyContent:\"center\",justifyItems:\"center\"}}>\n\t\t\t\t\t\t\t<p style={{margin:\"0\", marginRight:\"4px\"}}>\n\t\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t\t</p> \n\t\t\t\t\t\t\t{/*remove exercise*/}\n\t\t\t\t\t\t\t<button  style={{border:\"none\",borderRadius:\"5px\",marginLeft:\"auto\"}}type=\"button\" onClick={()=>\n\t\t\t\t\t\t\t\tsetCurrentRegiment( \n\t\t\t\t\t\t\t\t\t{...currentRegiment, \n\t\t\t\t\t\t\t\t\t\t[day]:currentRegiment[day].filter((name)=>(\n\t\t\t\t\t\t\t\t\t\t\tname!=exercise)\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t)}>remove\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)) }\n\t\t\t</ul>\n\n\t\t</div>\n\t\t\t\t\t\t\n\t)\n\n}\n\n\nexport default DaySubmissions","import React,{useState,useEffect} from \"react\"\nimport exerciseService from \"../Services/exercises\"\nimport {useHistory} from \"react-router-dom\"\nimport DayGrid from \"./DayGrid\"\nimport DaySubmissions from \"./DaySubmissions\"\nimport Container from \"react-bootstrap/Container\" \n\nconst RegimentForm=({user,setUser,currentRegiment, setCurrentRegiment})=>{ \n\tconst [submissionVisibility,setVisibility]=useState(\"hidden\") \n\tconst history = useHistory() \n\n\tconst regimentHasEmptyDay=()=>{  //returns true if any entry is empty\n\t\tfor (const key in currentRegiment){\n\t\t\tif(currentRegiment[key]&&currentRegiment[key].length===0) \n\t\t\t\treturn true \n\t\t}\n\t\treturn false\n\t}\n\n\tconst finaliseRegiment=async()=>{ //when regiment form has been filled out\n\t\tif (!regimentHasEmptyDay()){ // Don't allow submission unless all active days are filled \n\t\t\tconst returnedRegiment=await exerciseService.setRegiment(currentRegiment) //use server's response as data to be set. Also sets regIsSet in server\n\t\t\tconst loggedUser=JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\n\t\t\tsetUser({...user, regIsSet:true}) //update local data\n\t\t\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(returnedRegiment))\n\t\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({...loggedUser,regIsSet:true}))\n\t\t\thistory.push(\"/\")\n\t\t}\n\t}\n\n\tuseEffect(()=>{\n\t\tregimentHasEmptyDay() \n\t\t\t? setVisibility(\"hidden\")\n\t\t\t: setVisibility(\"visible\") \n\t},[currentRegiment]) //Make submission button appear only once everything is filled\n\n\treturn(\n\t\t<Container style = {{height:\"100%\",overflow:\"auto\",alignItems:\"center\",borderRadius:\"5px\",backgroundColor:\"white\",\n\t\t\tdisplay:\"flex\", flexDirection:\"column\"}}>\n\t\t\t<div className=\"HomeRoute a-routeFadeIn\" style={{overflow:\"auto\",display:\"flex\", flexDirection:\"column\", \n\t\t\t\talignItems:\"center\",marginTop:\"20px\",height:\"100%\",flexGrow:\"1\"}}> \n\t\t\t\t<h1>Fill out your weekly regiment</h1>\n\t\t\t\t<div style={{height:\"100%\",backgroundColor:\"white\",display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\", alignItems:\"flex-start\"}}> \n\t\t\t\t\t{/*for each  (non-null) day-array in currentRegiment, create a DayGrid to fill in target exercises*/}\n\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>{  \n\t\t\t\t\t\tif(!currentRegiment[item]){ return null}\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<div key={i} style = {{marginTop:\"10px\",display:\"flex\", flexDirection:\"column\", alignItems:\"center\"}}>\n\t\t\t\t\t\t\t\t<DayGrid  day={item} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>\n\t\t\t\t\t\t\t\t<DaySubmissions key={item} day={item} setCurrentRegiment={setCurrentRegiment}currentRegiment={currentRegiment}/> \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})} \n\t\t\t\t</div >\n\n\t\t\t</div>\n\t\t\t<div style={{marginTop:\"auto\", }}>\n\t\t\t\t<button style={{backgroundColor:\"#FF8933\",visibility:submissionVisibility,\n\t\t\t\t\twidth:\"80px\",height:\"50px\",\n\t\t\t\t\tborderRadius:\"5px\",}}\n\t\t\t\tonClick={()=>{finaliseRegiment()}}>\n\t\t\t\t\tSave\n\t\t\t\t</button>   \n\n\t\t\t\t<button style={{\n\t\t\t\t\twidth:\"80px\",height:\"50px\",\n\t\t\t\t\tborderRadius:\"5px\",paddingRight:\"0px\", paddingLeft:\"0px\"}}\n\t\t\t\tonClick={()=>{history.push(\"/\")}}>\n\t\t\t\t\tBack\n\t\t\t\t</button>   \n\t\t\t</div>\n\t\t</Container>\n\t)\n}\nexport default RegimentForm\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Banner from \"../Components/Banner\"\nimport Container from \"react-bootstrap/Container\"\n\nconst DayForm=({currentRegiment,setCurrentRegiment})=>{\n\tconst history=useHistory()\n\n\tconst toggleRegimentDay=(dayKey)=>{  //toggles a specific day between null/empty array\n\t\tif (currentRegiment[dayKey]){\n\t\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:null})\n\t\t\treturn\n\t\t}\n\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:[]})\n\t} \n\treturn(\n\t\t<div style={{overflow:\"auto\"}}>\n\t\t\t<Banner/>\n\t\t\t<Container>\n\t\t\t\t<form style={{backgroundColor:\"white\",margin:\"40px\",padding:\"50px\",borderRadius:\"5px\",display:\"flex\",flexDirection:\"column\", alignItems:\"center\"}}> {/*one checkbox for each day, to toggle if it will be an active day or not*/}\n\t\t\t\t\t<h1 style={{borderRadius:\"20px\",padding:\"20px\",fontWeight:\"bold\",color:\"black\",marginTop:\"40px\"}}>Which days will you be working out on?</h1>\n\t\t\t\t\t<div style={{flexWrap:\"wrap\",marginTop:\"20px\",display:\"flex\", justifyContent:\"center\",justifyItems:\"center\"}}>\n\t\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>( \n\t\t\t\t\t\t\t<div style ={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\",width:\"150px\",margin:\"10px\",padding:\"10px\",borderRadius:\"5px\",border:\"1px solid black\"}}key={i}>\n\t\t\t\t\t\t\t\t<h2 >{item}</h2>\n\t\t\t\t\t\t\t\t<input className=\"themedCheckbox\" type=\"checkbox\"  checked={currentRegiment[item]||\"\"}\n\t\t\t\t\t\t\t\t\tonChange={()=>{console.log(currentRegiment);toggleRegimentDay(item)}}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<button style={{height:\"40px\",marginTop:\"20px\",backgroundColor:\"#FF8933\",border:\"none\", borderRadius:\"5px\"}}onClick={(event)=>{\n\t\t\t\t\t\tevent.preventDefault();history.push(\"/setTargetWorkout\")}}>Next</button> \n\t\t\t\t</form>\n\t\t\t</Container>\n\t\t</div> \n\t)\n}\n\nexport default DayForm","import React,{useEffect} from \"react\" \nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\nimport RegimentForm from \"./RegimentForm\"\nimport DayForm from \"./DayForm\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nconst LandingPage=({currentRegiment,setCurrentRegiment,user,setUser})=>{ //Responsible for weekly regiment setup\n\tconst location=useLocation()\n\n\tuseEffect(()=>{  \n\t\tconst regiment=JSON.parse(window.localStorage.getItem(\"currentRegiment\"))\n\t\tsetCurrentRegiment(regiment)\n\t},[]) \n\t\n\treturn (  \n\t\t<TransitionGroup style={{height:\"100%\",flexGrow:\"1\",display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t<CSSTransition\n\t\t\t\n\t\t\t\tkey={location}\n\t\t\t\ttimeout={{ enter: 500, exit: 200 }}>\n\t\t\t\t<Switch location={location}>\n\t\t\t\t\t<Route path=\"/setTargetWorkout\"> {/*second page*/}\n\t\t\t\t\t\t<RegimentForm user={user} setUser={setUser} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>)\n\t\t\t\t\t</Route> \n\t\t\t\t\t<Route path=\"/\"> {/*initial page*/}\n\t\t\t\t\t\t<DayForm currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/> \n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</CSSTransition>\n\t\t</TransitionGroup>\n\t)\n} \n\nexport default LandingPage","export const setTodaysExercises = (currentRegiment, setDaysExercises) => { \n\t/*Choose todays exercises out of weekly regiment*/\n\tconst day=(new Date()).getDay() //Sunday starts at 0 with Date method - with currentRegiment array at 6.\n\tif (day===0){ //Case when Sunday\n\t\tconst exercisesForToday=(Object.values(currentRegiment)[6]) \n\t\tsetDaysExercises(exercisesForToday)\n\t}\n\telse{ //For all other days we can just -1.\n\t\tconst exercisesForToday=(Object.values(currentRegiment)[day-1]) \n\t\tsetDaysExercises(exercisesForToday) \n\t} \n}\n\nexport const exercisesFromWorkouts=(workouts)=>{ //exercise data is nested a bit deep\n\t//TODO clean up code\n\tconst exerciseArray = [] \n\tworkouts.map((dayObject)=>(dayObject.exercises))\n\t\t.forEach((workout)=>{ \n\t\t\texerciseArray.push(...workout)\n\t\t})\n\treturn exerciseArray \n}\n\n//same as above, but one step further\nexport const exerciseNamesFromWorkouts=(workouts)=>{\n\t//TODO clean up code\n\treturn exercisesFromWorkouts(workouts).map((exercise)=>exercise.name) \n}\n\nexport const filterExercisesByName = (exercises, name) => ( \n\t//Filter exercise array of a workout object\n\texercises.filter((exercise) => (\n\t\texercise.name.toLowerCase().includes(name.toLowerCase())\n\t))\n) \nexport const filterWorkoutsByDate = (workouts, dates) => {  \n\t//Date property is in workout object, not in individual exercises\n\tconst resultArray=[]\n\tworkouts.forEach((workout)=>{\n\t\tif (new Date(workout.date) >= dates[0] && new Date(workout.date)<=dates[1]){\n\t\t\tresultArray.push(workout) \n\t\t}\n\t})\n\t\n\treturn resultArray\n}\n\nexport const getTotalReps = (exercises, name) => { \n\ttry{\n\t\tconst filteredWorkouts = filterExercisesByName(exercises, name) //filter exercises by name \n\t\tconst repsArray = filteredWorkouts.map((exercise) =>  //total reps on each exercise\n\t\t\t(exercise.reps*exercise.sets)\n\t\t) \n\t\t//sum all reps in array\n\t\treturn repsArray.reduce((sum,currentValue)=>(sum+currentValue))\n\t}\n\tcatch{\n\t\tconsole.log(\"Provided exercise does not seem to be in the array\") } \n}\n\nexport const getDaysWorkout = (days) => { //returns array of isolated exercise objects \n\tconst today = new Date().toDateString()\n\tconst objectArray = days.filter((day) => ( //only keep workouts that happened today\n\t\ttoday == new Date(day.date).toDateString()\n\t))\n\tconst exerciseArray = exercisesFromWorkouts(objectArray) \n\n\treturn exerciseArray\n}\n\nexport const datedAnalysis=(workouts,exerciseName,interval,parameter)=>{\n\t/* Get array of daily or monthly total reps or total weight lifted.\n\tinterval = \"daily\" / \"monthly\" \n\t* parameter=\"reps\"/weight\"*/\n\n\tif(interval!==\"daily\" && interval !== \"monthly\"){\n\t\tconsole.log(\"Interval is invalid\")\n\t\treturn }\n\n\tconst getTime = interval === \"daily\" //To compare time of workouts\n\t\t? (exercise) => (new Date (exercise.date).toDateString()) // Full date\n\t\t: (exercise) => (new Date (exercise.date).toLocaleDateString(\"default\",{month:\"long\"}))  // Just month\n\n\tconst accumulate = parameter === \"reps\" // will either be \"reps\" or \"weight\"\n\t\t? (workoutObject)=>(workoutObject.exercise.sets*workoutObject.exercise.reps) // accumulate reps\n\t\t: (workoutObject)=>(workoutObject.exercise.weight*workoutObject.exercise.sets*workoutObject.exercise.reps)  //accumulate total weight lifted\n\n\tconst filteredWorkouts=[] //Array of workouts containing date and analysed exercise\n\n\tif(parameter===\"reps\"){\n\t\tworkouts.filter((workout)=>{ \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)  // get requested exercise by name\n\t\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})})\n\t\t})}\n\n\telse {\n\t\tworkouts.filter((workout)=>{ \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.weight && exercise.name==exerciseName) // must also contain weight field\n\t\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})})\n\t\t})}\n\n\tif(filteredWorkouts.length==0){return null} //if no suitable exercise found, abort\n\n\tlet timeProperty // for storing formatted dates\n\tlet total // accumulator for reps or weight\n\tconst uniqueTimes=[] //array of unique dates or months\n\n\tif (filteredWorkouts.length==1){ // If only one workout, return reps*sets(*weight) and date\n\t\ttotal=accumulate(filteredWorkouts[0])\n\t\ttimeProperty = getTime(filteredWorkouts[0]) \n\t\treturn [{timeProperty, total}]\n\t}\n\n\tfilteredWorkouts.forEach((workout,i)=>{\n\t\tif(i===0){ // if first repetition\n\t\t\ttimeProperty = getTime(workout)  //initialise data\n\t\t\ttotal=accumulate(workout)\n\t\t} \n\t\telse{\n\t\t\tif (timeProperty === getTime(workout)){ // Same date \n\t\t\t\tif (i!==filteredWorkouts.length-1){ // Not end of array, aggregate reps\n\t\t\t\t\ttotal+=accumulate(workout)\n\t\t\t\t}\n\t\t\t\telse{ // End of array, push final entry\n\t\t\t\t\ttotal+=accumulate(workout)\n\t\t\t\t\tuniqueTimes.push({timeProperty,total}) }  \n\t\t\t}\n\n\t\t\telse{ // different date\n\t\t\t\tuniqueTimes.push({timeProperty, total}) //push accumulation so far\n\t\t\t\ttimeProperty=getTime(workout) //set time and accumulator equal to current workout\n\t\t\t\ttotal=accumulate(workout) }\n\t\t} \n\t})\n\treturn uniqueTimes \n} \n\nexport const allTimeAnalysis=(workouts,exerciseName,parameter)=>{ \n\tconst filteredWorkouts=[]\t\n\tlet total=0\n\n\tif(parameter===\"reps\") { //total reps\n\t\tworkouts.map((workout)=>{   \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)   // filter exercises\n\t\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise}) // push data\n\t\t\t}) \n\t\t}) \n\t\tfilteredWorkouts.forEach((workout)=>{  \n\t\t\ttotal+=workout.exercise.reps*workout.exercise.sets \n\t\t})\n\t}\n\telse {\n\t\tworkouts.map((workout)=>{\n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>(exercise.weight && exercise.name==exerciseName))\n\t\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise})\n\t\t\t}) \n\t\t})\n\t\tfilteredWorkouts.forEach((workout)=>{\n\t\t\ttotal+=workout.exercise.weight*workout.exercise.reps*workout.exercise.sets \n\t\t})\n\t} \n\tif (total===0) return null\n\treturn [{timeProperty:\"total\", total:total||null}]\n} \n","import React from \"react\"\nimport { CartesianGrid,AreaChart, Area, XAxis, YAxis,  Tooltip, } from \"recharts\"\n\nconst AnalysisPlot=({analysis, dataKey})=>{\n\n\tconst areaChart=(\n\t\t<AreaChart\n\t\t\twidth={600}\n\t\t\theight={400}\n\t\t\tdata={analysis}\n\t\t\tmargin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n\t\t>\n\t\t\t<CartesianGrid strokeDasharray=\"10 10\" />\n\t\t\t<XAxis dataKey=\"timeProperty\" />\n\t\t\t<YAxis />\n\t\t\t<Tooltip />\n\t\t\t<Area\n\t\t\t\ttype='monotone'\n\t\t\t\tdataKey={dataKey}\n\t\t\t\tstroke='#8884d8'\n\t\t\t\tfill='#8884d8'\n\t\t\t/>\n\t\t</AreaChart> \n\t)\n\n\n\tif(analysis){ \n\t\treturn (\n\t\t\tareaChart\n\t\t)\n\n\t}\n\treturn(null)\n}\n\nexport default AnalysisPlot\n","import React from \"react\"\nimport {IoIosArrowBack} from \"react-icons/io\"\nimport {useHistory} from \"react-router-dom\"\n\nconst MenuCard = ({header, body}) => { \n\tconst history=useHistory()\n\treturn(\n\t\t<div style={{borderRadius:\"5px\",marginBottom:\"57px\",marginLeft:\"20px\",marginTop:\"80px\",padding:\"40px\",backgroundColor:\"white\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t<h1 style={{marginBottom:\"57px\"}}> \n\t\t\t\t<a onClick={()=>{history.push(\"/\") }}>\n\t\t\t\t\t<IoIosArrowBack style={{cursor:\"pointer\"}} /> \n\t\t\t\t\t{header}\n\t\t\t\t</a>\n\t\t\t</h1> \n\t\t\t{body()}\n\t\t</div>\n\t)\n}\n\nexport default MenuCard","import React,{useState, useEffect} from \"react\" \nimport {datedAnalysis,allTimeAnalysis,exerciseNamesFromWorkouts} from \"../Functions/workoutFunctions\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nimport AnalysisPlot from \"./AnalysisPlot\"\nimport MenuCard from \"./MenuCard\"\n\nconst Analysis=({workouts})=>{\n\tconst exerciseNameCache=exerciseNamesFromWorkouts(workouts)\n\t\t.filter((name,index)=>( //keep only 1 instance of each name\n\t\t\texerciseNamesFromWorkouts(workouts).indexOf(name)===index))\n\t/*indexOf returns index of first matching element\n\t\t\tif repetition of element in array, it will not equal the index of the first\n\t\t\telement, thus being discarded */\n\t\t\n\tconst [suggestions,setSuggestions]=useState([]) \n\tconst [selection,setSelection]=useState(null)  //Selection to be analysed\n\tconst [analysisType,setAnalysisType]=useState(null)  //Daily/Monthly/All-Time\n\n\tconst [repsAnalysis,setRepsAnalysis]=useState(null)  //Data from analysis\n\tconst [weightAnalysis,setWeightAnalysis]=useState(null)  //Data from analysis\n\n\tuseEffect(()=>{\n\t\tif(analysisType===\"Daily\"){\n\t\t\tsetWeightAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"weight\"))\n\t\t\tsetRepsAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"reps\"))\n\t\t}\n\t\telse if(analysisType===\"Monthly\"){\n\t\t\tsetWeightAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"weight\"))\n\t\t\tsetRepsAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"monthly\",\"reps\"))\n\t\t} \n\t\telse{\n\t\t\tsetWeightAnalysis(allTimeAnalysis(workouts,selection||suggestions[0],\"weight\"))\n\t\t\tsetRepsAnalysis(allTimeAnalysis(workouts,selection||suggestions[0],\"reps\"))\n\t\t}\n\n\t},[selection, analysisType])\n\t\n\tif (workouts.length===0) return (\n\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t<MenuCard header={\"Performance Analysis\"} body={()=>(null)}/>\n\n\t\t\t<div style={{  marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t<div style={{marginBottom:\"57px\",overflowY:\"auto\",minWidth:\"500px\",padding:\"0px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t\t\t<h2>It looks like you&apos;s never submitted an exercise!</h2>\n\t\t\t\t\t<h4 style={{marginTop:\"40px\"}}>After you submit one, you can start viewing your progress here, and get various performance stats.</h4>\n\t\t\t\t</div>\n\t\t\t</div> \n\n\t\t</div> \n\t)\n\n\tconst body=()=>(\n\t\t<>\n\t\t\t<input style={{marginTop:\"20px\"}} onChange={(event)=>{ //filter suggestions\n\t\t\t\tsetSuggestions(exerciseNameCache.filter((name)=>(\n\t\t\t\t\tname.toLowerCase().includes(event.target.value.toLowerCase())\n\t\t\t\t))) }} placeholder=\"exercise\"> \n\t\t\t</input> \n\t\t\t{suggestions.length<5 //if suggestions narrowed down, allow setting the selection for analysis\n\t\t\t\t? (<ul style={{marginTop:\"30px\",padding:\"0px\",display:\"flex\", \n\t\t\t\t\tflexDirection:\"column\",\n\t\t\t\t\tjustifyContent:\"center\",\n\t\t\t\t\tjustifyItems:\"center\", alignContent:\"center\",\n\t\t\t\t}}>{suggestions.map((suggestion,index)=> \n\t\t\t\t\t\t(<div style={{ margin:\"0px 5px 0px 10px\",display:\"flex\", flexDirection:\"column\", alignItems:\"center\",}}key={index}>\n\t\t\t\t\t\t\t<h5 style={{color:\"black\"}}>{suggestion}</h5> \n\t\t\t\t\t\t\t<Dropdown style ={{borderRadius:\"50px\"}} key ={`${index}Button`}>\n\t\t\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAnalyse \n\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Daily\");setSelection(suggestions[index])}}> Daily</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Monthly\");setSelection(suggestions[index])}}> Monthly</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"All-Time\");setSelection(suggestions[index])}}> All-Time</Dropdown.Item>\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t)} </ul>)  \n\t\t\t\t: (<h6 style={{margin:\"40px 0 40px 0\",color:\"black\"}}>Too many suggestions to show!</h6>)} \n\t\t</>\n\t)\n\n\treturn(\n\t\t<div style={{display:\"flex\",height:\"100%\"}}> \n\t\t\t<MenuCard header={\"Analyse\"} body={body}/>\n\n\n\t\t\t{ repsAnalysis && selection &&  //Right-side card\n\t\t\t\t<div style={{ marginTop:\"80px\",display:\"flex\",flexDirection:\"column\" }} >\n\t\t\t\t\t<div style={{overflowY:\"auto\",minWidth:\"500px\",padding:\"36px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\",marginBottom:\"57px\"}}>\n\t\t\t\t\t\n\t\t\t\t\t\t<h2 >{analysisType}</h2>\n\t\t\t\t\t\t<h2>Total repetitions</h2>\n\t\t\t\t\t\t<AnalysisPlot analysis={repsAnalysis} dataKey=\"total\"/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tweightAnalysis && ( \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<h2>Total weight lifted</h2>\n\t\t\t\t\t\t\t\t\t<AnalysisPlot analysis={weightAnalysis} dataKey=\"total\" />\n\t\t\t\t\t\t\t\t</>) \n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Analysis","import React from \"react\"\nimport Table from \"react-bootstrap/Table\"\n\nconst HistoryWorkout = ({workout}) => {\n\n\tif(workout){\n\t\tconst workoutDate=new Date(workout.date)\n\t\tconst workoutMins= workoutDate.getMinutes() < 10\n\t\t\t? \"0\"+workoutDate.getMinutes() // to make double digit\n\t\t\t: workoutDate.getMinutes()\n\t\treturn( \n\t\t\t<div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n\t\t\t\t<h1 style={{backgroundColor:\"\",color:\"black\",padding:\"10px\",borderRadius:\"20px\",\n\t\t\t\t\tmarginTop:\"40px\"}}>{workoutDate.toDateString() +\", \" \n\t\t\t\t\t\t\t\t+ workoutDate.getHours()+ \":\" \n\t\t\t\t\t\t\t\t+ workoutMins}</h1>\n\t\t\t\t<Table striped bordered hover variant=\"dark\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr style={{backgroundColor:\"black\", }}> \n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Exercise</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Repetitions</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Sets</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Weight</h2></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{workout.exercises.map((exercise,index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.name}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.reps}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.sets}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.weight || 0}</h3></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t)}\n}\nexport default HistoryWorkout","import React from \"react\"\nimport Calendar from \"react-calendar\"\n\nimport \"../Calendar.css\"\n \nconst CalendarPicker = ({dateRange,setDateRange, workouts,callback}) => { \n\n\tconst onDateChange=(newDateRange)=>{\n\t\tsetDateRange(newDateRange) // Update selected range\n\t\tcallback(workouts,newDateRange)  //Filter stuff with selected range\n\t} \n\n\treturn (\n\t\t<Calendar\n\t\t\tonChange={onDateChange}\n\t\t\tvalue={dateRange}\n\t\t\tshowNeighboringMonth={true}\n\t\t\tlocale={\"en-US\"} \n\t\t\tselectRange={true}\n\t\t/>\n\t)\n}\nexport default CalendarPicker","import React, {useEffect,useState} from \"react\"\nimport {filterExercisesByName,filterWorkoutsByDate} from \"../Functions/workoutFunctions\"\nimport Form from \"react-bootstrap/Form\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport HistoryWorkout from \"./HistoryWorkout\" \nimport CalendarPicker from \"./CalendarPicker\"\nimport MenuCard from \"./MenuCard\"\n\n\nconst History=({workouts})=>{ \n\tconst [filterQuery, setFilterQuery] = useState(\"\") //Search term\n\tconst [useDate,setUseDate]=useState(false) // use calendar selection? \n\tconst [dateRange,setDateRange]=useState(new Date()) // when interacted with, will become array  with start and end of selection\n\n\tconst [filteredWorkouts,setFilteredWorkouts]=useState(workouts) \n\t\n\tconst filterByDate=(workouts,dateRange)=>{ \n\t\tif(useDate){ // if check box is ticked\n\t\t\tconst results=[]\n\t\t\tfilterWorkoutsByDate(workouts,dateRange).forEach((workout)=>{ //For each workout within date range\n\t\t\t\tif (filterExercisesByName(workout.exercises,filterQuery).length>0){ // if satisfies search query\n\t\t\t\t\tresults.push(workout)\n\t\t\t\t}})\n\t\t\tsetFilteredWorkouts(results)\n\t\t}}\n\n\tuseEffect(()=>{\n\t\tif (useDate) { // combine date range and search term\n\t\t\tfilterByDate(workouts,dateRange)\n\t\t} \n\t\telse{ // use search term only \n\t\t\tsetFilteredWorkouts(\n\t\t\t\tworkouts.map((workout)=>{ \n\t\t\t\t\tconst result=filterExercisesByName(workout.exercises,filterQuery)\n\t\t\t\t\tif(result.length!==0){return(workout)}\n\t\t\t\t})\n\t\t\t\t\t.filter((value)=>value!=undefined)) \n\t\t} \n\t},[filterQuery,useDate])  //search box content or checkbox are changed\n\n\tif (workouts.length ===0) return ( //TODO styling\n\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t<MenuCard header={\"My History\"} body={()=>(null)}/>\n\n\t\t\t<div style={{  marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t<div style={{marginBottom:\"57px\",overflowY:\"auto\",minWidth:\"500px\",padding:\"0px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t\t\t<h2>It looks like you&apos;s never submitted an exercise!</h2>\n\t\t\t\t\t<h4 style={{marginTop:\"40px\"}}>After you submit one, you can start viewing your past workouts here.</h4>\n\t\t\t\t</div>\n\t\t\t</div> \n\n\t\t</div> \n\t)\n\n\tconst body=()=>(\n\t\t<>\n\t\t\t<p>Search by name</p>\n\t\t\t<Form  style={{marginBottom:\"40px\"}} onSubmit={(event)=>{event.preventDefault()}}>\n\t\t\t\t<FormControl type=\"text\" placeholder=\"Search exercises\" className=\"mr-sm-2\" onChange={(event)=>{ \n\t\t\t\t\tsetFilterQuery(event.target.value)\n\t\t\t\t}} />\n\t\t\t</Form>\n\t\t\t<div>\n\t\t\t\t<p style={{marginRight:\"20px\",display:\"inline\"}}>Filter by date</p>\n\t\t\t\t<input type=\"checkbox\" value={useDate} onClick={()=>{setUseDate(!useDate)}}/> {/* ON TOGGLE OFF, SET DATE RANGE TO UNREALISTIC RANGES*/}\n\t\t\t</div>\n\t\t\t<CalendarPicker dateRange={dateRange} setDateRange={setDateRange} workouts={workouts} callback={filterByDate} />\n\n\t\t</>\n\n\t)\n\n\treturn(\n\t\t<>\n\t\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t\t<MenuCard header={\"My History\"} body={body}/>\n\n\t\t\t\t<div style={{  marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t\t{ filteredWorkouts && filteredWorkouts.length>0 && \n\t\t\t\t<div style={{marginBottom:\"57px\",overflowY:\"auto\",minWidth:\"500px\",padding:\"0px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t\t\t<ul style={{ height:\"inherit\",listStyleType:\"none\",backgroundColor:\"white\",borderRadius:\"20px\",display:\"flex\", flexDirection:\"column\", }}>\n\t\t\t\t\t\t{filteredWorkouts.map((workout,index)=>( \n\t\t\t\t\t\t\t<li key={index} >\n\t\t\t\t\t\t\t\t<HistoryWorkout workout={workout} /> \n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default History","import React from \"react\"\nconst StatRow=({exercise,setExercise})=>{\n\t/*Takes individual exercise instances and renders interactable rows of data*/\n\tconst weightColor = exercise.weight ? \"#FF8933\" : \"gray\"\n\tconst cellStyle={width:\"80px\",marginLeft:\"25px\"}\n\n\treturn(\n\t\t<div style={{paddingBottom:\"10px\",marginTop:\"10px\",display:\"flex\"}}> \n\t\t\t<button style={{marginRight:\"10px\", marginBottom:\"auto\",border:\"none\",borderRadius:\"5px\",color:weightColor}} onClick={()=>{setExercise({...exercise, weight:\n\t\t\t\t\t\t\texercise.weight ? null : 1}) }}>KG</button> {/*Toggle weighted*/}\n\t\t\t<div style={cellStyle} > \n\t\t\t\t<h5>Repetitions</h5> \n\t\t\t\t<input style={{width:\"80px\",textAlign:\"left\"}} onChange={(event)=>{\n\t\t\t\t\tsetExercise({...exercise, [\"reps\"]:event.target.value})}}value = {exercise[\"reps\"]}/> \n\t\t\t</div>\n\t\t\t<div style={cellStyle}> \n\t\t\t\t<h5>Sets</h5> \n\t\t\t\t<input style={{width:\"80px\",textAlign:\"left\"}} onChange={(event)=>{\n\t\t\t\t\tsetExercise({...exercise, [\"sets\"]:event.target.value})}}value = {exercise[\"sets\"]}/>\n\t\t\t</div>\n\t\t\t{exercise.weight &&( \n\t\t\t\t<div style={cellStyle}> \n\t\t\t\t\t<h5>Weight</h5> \n\t\t\t\t\t<input style={{width:\"80px\",textAlign:\"left\"}} onChange={(event)=>{\n\t\t\t\t\t\tsetExercise({...exercise, [\"weight\"]:event.target.value})}}value = {exercise[\"weight\"]}/> {/* if weighted, allow changing weight*/}\n\t\t\t\t</div>\n\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default StatRow","import React from \"react\"\nimport StatRow from \"./StatRow\"\nimport {AiOutlineClose} from \"react-icons/ai\"\n\nconst ExerciseBox=({exerciseArray, newWorkout, setNewWorkout})=>{ \n\t/*Responsible for holding all instances of a specific exercise, e.g. [1 set of 12 reps, 3 sets of 20 reps and 5 weight], etc.\n\tEach  instance of array will be passed to a StatRow to be interactable*/\n\n\tconst exerciseName=exerciseArray[0].name\n\n\treturn(\n\t\t<div style={{ marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t<div style={{minWidth:\"500px\",padding:\"36px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t\t<h5>Title</h5>\n\t\t\t\t<div style={{color:\"#FF8933\",marginBottom:\"15px\",display:\"flex\",alignItems:\"center\"}}>\n\t\t\t\t\t<h3 style={{display:\"inline\",color:\"black\"}}>{exerciseName} </h3>\n\t\t\t\t\t<button style={{backgroundColor:\"#FF8933\",marginLeft:\"auto\",border:\"none\",borderRadius:\"5px\"}}onClick={()=>{setNewWorkout(\n\t\t\t\t\t\tnewWorkout.map((Array)=>{return exerciseName===Array[0].name \n\t\t\t\t\t\t\t? Array.concat({name:exerciseName,reps:1,sets:1,weight:null})  //Append new exercise instance to array\n\t\t\t\t\t\t\t: Array}))}}>\n\t\t\t\tAdd set\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div style={{paddingBottom:\"25px\",borderBottom:\"0.5px solid #C4C4C4\"}}>\n\t\t\t\t\t{exerciseArray.map((exercise,i)=>( \n\t\t\t\t\t\t<div style={{display:\"flex\"}}key={`${exercise}${i}`}> {/* if multiple sets of exercise, allow removal*/}\n\t\t\t\t\t\t\t<StatRow exercise={exercise} setExercise={(exercise)=>{ \n\t\t\t\t\t\t\t\tsetNewWorkout(\n\t\t\t\t\t\t\t\t\tnewWorkout.map((Array)=>{return exerciseName===Array[0].name  //Find correct array\n\t\t\t\t\t\t\t\t\t\t? exerciseArray.map((item,index)=>{ // if correct array, find correct exercise index\n\t\t\t\t\t\t\t\t\t\t\tif (i===index) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn exercise // set equal to current Exercise ( passed as func parameter )\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn item // keep all else the same\n\t\t\t\t\t\t\t\t\t\t}) \n\t\t\t\t\t\t\t\t\t\t: Array})) //irrelevant array, keep same\n\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t{exerciseArray.length>1 &&  \n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tonClick={()=>{setNewWorkout(newWorkout.map((item)=>( \n\t\t\t\t\t\t\t\t\texerciseName === item[0].name \n\t\t\t\t\t\t\t\t\t\t? exerciseArray.filter((item,index)=>(index!=i)) // remove by index\n\t\t\t\t\t\t\t\t\t\t: item\n\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t\t))}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AiOutlineClose style={{cursor:\"pointer\"}}  />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}</div> \n\t\t\t</div>\n\t\t</div>\n\t)} \nexport default ExerciseBox\n","import React,{useEffect,useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\n\nimport exerciseService from \"../Services/exercises\" \nimport ExerciseBox from \"./ExerciseBox\" \nimport MenuCard from \"./MenuCard\"\n\nconst ExerciseSubmission=({setNotification,setWorkouts, daysExercises})=>{ \n\tconst history=useHistory()\n\n\tif (!daysExercises){\n\t\t//TODO allow voluntary exercises\n\t\treturn(\n\t\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t\t<MenuCard header={\"My Exercises\"} body={()=>(<p>No exercises for today :)</p>)} />\n\t\t\t</div> \n\t\t)}\n\n\t/* Local copy of daysExercises\n\tto let user remove exercises without messing with outter state*/\n\tconst [uniqueNames,setUniqueNames]=useState([])\n\n\tconst [newWorkout, setNewWorkout]=useState([]) \n\tconst [removedExercises, setRemovedExercises]=useState([]) // Keep track of removed exercises\n\tconst [selectedExercise, setSelectedExercise]=useState(null) // to filter which exercises are shown for editing \n\n\tuseEffect(()=>{\n\t\tsetNewWorkout( daysExercises.map((exerciseName)=>( [{name:exerciseName,reps:1,sets:1}]))) \n\t\tsetUniqueNames([... new Set(daysExercises)]) \n\t}\n\t,[daysExercises])\n\n\tuseEffect(()=>{\n\t\tsetUniqueNames([... new Set(daysExercises)]) \n\t},[])\n\n\tconst submitWorkout=async ()=>{ \n\t\tconst exercisesForSubmission=[]\n\t\tnewWorkout.forEach((exerciseArray)=> //retrieve nested exercises\n\t\t{exerciseArray.forEach((exercise)=>{exercisesForSubmission.push(exercise)}) \n\t\t})\n\n\t\tif(exercisesForSubmission.length>0){// Non-empty\n\t\t\tconst validEntries = newWorkout \n\t\t\t\t.filter((_,i) =>  \n\t\t\t\t\texercisesForSubmission[i] && true)\n\n\t\t\tif (validEntries.length>0) { \n\t\t\t\tconst sentWorkout=await exerciseService.sendWorkout(exercisesForSubmission) //server response to new workout submission \n\t\t\t\tif(sentWorkout){\n\t\t\t\t\tconst userWorkouts = JSON.parse(window.localStorage.getItem(\"userWorkouts\")) //local storage copy of workouts \n\t\t\t\t\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(userWorkouts.concat(sentWorkout))) //update local storage\n\t\t\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))//update state\n\t\t\t\t\tsetNotification({color:\"white\",message:\"Workout uploaded successfully\"})\n\t\t\t\t\thistory.push(\"/\") \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong :(\"}) \n\t\t\t\t}\n\t\t\t} \n\t\t\telse{\n\t\t\t\tconsole.log(\"No valid entries\") //Data mangled-Shouldn't happen in production.\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tsetNotification({color:\"red\",message:\"Looks like you haven't submitted any exercises!\"}) \n\t\t} \n\t} \n\tconst body=()=>(\n\t\t<>\n\t\t\t{ uniqueNames.map((uniqueName,i) => (  //selectable box for each unique exercise\n\t\t\t\t<div style={{height:\"36px\",display:\"flex\",alignItems:\"center\", justifyContent:\"center\",\n\t\t\t\t\tmargin:\"5px\",borderRadius:\"5px\",boxShadow:\"0px 0px 4px rgba(0, 0, 0, 0.45)\"}}\n\t\t\t\tkey={`${uniqueName}${i}`}> \n\t\t\t\t\t<a onClick={()=>{setSelectedExercise(uniqueName)}} style={{width:\"100%\",cursor:\"pointer\",margin:0,marginLeft:\"5px\",marginRight:\"20px\",}}>{uniqueName}</a>\n\t\t\t\t\t<a style={{cursor:\"pointer\",padding:\"5px\",margin:0,}}\n\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.concat(uniqueName))\n\t\t\t\t\t\t\tsetNewWorkout(newWorkout.filter((exerciseArray)=>(exerciseArray[0].name!==uniqueName))) \n\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.filter((name)=>(uniqueName!==name)))\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<BsFillTrashFill style={{marginLeft:\"auto\",marginRight:\"15px\"}} onClick={()=>{ // remove an exercise\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t)) }\n\n\t\t\t{ removedExercises.length>0 && \n\t\t\t\t<h5 style={{marginTop:\"auto\",textAlign:\"center\"}}>Removed</h5> }\n\t\t\t{ removedExercises.map((exercise)=>{ //bring back a removed exercise\n\t\t\t\treturn(\n\t\t\t\t\t<div style={{cursor:\"pointer\",height:\"36px\",display:\"flex\",alignItems:\"center\", justifyContent:\"center\",\n\t\t\t\t\t\tborderRadius:\"5px\",boxShadow:\"0px 0px 4px rgba(0, 0, 0, 0.45)\"}}\n\t\t\t\t\tkey={exercise}>\n\t\t\t\t\t\t<a    \n\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.filter((name)=>(name!=exercise)))\n\t\t\t\t\t\t\t\tsetNewWorkout(newWorkout.concat([[{name:exercise,reps:1,sets:1,weight:null}]]))\n\t\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.concat((exercise)))}} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t)})\n\t\t\t}\n\t\t\t<button style={{borderRadius:\"5px\",border:\"none\",marginTop:\"auto\",}}onClick={()=>\n\t\t\t\tsubmitWorkout(newWorkout)}>Submit</button> \n\t\t</> \n\t)\n\t\n\treturn ( \n\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t<MenuCard  header={\"My Exercises\"} body={body}/> \n\t\t\t{newWorkout.map((exerciseArray,i)=>{ \n\t\t\t\tif (exerciseArray[0].name!==selectedExercise){return}\n\t\t\t\treturn( // render only for selected exercise\n\t\t\t\t\t<ExerciseBox key={i} exerciseArray={exerciseArray} newWorkout={newWorkout} setNewWorkout={setNewWorkout} indexInArray={i}/> \n\t\t\t\t)\n\t\t\t}) \n\t\t\t}\n\t\t</div>\n\n\t)\n} \n\nexport default ExerciseSubmission\n","import React from \"react\" \nimport {Switch,Route,useHistory} from \"react-router-dom\"\nimport Analysis from \"./Analysis\"\nimport History from \"./History\"\nimport ExerciseSubmission from \"./ExerciseSubmission\"\nimport { GoPlusSmall } from \"react-icons/go\"\n\nconst HeadQuarters=({setNotification,setWorkouts,workouts, daysExercises})=>{\n\n\tconst centeredStyle={marginBottom:\"40px\",marginTop:\"4px\",display:\"flex\", alignItems:\"center\",}\n\tconst linkStyle = {display:\"inline\", color:\"white\", cursor:\"pointer\"}\n\n\tconst history=useHistory()\n\t\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<div style={{height:\"100%\",display:\"flex\"}}>\n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle={{marginLeft:\"80px\",marginTop:\"150px\",display:\"flex\",flexDirection:\"column\", }}>\n\t\t\t\t\t\t<div onClick={()=>{history.push(\"/dailySubmission\")}}style={centeredStyle}>\n\t\t\t\t\t\t\t<h2 style={linkStyle}>\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall style={{color:\"white\"}}/> Submit a Workout </a>\n\t\t\t\t\t\t\t</h2> \n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div onClick={()=>{history.push(\"/history\")}}\n\t\t\t\t\t\t\tstyle={centeredStyle}> \n\t\t\t\t\t\t\t<h2 style={linkStyle}>\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall style={{color:\"white\"}} /> My Workout History </a>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<div onClick={()=>{history.push(\"/analysis\")}}\n\t\t\t\t\t\t\tstyle={centeredStyle}>\n\t\t\t\t\t\t\t<h2 style={linkStyle}> \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall style={{color:\"white\"}}/> Performance Analysis </a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{workouts && workouts.length>0 \n\t\t\t\t\t?(<h1 style={{position:\"absolute\", bottom:\"0\",marginBottom:\"60px\",marginLeft:\"60px\",color:\"white\"}}> Welcome Back</h1>) \n\t\t\t\t\t: <h1 style={{position:\"absolute\", bottom:\"0\",marginBottom:\"60px\",marginLeft:\"60px\",color:\"white\"}}>Welcome!</h1>\n\t\t\t\t}</Route>\n\t\t\t<Route path=\"/dailySubmission\">\n\t\t\t\t<ExerciseSubmission setNotification={setNotification} setWorkouts={setWorkouts} \n\t\t\t\t\tdaysExercises={daysExercises} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/history\"> \n\t\t\t\t<History workouts={workouts}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/analysis\" style = {{ height:\"100%\"}}> \n\t\t\t\t<Analysis workouts={workouts}/> \n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n\nexport default HeadQuarters\n","import React from \"react\"\n\nconst Notification = ({message,color}) => { \n\tif(message){\n\t\treturn(\n\t\t\t<div style={{textAlign:\"center\",zIndex:\"1\",width:\"100vw\",position:\"absolute\", top:\"0\",backgroundColor:color}}> \n\t\t\t\t<h1>{message}</h1>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn(null)\n}\nexport default Notification","import axios from \"axios\"\nconst baseurl = \"/api/users\"\n\nconst register = async credentials => {\n\ttry{\n\t\tconst response = await axios.post(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default {register}\n","import axios from \"axios\"\nconst baseurl = \"/api/login\"\n\nconst login = async credentials => {\n\ttry{\n\t\tconst response = await axios.post(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default { login }\n\n","import ExerciseService from \"../Services/exercises\"\nimport LoginService from \"../Services/login\"\n\nexport const login = async(username, password) => {\n\tconst user = await LoginService.login(username, password)\n\tExerciseService.setToken(user.token) \n\n\t/*initialise local storage*/ \n\t/* set user's details. Last field specifies if user has set a workout regiment (false for new users) */\n\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({token:user.token, username:user.username, regIsSet:user.regIsSet})) \n\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(user.days)) // workout history of user \n\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(user.currentRegiment)) //if not, will be object with empty arrays\n\treturn user\n}\n\nexport const logout = (setUser)=>{\n\twindow.localStorage.removeItem(\"loggedUser\")\n\twindow.localStorage.removeItem(\"userWorkouts\")\n\twindow.localStorage.removeItem(\"currentRegiment\")\n\tsetUser(null)\n}\n","import React,{useState,useEffect} from \"react\"\nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nimport LoginForm from \"./Components/LoginForm\"\nimport RegisterForm from \"./Components/RegisterForm\"\nimport Banner from \"./Components/Banner\"\nimport LandingPage from \"./Components/LandingPage\"\nimport Headquarters from \"./Components/Headquarters\"\nimport Notification from \"./Components/Notification\"\n\nimport registerService from \"./Services/register\"\nimport exerciseService from \"./Services/exercises\"\nimport {login,logout}from \"./Functions/userFunctions\"\nimport { setTodaysExercises } from \"./Functions/workoutFunctions\"\n\n\nfunction App(){ \n\tconst location=useLocation()\n\tconst [backgroundImage,setBackgroundImage] = useState(\"Media/weightLiftingGirl.png\")\n\tconst [notification,setNotification] = useState(null) //Action feedback + Error messages\n\t//will be object e.g. {color:\"red\",message:\"text\"}\n\n\t/*user contains authorization token, username, and flag to show if a target regiment has been set.\n\t User workouts history is sent to localStorage on log-in*/\n\tconst [user, setUser] = useState(null) \t\n\tconst [daysExercises, setDaysExercises] = useState([]) // today's target exercises\n\tconst [currentRegiment, setCurrentRegiment] = useState({}) // whole week target exercises\n\tconst [workouts, setWorkouts] = useState(null) // whole week target exercises\n\n\n\tuseEffect(()=>{ //Turn off notification after 3 sec\n\t\tif(notification){\n\t\t\tsetTimeout(() => { \n\t\t\t\tsetNotification(null)\n\t\t\t}, 3000)\n\t\t} \n\t},[notification])\n\n\tuseEffect(()=>{  //Check to see if user is already logged in\n\t\tconst user = JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\t\tif(user){\n\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))\n\t\t\tsetUser(user)\n\t\t\texerciseService.setToken(user.token) //token will be set on each render\n\t\t}}\n\t,[]) \n\n\tuseEffect(()=>{ //Set user's target workout (for a whole week)\n\t\tif(user){\n\t\t\tsetBackgroundImage(\"Media/weights_dark_flipped.jpeg\")\n\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))\n\t\t\tconst regiment=JSON.parse(window.localStorage.getItem(\"currentRegiment\"))\n\t\t\tsetCurrentRegiment(regiment) \n\t\t}\n\t\telse{\n\t\t\tsetBackgroundImage(\"Media/weightLiftingGirl.png\") \n\t\t}\n\t}\n\t,[user])\n\n\tuseEffect(()=>{ //Set exercises of today's workout\n\t\tif(user){ \n\t\t\tsetTodaysExercises(currentRegiment, setDaysExercises)\n\t\t}\n\t}\n\t,[currentRegiment])\n\n\treturn ( \n\t\t<div className=\"App\" style={{height:\"100vh\", backgroundImage:`url(${backgroundImage})`,\n\t\t\tbackgroundSize:\"cover\"}}>\n\t\t\t{notification && <Notification color={notification.color} message={notification.message}/>}\n\n\t\t\t{user ? //if user is logged in\n\t\t\t\t<>\n\t\t\t\t\t{user.regIsSet\n\t\t\t\t\t\t?  //User isn't new and has a regiment set - allow submissions, performance analysis & workout history view\n\t\t\t\t\t\t<div style={{height:\"100%\",}}>\n\t\t\t\t\t\t\t<Banner user={user} logout={()=>{logout(setUser) }}/>  \n\t\t\t\t\t\t\t<Headquarters setNotification={setNotification} setWorkouts={setWorkouts} workouts={workouts}\n\t\t\t\t\t\t\t\tdaysExercises={daysExercises} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:  //if user hasn't set a regiment, do that.\n\t\t\t\t\t\t<LandingPage currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment} user={user} setUser={setUser}/>\n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t\t: //if no user, register or login\n\t\t\t\t<TransitionGroup style={{height:\"100%\",display:\"flex\",  justifyItems:\"flex-start\"}}>\n\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\tkey={location}\n\t\t\t\t\t\ttimeout={{ enter: 500, exit: 200 }}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t\t\t<RegisterForm setNotification={setNotification} submitCredentials={registerService.register}/>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t<LoginForm setNotification={setNotification} submitCredentials={login} setUser={setUser}/> \n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch> \n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</TransitionGroup>\n\t\t\t}\n\t\t</div>\n\t) \n} \n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"bootstrap/dist/js/bootstrap.js\"\nimport {BrowserRouter as Router} from  \"react-router-dom\"\n\n\nReactDOM.render(\n\t<Router>\n\t\t<App /> \n\t</Router>,\n\tdocument.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}
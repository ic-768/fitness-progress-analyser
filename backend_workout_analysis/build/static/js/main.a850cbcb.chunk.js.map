{"version":3,"sources":["Components/LoginForm.js","Components/RegisterForm.js","Components/Banner.js","Services/exercises.js","Components/DayGrid.js","Components/DaySubmissions.js","Components/RegimentForm.js","Components/DayForm.js","Components/LandingPage.js","Functions/workoutFunctions.js","Components/AnalysisPlot.js","Components/MenuCard.js","Components/Analysis.js","Components/HistoryWorkout.js","Components/CalendarPicker.js","Components/History.js","Components/StatRow.js","Components/ExerciseBox.js","Components/ExerciseSubmission.js","Services/password.js","Components/AccountPage.js","Components/Headquarters.js","Components/Notification.js","Services/register.js","Services/login.js","Functions/userFunctions.js","App.js","index.js"],"names":["LoginForm","setNotification","submitCredentials","setUser","useState","username","setUsername","password","setPassword","inputStyle","width","padding","marginBottom","border","borderBottom","style","paddingTop","display","alignItems","onSubmit","event","a","preventDefault","user","color","message","borderRadius","backgroundColor","height","marginRight","flexDirection","justifyItems","className","value","placeholder","onChange","target","type","to","RegisterForm","history","useHistory","push","textAlign","Banner","logout","position","marginLeft","paddingLeft","borderLeft","cursor","onClick","Navbar","justifyContent","Brand","src","Text","baseUrl","token","resetRegiment","config","headers","Authorization","axios","put","response","data","setRegiment","regiment","patch","setToken","newToken","sendWorkout","workout","post","getUserWorkouts","get","console","log","DayGrid","day","currentRegiment","setCurrentRegiment","exercise","setExercise","margin","trim","includes","charAt","toUpperCase","slice","concat","name","marginTop","flexWrap","alignContent","DaySubmissions","map","i","flexGrow","filter","RegimentForm","backButton","submissionVisibility","setVisibility","regimentHasEmptyDay","key","length","finaliseRegiment","exerciseService","returnedRegiment","loggedUser","JSON","parse","window","localStorage","getItem","regIsSet","setItem","stringify","useEffect","Object","entries","Container","overflow","keys","item","visibility","paddingRight","DayForm","fontWeight","checked","dayKey","hasAtLeastOne","LandingPage","location","useLocation","timeout","enter","exit","path","exerciseNamesFromWorkouts","workouts","exerciseArray","dayObject","exercises","forEach","exercisesFromWorkouts","filterExercisesByName","toLowerCase","datedAnalysis","exerciseName","interval","parameter","timeProperty","total","getTime","Date","date","toDateString","toLocaleDateString","month","year","accumulate","workoutObject","sets","reps","weight","filteredWorkouts","uniqueTimes","allTimeAnalysis","AnalysisPlot","analysis","dataKey","areaChart","AreaChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Area","stroke","fill","MenuCard","callback","header","body","minWidth","Analysis","exerciseNameCache","index","indexOf","suggestions","setSuggestions","selection","setSelection","analysisType","setAnalysisType","repsAnalysis","setRepsAnalysis","weightAnalysis","setWeightAnalysis","overflowY","boxShadow","suggestion","Dropdown","Toggle","Menu","Item","HistoryWorkout","workoutDate","workoutMins","getMinutes","getHours","Table","striped","bordered","hover","variant","CalendarPicker","dateRange","setDateRange","newDateRange","showNeighboringMonth","locale","selectRange","History","filterQuery","setFilterQuery","useDate","setUseDate","setFilteredWorkouts","filterByDate","results","dates","filterWorkoutsByDate","undefined","Form","FormControl","listStyleType","StatRow","weightColor","cellStyle","paddingBottom","test","ExerciseBox","newWorkout","setNewWorkout","Array","ExerciseSubmission","setWorkouts","daysExercises","uniqueNames","setUniqueNames","removedExercises","setRemovedExercises","selectedExercise","setSelectedExercise","Set","submitWorkout","exercisesForSubmission","validatedExercises","validEntries","_","sentWorkout","userWorkouts","uniqueName","zIndex","indexInArray","changePassword","credentials","AccountPage","view","setView","currentPassword","setCurrentPassword","newPassword","setNewPassword","validatePassword","setValidatePassword","updatedUser","passwordService","HeadQuarters","centeredStyle","linkStyle","Notification","register","login","LoginService","ExerciseService","days","App","backgroundImage","setBackgroundImage","notification","setDaysExercises","setTimeout","getDay","values","setTodaysExercises","backgroundSize","removeItem","Headquarters","registerService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a850cbcb.chunk.js","sourcesContent":["import React,{useState} from \"react\" \nimport {Link } from \"react-router-dom\"\n\nconst LoginForm=({setNotification,submitCredentials, setUser})=>{ \n\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\")\n\n\tconst inputStyle={width:\"400px\",padding:\"0\",marginBottom:\"55px\", border:\"none\", borderBottom:\"1px solid black\"}\n\n\treturn ( \n\t\t<form  style={{paddingTop:\"40px\",display:\"flex\", alignItems:\"center\"}}\n\t\t\tonSubmit={async (event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tconst user=await submitCredentials({username,password})\n\t\t\t\tif(user){\n\t\t\t\t\tsetUser(user) \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Wrong username or password :(\"}) \n\t\t\t\t}\n\t\t\t}}> \n\t\t\t<div style={{borderRadius:\"0 20px 20px 0\",backgroundColor:\"white\",padding:\"90px 0 0 60px\",height:\"624px\",width:\"608px\",\n\t\t\t\tmarginRight:\"auto\",display:\"flex\", flexDirection:\"column\",\n\t\t\t\talignItems:\"center\",\n\t\t\t}}>\n\t\t\t\t<div style = {{ marginBottom:\"50px\",padding:\"0px\",display:\"flex\", flexDirection:\"column\", justifyItems:\"flex-start\"}}>\n\t\t\t\t\t<h1 style ={{marginBottom:\"80px\"}} className=\"HomeRoute a-routeFadeIn\">Log in.</h1>\n\t\t\t\t\t<input style={inputStyle} value={username} placeholder=\"Username\" \n\t\t\t\t\t\tonChange={(event)=>{setUsername(event.target.value) }}/>\n\t\t\t\t\t<input type=\"password\"style={inputStyle} value={password} placeholder=\"Password\" \n\t\t\t\t\t\tonChange={(event)=>{setPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div style = {{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n\t\t\t\t\t<button style={{border:\"none\", borderRadius:\"5px\",backgroundColor:\"#ff8933\",width:\"400px\",height:\"40px\",padding:\"5px\"}}>Log in</button> \n\t\t\t\t\t<p> Don&apos;t have an account? <Link style={{color:\"#ff8933\"}} to=\"/register\"> Sign up </Link></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\t\n\t)\n} \n\nexport default LoginForm\n","import React,{useState} from \"react\" \nimport {useHistory,Link} from \"react-router-dom\"\n\nconst RegisterForm=({setNotification, submitCredentials})=>{ \n\tconst history=useHistory()\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\")\n\n\tconst inputStyle={width:\"400px\",padding:\"0\",marginBottom:\"55px\", border:\"none\", borderBottom:\"1px solid black\"}\n\n\treturn ( \n\t\t<form style={{paddingTop:\"40px\",display:\"flex\", alignItems:\"center\"}}\n\t\t\tonSubmit={async (event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif(!username || !password){\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Please fill out both fields\"})\n\n\t\t\t\t}\n\t\t\t\telse if( await\tsubmitCredentials({username,password})){ //Account creation succeeded\n\t\t\t\t\thistory.push(\"/\")\n\t\t\t\t\tsetNotification({color:\"white\",message:\"User created!\"})\n\t\t\t\t}\n\t\t\t\telse{setNotification({color:\"red\",message:\"Username already exists\"})}\n\t\t\t}}> \n\t\t\t<div style={{borderRadius:\"0 20px 20px 0\",backgroundColor:\"white\",padding:\"90px 0 0 60px\",height:\"624px\",width:\"608px\",\n\t\t\t\tmarginRight:\"auto\",display:\"flex\", flexDirection:\"column\",\n\t\t\t\talignItems:\"center\",\n\t\t\t}}>\n\t\t\t\t<div style = {{ marginBottom:\"50px\",padding:\"0px\",display:\"flex\", flexDirection:\"column\", justifyItems:\"flex-start\"}}>\n\t\t\t\t\t<h1 style ={{width:\"100%\",marginBottom:\"80px\",textAlign:\"left\"}} className=\"HomeRoute a-routeFadeIn\"> Register</h1>\n\t\t\t\t\t<input style={inputStyle} value={username} placeholder=\"Username\" \n\t\t\t\t\t\tonChange={(event)=>{setUsername(event.target.value) }}/>\n\t\t\t\t\t<input style={inputStyle} value={password} placeholder=\"Password\" \n\t\t\t\t\t\tonChange={(event)=>{setPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div style = {{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n\t\t\t\t\t<button style={{border:\"none\", borderRadius:\"5px\",backgroundColor:\"#ff8933\",width:\"400px\",height:\"40px\",padding:\"5px\"}}>Register</button> \n\t\t\t\t\t<p> Have an account? <Link style={{color:\"#ff8933\"}} to=\"/\"> Log in </Link></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\t\n\t)\n} \n\n\nexport default RegisterForm\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Navbar from \"react-bootstrap/Navbar\"\n\nconst Banner=({user,logout})=>{ \n\tconst history = useHistory()\n\tconst logoStyle={width:100}\n\t// Because clicking on a link in navbar would leave it expanded\n\treturn user\n\t\t? (\n\t\t\t<div style={{position:\"fixed\",display:\"flex\", alignItems:\"center\",height:\"80px\",width:\"100%\"}}> \n\t\t\t\t<h3 style={{marginLeft:\"80px\",marginRight:\"22px\",color:\"white\"}}>{user.username}</h3>\n\t\t\t\t<h3 style={{paddingLeft:\"22px\",color:\"white\",borderLeft:\"1px solid white\",cursor:\"pointer\",}}onClick={()=>{logout();history.push(\"/\")}}><a>Sign out</a></h3> \n\t\t\t</div>\n\t\t\n\t\t)\n\t\t:(\n\t\t\t<Navbar style={{display:\"flex\", justifyContent:\"center\",backgroundColor:\"#eeeeee\", color:\"black\"}}>\n\t\t\t\t<Navbar.Brand><img style={logoStyle} src=\"https://svgsilh.com/svg_v2/1539614.svg\"/></Navbar.Brand>\n\t\t\t\t<Navbar.Text><h2 style={{display:\"inline\"}} >Welcome to </h2><h2 style={{color:\"#ff8933\",display:\"inline\"}}>Fitness Express</h2></Navbar.Text>\n\t\t\t</Navbar>\n\t\t)\n}\n\n\nexport default Banner\n","import axios from \"axios\"\nconst baseUrl = \"/api/workout\"\n\nlet token = null \nconst setToken = newToken=> {\n\ttoken = `bearer ${newToken}`\n}\n\nconst resetRegiment=async()=> {\n\tconst config = {\n\t\theaders:{Authorization:token,\n\t\t}}\n\tconst response = await axios.put(`${baseUrl}/regiment`, null, config)\n\treturn response.data\n}\n\nconst setRegiment=async(regiment)=> {\n\tconst config = {\n\t\theaders:{Authorization:token,\n\t\t}}\n\tconst response = await axios.patch(`${baseUrl}/regiment`, regiment, config)\n\treturn response.data\n}\n\nconst sendWorkout=async(workout)=> {\n\tconst config = {\n\t\theaders:{Authorization:token}\n\t}\n\ttry{\n\t\tconst response = await axios.post(baseUrl, workout, config)\n\t\treturn response.data \n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nconst getUserWorkouts=async()=>{\n\tconst config ={\n\t\theaders:{Authorization:token}\n\t}\n\tconst response = await axios.get(baseUrl, config)\n\tconsole.log(response.data)\n\treturn response.data\n}\n\nexport default {resetRegiment,setToken,sendWorkout,getUserWorkouts,setRegiment}","import React,{useState} from \"react\"\n\nconst DayGrid=({day,currentRegiment,setCurrentRegiment})=>{ \n\tconst [exercise,setExercise] = useState(\"\") //individual exercise to control input\n\tconsole.log(exercise)\n\n\treturn( \n\n\t\t<form style={{borderRadius:\"5px\",margin:\"5px\",display:\"flex\",flexDirection:\"column\",\n\t\t}} onSubmit={(event)=>{event.preventDefault()\n\t\t\t{/*Append submitted exercise to one of day arrays in currentRegiment*/}\n\t\t\tif(exercise.trim()){ //no empty strings\n\t\t\t\tif(currentRegiment[day].includes( //no same exercise in day\n\t\t\t\t\t(exercise.charAt(0).toUpperCase()+ // compare formatted entry\n\t\t\t\t\texercise.slice(1)).trim())){\n\t\t\t\t\tconsole.log(\"you're already doing that today\")} \n\n\t\t\t\telse{ //format and update state\n\t\t\t\t\tsetCurrentRegiment({...currentRegiment, [day]:currentRegiment[day].concat(\n\t\t\t\t\t\t(exercise.charAt(0).toUpperCase()+exercise.slice(1)).trim()) }) //Capitalise first letter, and trim whitespace off ends\n\t\t\t\t\tsetExercise(\"\")\n\t\t\t\t}}\n\t\t}}> \n\n\t\t\t<div style={{width:\"120px\",justifyContent:\"center\",alignItems:\"center\",borderRadius:\"5px\", display:\"flex\", flexDirection:\"column\"}}> {/*exercise input*/}\n\t\t\t\t<h2 style={{padding:\"10px\",borderRadius:\"5px\", color:\"black\", }}>{day}</h2> \n\t\t\t\t<input style={{width:\"120px\"}}value={exercise} name={day} placeholder=\"exercise\" onChange={(event)=>{\n\t\t\t\t\tif(event.target.value!==\" \"){\n\t\t\t\t\t\tsetExercise(event.target.value)\n\t\t\t\t\t}}}/>\n\t\t\t\t<button style={{marginTop:\"5px\",padding:\"0px\",width:\"57px\",height:\"20px\",border:\"none\",borderRadius:\"5px\",backgroundColor:\"#FF8933\"}}type=\"submit\">add</button>\n\t\t\t</div> \n\n\t\t\t<div style={{display:\"flex\",flexWrap:\"wrap\",flexDirection:\"column\",\n\t\t\t\talignContent:\"center\",justifyContent:\"space-between\"}}>\n\n\t\t\t</div>\n\t\t</form> \n\t)\n\n}\n\nexport default DayGrid","import React from \"react\"\n\nconst DaySubmissions=({currentRegiment,setCurrentRegiment, day})=>{\n\n\treturn(\n\t\t<div key={day} style={{padding:\"10px\",display:\"flex\", flexDirection:\"column\",alignItems:\"center\",\n\t\t}}>\n\t\t\t<ul style={{padding:\"0\",margin:\"0\",width:\"100%\", display:\"flex\" ,flexDirection:\"column\"}}>\n\t\t\t\t{currentRegiment[day].map((exercise,i)=>( \n\t\t\t\t\t<div  key={`${exercise}${i}`} style={{paddingTop:\"4px\",width:\"100%\",display:\"flex\",flexGrow:\"1\", \n\t\t\t\t\t\tflexDirection:\"column\",\n\t\t\t\t\t}}> {/*show each submitted exercise*/}\n\t\t\t\t\t\t<div style={{width:\"100%\",display:\"flex\",alignItems:\"center\", alignContent:\"center\", justifyContent:\"center\",justifyItems:\"center\"}}>\n\t\t\t\t\t\t\t<p style={{margin:\"0\", marginRight:\"4px\"}}>\n\t\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t\t</p> \n\t\t\t\t\t\t\t{/*remove exercise*/}\n\t\t\t\t\t\t\t<button  style={{border:\"none\",borderRadius:\"5px\",marginLeft:\"auto\"}}type=\"button\" onClick={()=>\n\t\t\t\t\t\t\t\tsetCurrentRegiment( \n\t\t\t\t\t\t\t\t\t{...currentRegiment, \n\t\t\t\t\t\t\t\t\t\t[day]:currentRegiment[day].filter((name)=>(\n\t\t\t\t\t\t\t\t\t\t\tname!=exercise)\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t)}>remove\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)) }\n\t\t\t</ul>\n\n\t\t</div>\n\t\t\t\t\t\t\n\t)\n\n}\n\n\nexport default DaySubmissions","import React,{useState,useEffect} from \"react\"\nimport exerciseService from \"../Services/exercises\"\nimport {useHistory} from \"react-router-dom\"\nimport DayGrid from \"./DayGrid\"\nimport DaySubmissions from \"./DaySubmissions\"\nimport Container from \"react-bootstrap/Container\" \n\nconst RegimentForm=({backButton,user,setUser,currentRegiment, setCurrentRegiment})=>{ \n\tconst [submissionVisibility,setVisibility]=useState(\"hidden\") \n\tconst history = useHistory() \n\n\tconst regimentHasEmptyDay=()=>{  //returns true if any entry is empty\n\t\tfor (const key in currentRegiment){\n\t\t\tif(currentRegiment[key]&&currentRegiment[key].length===0) \n\t\t\t\treturn true \n\t\t}\n\t\treturn false\n\t}\n\n\tconst finaliseRegiment=async()=>{ //when regiment form has been filled out\n\t\tif (!regimentHasEmptyDay()){ // Don't allow submission unless all active days are filled \n\t\t\tconst returnedRegiment=await exerciseService.setRegiment(currentRegiment) \n\t\t\t//use server's response as data to be set. Also sets regIsSet in server\n\t\t\tconst loggedUser=JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\n\t\t\tsetUser({...user, regIsSet:true}) //update local data\n\t\t\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(returnedRegiment))\n\t\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({...loggedUser,regIsSet:true}))\n\t\t\thistory.push(\"/\")\n\t\t}\n\t}\n\tuseEffect(()=>{\n\t\tif(!Object.entries(currentRegiment).length){ //No days (happens on refresh), redirect back to selection\n\t\t\thistory.push(\"/\") \n\t\t}\n\t},[])\n\n\tuseEffect(()=>{\n\t\tregimentHasEmptyDay() \n\t\t\t? setVisibility(\"hidden\")\n\t\t\t: setVisibility(\"visible\") \n\t},[currentRegiment]) //Make submission button appear only once everything is filled\n\n\treturn(\n\t\t<Container style = {{height:\"100%\",overflow:\"auto\",alignItems:\"center\",borderRadius:\"5px\",backgroundColor:\"white\",\n\t\t\tdisplay:\"flex\", flexDirection:\"column\"}}>\n\t\t\t<div className=\"HomeRoute a-routeFadeIn\" style={{overflow:\"auto\",display:\"flex\", flexDirection:\"column\", \n\t\t\t\talignItems:\"center\",marginTop:\"20px\",height:\"100%\",flexGrow:\"1\"}}> \n\t\t\t\t<h1>Fill out your weekly regiment</h1>\n\t\t\t\t<div style={{height:\"100%\",backgroundColor:\"white\",display:\"flex\", flexWrap:\"wrap\",justifyContent:\"center\", alignItems:\"flex-start\"}}> \n\t\t\t\t\t{/*for each  (non-null) day-array in currentRegiment, create a DayGrid to fill in target exercises*/}\n\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>{  \n\t\t\t\t\t\tif(!currentRegiment[item]){ return null}\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<div key={i} style = {{marginTop:\"10px\",display:\"flex\", flexDirection:\"column\", alignItems:\"center\"}}>\n\t\t\t\t\t\t\t\t<DayGrid  day={item} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>\n\t\t\t\t\t\t\t\t<DaySubmissions key={item} day={item} setCurrentRegiment={setCurrentRegiment}currentRegiment={currentRegiment}/> \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})} \n\t\t\t\t</div >\n\n\t\t\t</div>\n\t\t\t<div style={{marginTop:\"auto\", }}>\n\t\t\t\t<button style={{marginTop:\"10px\",border:\"none\",backgroundColor:\"#FF8933\",visibility:submissionVisibility,\n\t\t\t\t\twidth:\"80px\",height:\"50px\", borderRadius:\"5px\",}}\n\t\t\t\tonClick={()=>{finaliseRegiment()}}>\n\t\t\t\t\tSave\n\t\t\t\t</button>   \n\n\t\t\t\t{backButton &&  //If editing existing regiment from AccountPage, backButton already in MenuCard =>\n\t\t\t\t<button style={{\n\t\t\t\t\twidth:\"80px\",height:\"50px\", borderRadius:\"5px\",paddingRight:\"0px\", paddingLeft:\"0px\"}}\n\t\t\t\tonClick={()=>{history.push(\"/\")}}>\n\t\t\t\t\tBack\n\t\t\t\t</button>   \n\t\t\t\t}\n\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\nexport default RegimentForm\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Banner from \"../Components/Banner\"\nimport Container from \"react-bootstrap/Container\"\n\nconst DayForm=({setNotification,currentRegiment,setCurrentRegiment})=>{\n\tconst history=useHistory()\n\n\tconst toggleRegimentDay=(dayKey)=>{  //toggles a specific day between null/empty array\n\t\tif (currentRegiment[dayKey]){\n\t\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:null})\n\t\t\treturn\n\t\t}\n\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:[]})\n\t} \n\treturn(\n\t\t<div style={{overflow:\"auto\"}}>\n\t\t\t<Banner/>\n\t\t\t<Container>\n\t\t\t\t<form style={{backgroundColor:\"white\",margin:\"40px\",padding:\"50px\",borderRadius:\"5px\",display:\"flex\",flexDirection:\"column\", alignItems:\"center\"}}> {/*one checkbox for each day, to toggle if it will be an active day or not*/}\n\t\t\t\t\t<h1 style={{borderRadius:\"20px\",padding:\"20px\",fontWeight:\"bold\",color:\"black\",marginTop:\"40px\"}}>Which days will you be working out on?</h1>\n\t\t\t\t\t<div style={{flexWrap:\"wrap\",marginTop:\"20px\",display:\"flex\", justifyContent:\"center\",justifyItems:\"center\"}}>\n\t\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>( \n\t\t\t\t\t\t\t<div style ={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\",width:\"150px\",margin:\"10px\",padding:\"10px\",borderRadius:\"5px\",border:\"1px solid black\"}}key={i}>\n\t\t\t\t\t\t\t\t<h2 >{item}</h2>\n\t\t\t\t\t\t\t\t<input className=\"themedCheckbox\" type=\"checkbox\"  checked={currentRegiment[item]||\"\"}\n\t\t\t\t\t\t\t\t\tonChange={()=>{console.log(currentRegiment);toggleRegimentDay(item)}}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<button style={{height:\"40px\",marginTop:\"20px\",backgroundColor:\"#FF8933\",border:\"none\", borderRadius:\"5px\"}}\n\t\t\t\t\t\tonClick={(event)=>{\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tlet hasAtLeastOne=false\n\t\t\t\t\t\t\tfor (const key in currentRegiment){\n\t\t\t\t\t\t\t\tif(currentRegiment[key]){ hasAtLeastOne=true \n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tif (hasAtLeastOne) {\n\t\t\t\t\t\t\t\thistory.push(\"/setTargetWorkout\") \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tsetNotification({color:\"red\", message:\"Pick at least one day to exercise!\"})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>Next</button> \n\t\t\t\t</form>\n\t\t\t</Container>\n\t\t</div> \n\t)\n}\n\nexport default DayForm","import React,{useEffect} from \"react\" \nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\nimport RegimentForm from \"./RegimentForm\"\nimport DayForm from \"./DayForm\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nconst LandingPage=({setNotification, currentRegiment,setCurrentRegiment,user,setUser})=>{ //Responsible for weekly regiment setup\n\tconst location=useLocation()\n\n\tuseEffect(()=>{  \n\t\tconst regiment=JSON.parse(window.localStorage.getItem(\"currentRegiment\"))\n\t\tsetCurrentRegiment(regiment)\n\t},[]) \n\t\n\treturn (  \n\t\t<TransitionGroup style={{height:\"100%\",flexGrow:\"1\",display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t<CSSTransition\n\t\t\t\n\t\t\t\tkey={location}\n\t\t\t\ttimeout={{ enter: 500, exit: 200 }}>\n\t\t\t\t<Switch location={location}>\n\t\t\t\t\t<Route path=\"/setTargetWorkout\"> {/*second page*/}\n\t\t\t\t\t\t<RegimentForm backButton={true} user={user} setUser={setUser} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>)\n\t\t\t\t\t</Route> \n\t\t\t\t\t<Route path=\"/\"> {/*initial page*/}\n\t\t\t\t\t\t<DayForm setNotification={setNotification} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/> \n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</CSSTransition>\n\t\t</TransitionGroup>\n\t)\n} \n\nexport default LandingPage","export const setTodaysExercises = (currentRegiment, setDaysExercises) => { \n\t/*Choose todays exercises out of weekly regiment*/\n\tconst day=(new Date()).getDay() //Sunday starts at 0 with Date() - with currentRegiment at 6.\n\tconst exercisesForToday = day===0\n\t\t? Object.values(currentRegiment)[6] //Sunday\n\t\t: Object.values(currentRegiment)[day-1] //All other days \n\tsetDaysExercises(exercisesForToday) \n}\n\nexport const exercisesFromWorkouts=(workouts)=>{\n\tconst exerciseArray = [] \n\tworkouts.map((dayObject)=>(dayObject.exercises))\n\t\t.forEach((workout)=>{ \n\t\t\texerciseArray.push(...workout)\n\t\t})\n\treturn exerciseArray \n}\n\n//same as above, but one step further\nexport const exerciseNamesFromWorkouts=(workouts)=>{\n\treturn exercisesFromWorkouts(workouts).map((exercise)=>exercise.name) \n}\n\nexport const filterExercisesByName = (exercises, name) => ( \n\t//Filter exercise array of a workout object\n\texercises.filter((exercise) => (\n\t\texercise.name.toLowerCase().includes(name.toLowerCase())\n\t))\n) \nexport const filterWorkoutsByDate = (workouts, dates) => {  \n\t//Date property is in workout object, not in every individual exercises\n\treturn workouts.filter((workout)=>(new Date(workout.date)>= dates[0] && new Date(workout.date)<=dates[1])) \n}\n\nexport const getTotalReps = (exercises, name) => { \n\ttry{\n\t\treturn filterExercisesByName(exercises, name) //filter exercises by name \n\t\t\t.map((exercise) => (exercise.reps*exercise.sets) //total reps on exercise\n\t\t\t\t.reduce((sum,currentValue)=>(sum+currentValue)) //sum all\n\t\t\t) }\n\tcatch{\n\t\tconsole.log(\"Provided exercise does not seem to be in the array\") } \n}\n\nexport const datedAnalysis=(workouts,exerciseName,interval,parameter)=>{\n\t/* Get array of daily or monthly total reps or total weight lifted.\n\tinterval = \"daily\" / \"monthly\" \n\t* parameter=\"reps\"/weight\"*/\n\n\tif(interval!==\"daily\" && interval !== \"monthly\"){\n\t\tconsole.log(\"Interval is invalid\")\n\t\treturn }\n\n\tconst getTime = interval === \"daily\" //To compare time of workouts\n\t\t? (exercise) => (new Date (exercise.date).toDateString()) // Full date\n\t\t: (exercise) => (new Date (exercise.date).toLocaleDateString(\"default\",{month:\"long\",year:\"numeric\"}))  // Month and year\n\n\tconst accumulate = parameter === \"reps\" // will either be \"reps\" or \"weight\"\n\t\t? (workoutObject)=>(workoutObject.exercise.sets*workoutObject.exercise.reps) // accumulate reps\n\t\t: (workoutObject)=>(workoutObject.exercise.weight*workoutObject.exercise.sets*workoutObject.exercise.reps)  //accumulate total weight lifted\n\n\tconst filteredWorkouts=[] //Array of workouts containing date and analysed exercise\n\n\tif(parameter===\"reps\"){\n\t\tworkouts.forEach((workout)=>{ \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)  // get requested exercise by name\n\t\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})})\n\t\t})}\n\n\telse {\n\t\tworkouts.forEach((workout)=>{ \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.weight && exercise.name==exerciseName) // must also contain weight field\n\t\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})})\n\t\t})}\n\n\tif(filteredWorkouts.length==0){return null} //if no suitable exercise found, abort\n\n\tlet timeProperty // for storing formatted dates\n\tlet total // accumulator for reps or weight\n\tconst uniqueTimes=[] //array of unique dates or months\n\n\tif (filteredWorkouts.length==1){ // If only one workout, return reps*sets(*weight) and date\n\t\ttotal=accumulate(filteredWorkouts[0])\n\t\ttimeProperty = getTime(filteredWorkouts[0]) \n\t\treturn [{timeProperty, total}]\n\t}\n\n\tfilteredWorkouts.forEach((workout,i)=>{\n\t\tif(i===0){ // if first repetition\n\t\t\ttimeProperty = getTime(workout)  //initialise data\n\t\t\ttotal=accumulate(workout)\n\t\t} \n\t\telse{\n\t\t\tif (timeProperty === getTime(workout)){ // Same date \n\t\t\t\tif (i!==filteredWorkouts.length-1){ // Not end of array, aggregate reps\n\t\t\t\t\ttotal+=accumulate(workout)\n\t\t\t\t}\n\t\t\t\telse{ // End of array, push final entry\n\t\t\t\t\ttotal+=accumulate(workout)\n\t\t\t\t\tuniqueTimes.push({timeProperty,total}) }  \n\t\t\t}\n\n\t\t\telse{ // different date\n\t\t\t\tuniqueTimes.push({timeProperty, total}) //push accumulation so far\n\t\t\t\ttimeProperty=getTime(workout) //set time and accumulator equal to current workout\n\t\t\t\ttotal=accumulate(workout) }\n\t\t} \n\t})\n\treturn uniqueTimes \n} \n\nexport const allTimeAnalysis=(workouts,exerciseName,parameter)=>{ \n\tconst filteredWorkouts=[]\t\n\tlet total=0\n\n\tif(parameter===\"reps\") { //total reps\n\t\tworkouts.forEach((workout)=>{   \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)   // filter exercises\n\t\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise}) // push data\n\t\t\t}) \n\t\t}) \n\t\tfilteredWorkouts.forEach((workout)=>{  \n\t\t\ttotal+=workout.exercise.reps*workout.exercise.sets \n\t\t})\n\t}\n\telse {\n\t\tworkouts.forEach((workout)=>{\n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>(exercise.weight && exercise.name==exerciseName))\n\t\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise})\n\t\t\t}) \n\t\t})\n\t\tfilteredWorkouts.forEach((workout)=>{\n\t\t\ttotal+=workout.exercise.weight*workout.exercise.reps*workout.exercise.sets \n\t\t})\n\t} \n\tif (total===0) return null\n\treturn [{timeProperty:\"total\", total:total||null}]\n} \n","import React from \"react\"\nimport { CartesianGrid,AreaChart, Area, XAxis, YAxis,  Tooltip, } from \"recharts\"\n\nconst AnalysisPlot=({analysis, dataKey})=>{\n\n\tconst areaChart=(\n\t\t<AreaChart\n\t\t\twidth={600}\n\t\t\theight={400}\n\t\t\tdata={analysis}\n\t\t\tmargin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n\t\t>\n\t\t\t<CartesianGrid strokeDasharray=\"10 10\" />\n\t\t\t<XAxis dataKey=\"timeProperty\" />\n\t\t\t<YAxis />\n\t\t\t<Tooltip />\n\t\t\t<Area\n\t\t\t\ttype='monotone'\n\t\t\t\tdataKey={dataKey}\n\t\t\t\tstroke='#8884d8'\n\t\t\t\tfill='#8884d8'\n\t\t\t/>\n\t\t</AreaChart> \n\t)\n\n\n\tif(analysis){ \n\t\treturn (\n\t\t\tareaChart\n\t\t)\n\n\t}\n\treturn(null)\n}\n\nexport default AnalysisPlot\n","import React from \"react\"\nimport {IoIosArrowBack} from \"react-icons/io\"\nimport {useHistory} from \"react-router-dom\"\n\nconst MenuCard = ({callback, header, body}) => { \n\tconst history=useHistory()\n\treturn(\n\t\t<div style={{minWidth:\"300px\",borderRadius:\"5px\",marginBottom:\"57px\",marginLeft:\"20px\",marginTop:\"80px\",padding:\"40px\",backgroundColor:\"white\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t<h1 style={{marginBottom:\"57px\"}}> \n\t\t\t\t<a onClick={()=>{\n\t\t\t\t\thistory.push(\"/\") \n\t\t\t\t\tcallback && callback() //optional callback\n\t\t\t\t}}>\n\t\t\t\t\t<IoIosArrowBack style={{cursor:\"pointer\"}} /> \n\t\t\t\t\t{header}\n\t\t\t\t</a>\n\t\t\t</h1> \n\t\t\t{body()}\n\t\t</div>\n\t)\n}\n\nexport default MenuCard","import React,{useState, useEffect} from \"react\" \nimport {datedAnalysis,allTimeAnalysis,exerciseNamesFromWorkouts} from \"../Functions/workoutFunctions\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nimport AnalysisPlot from \"./AnalysisPlot\"\nimport MenuCard from \"./MenuCard\"\n\nconst Analysis=({workouts})=>{\n\tconst exerciseNameCache=exerciseNamesFromWorkouts(workouts)\n\t\t.filter((name,index)=>( //keep only 1 instance of each name\n\t\t\texerciseNamesFromWorkouts(workouts).indexOf(name)===index))\n\t/*indexOf returns index of first matching element\n\t\t\tif repetition of element in array, it will not equal the index of the first\n\t\t\telement, thus being discarded */\n\t\t\n\tconst [suggestions,setSuggestions]=useState([]) \n\tconst [selection,setSelection]=useState(null)  //Selection to be analysed\n\tconst [analysisType,setAnalysisType]=useState(null)  //Daily/Monthly/All-Time\n\n\tconst [repsAnalysis,setRepsAnalysis]=useState(null)  //Data from analysis\n\tconst [weightAnalysis,setWeightAnalysis]=useState(null)  //Data from analysis\n\n\tuseEffect(()=>{\n\t\tif(analysisType===\"Daily\"){\n\t\t\tsetWeightAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"weight\"))\n\t\t\tsetRepsAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"reps\"))\n\t\t}\n\t\telse if(analysisType===\"Monthly\"){\n\t\t\tsetWeightAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"monthly\",\"weight\"))\n\t\t\tsetRepsAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"monthly\",\"reps\"))\n\t\t} \n\t\telse{\n\t\t\tsetWeightAnalysis(allTimeAnalysis(workouts,selection||suggestions[0],\"weight\"))\n\t\t\tsetRepsAnalysis(allTimeAnalysis(workouts,selection||suggestions[0],\"reps\"))\n\t\t}\n\n\t},[selection, analysisType])\n\t\n\tif (workouts.length===0) return (\n\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t<MenuCard header={\"Performance Analysis\"} body={()=>(null)}/>\n\n\t\t\t<div style={{  marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t<div style={{marginBottom:\"57px\",overflowY:\"auto\",minWidth:\"500px\",padding:\"0px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t\t\t<h2>It looks like you&apos;s never submitted an exercise!</h2>\n\t\t\t\t\t<h4 style={{marginTop:\"40px\"}}>After you submit one, you can start viewing your progress here, and get various performance stats.</h4>\n\t\t\t\t</div>\n\t\t\t</div> \n\n\t\t</div> \n\t)\n\n\tconst body=()=>(\n\t\t<>\n\t\t\t<input style={{marginTop:\"20px\"}} onChange={(event)=>{ //filter suggestions\n\t\t\t\tsetSuggestions(exerciseNameCache.filter((name)=>(\n\t\t\t\t\tname.toLowerCase().includes(event.target.value.toLowerCase())\n\t\t\t\t))) }} placeholder=\"exercise\"> \n\t\t\t</input> \n\t\t\t{suggestions.length<5 //if suggestions narrowed down, allow setting the selection for analysis\n\t\t\t\t? (<ul style={{marginTop:\"30px\",padding:\"0px\",display:\"flex\", \n\t\t\t\t\tflexDirection:\"column\",\n\t\t\t\t\tjustifyContent:\"center\",\n\t\t\t\t\tjustifyItems:\"center\", alignContent:\"center\",\n\t\t\t\t}}>{suggestions.map((suggestion,index)=> \n\t\t\t\t\t\t(<div style={{ margin:\"0px 5px 0px 10px\",display:\"flex\", flexDirection:\"column\", alignItems:\"center\",}}key={index}>\n\t\t\t\t\t\t\t<h5 style={{color:\"black\"}}>{suggestion}</h5> \n\t\t\t\t\t\t\t<Dropdown style ={{borderRadius:\"50px\"}} key ={`${index}Button`}>\n\t\t\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAnalyse \n\t\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Daily\");setSelection(suggestions[index])}}> Daily</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Monthly\");setSelection(suggestions[index])}}> Monthly</Dropdown.Item>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"All-Time\");setSelection(suggestions[index])}}> All-Time</Dropdown.Item>\n\t\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t</div>)\n\t\t\t\t\t)} </ul>)  \n\t\t\t\t: (<h6 style={{margin:\"40px 0 40px 0\",color:\"black\"}}>Too many suggestions to show!</h6>)} \n\t\t</>\n\t)\n\n\treturn(\n\t\t<div style={{display:\"flex\",height:\"100%\"}}> \n\t\t\t<MenuCard header={\"Analyse\"} body={body}/>\n\n\n\t\t\t{ repsAnalysis && selection &&  //Right-side card\n\t\t\t\t<div style={{ marginTop:\"80px\",display:\"flex\",flexDirection:\"column\" }} >\n\t\t\t\t\t<div style={{overflowY:\"auto\",minWidth:\"500px\",padding:\"36px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\",marginBottom:\"57px\"}}>\n\t\t\t\t\t\n\t\t\t\t\t\t<h2 >{analysisType}</h2>\n\t\t\t\t\t\t<h2>Total repetitions</h2>\n\t\t\t\t\t\t<AnalysisPlot analysis={repsAnalysis} dataKey=\"total\"/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tweightAnalysis && ( \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<h2>Total weight lifted</h2>\n\t\t\t\t\t\t\t\t\t<AnalysisPlot analysis={weightAnalysis} dataKey=\"total\" />\n\t\t\t\t\t\t\t\t</>) \n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Analysis","import React from \"react\"\nimport Table from \"react-bootstrap/Table\"\n\nconst HistoryWorkout = ({workout}) => {\n\n\tif(workout){\n\t\tconst workoutDate=new Date(workout.date)\n\t\tconst workoutMins= workoutDate.getMinutes() < 10\n\t\t\t? \"0\"+workoutDate.getMinutes() // to make double digit\n\t\t\t: workoutDate.getMinutes()\n\t\treturn( \n\t\t\t<div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n\t\t\t\t<h1 style={{backgroundColor:\"\",color:\"black\",padding:\"10px\",borderRadius:\"20px\",\n\t\t\t\t\tmarginTop:\"40px\"}}>{workoutDate.toDateString() +\", \" \n\t\t\t\t\t\t\t\t+ workoutDate.getHours()+ \":\" \n\t\t\t\t\t\t\t\t+ workoutMins}</h1>\n\t\t\t\t<Table striped bordered hover variant=\"dark\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr style={{backgroundColor:\"black\", }}> \n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Exercise</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Repetitions</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Sets</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2 style={{color:\"cornflowerblue\"}}>Weight</h2></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{workout.exercises.map((exercise,index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.name}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.reps}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.sets}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.weight || 0}</h3></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t)}\n}\nexport default HistoryWorkout","import React from \"react\"\nimport Calendar from \"react-calendar\"\n\nimport \"../Calendar.css\"\n \nconst CalendarPicker = ({dateRange,setDateRange, workouts,callback}) => { \n\n\tconst onDateChange=(newDateRange)=>{\n\t\tsetDateRange(newDateRange) // Update selected range\n\t\tcallback(workouts,newDateRange)  //Filter stuff with selected range\n\t} \n\n\treturn (\n\t\t<Calendar\n\t\t\tonChange={onDateChange}\n\t\t\tvalue={dateRange}\n\t\t\tshowNeighboringMonth={true}\n\t\t\tlocale={\"en-US\"} \n\t\t\tselectRange={true}\n\t\t/>\n\t)\n}\nexport default CalendarPicker","import React, {useEffect,useState} from \"react\"\nimport {filterExercisesByName,filterWorkoutsByDate} from \"../Functions/workoutFunctions\"\nimport Form from \"react-bootstrap/Form\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport HistoryWorkout from \"./HistoryWorkout\" \nimport CalendarPicker from \"./CalendarPicker\"\nimport MenuCard from \"./MenuCard\"\n\n\nconst History=({workouts})=>{ \n\tconst [filterQuery, setFilterQuery] = useState(\"\") //Search term\n\tconst [useDate,setUseDate]=useState(false) // use calendar selection? \n\tconst [dateRange,setDateRange]=useState(new Date()) // when interacted with, will become array  with start and end of selection\n\n\tconst [filteredWorkouts,setFilteredWorkouts]=useState(workouts) \n\t\n\tconst filterByDate=(workouts,dateRange)=>{ \n\t\tif(useDate){ // if check box is ticked\n\t\t\tconst results=[]\n\t\t\tfilterWorkoutsByDate(workouts,dateRange).forEach((workout)=>{ //For each workout within date range\n\t\t\t\tif (filterExercisesByName(workout.exercises,filterQuery).length>0){ // if satisfies search query\n\t\t\t\t\tresults.push(workout)\n\t\t\t\t}})\n\t\t\tsetFilteredWorkouts(results)\n\t\t}}\n\n\tuseEffect(()=>{\n\t\tif (useDate) { // combine date range and search term\n\t\t\tfilterByDate(workouts,dateRange)\n\t\t} \n\t\telse{ // use search term only \n\t\t\tsetFilteredWorkouts(\n\t\t\t\tworkouts.map((workout)=>{ \n\t\t\t\t\tconst result=filterExercisesByName(workout.exercises,filterQuery)\n\t\t\t\t\tif(result.length!==0){return(workout)}\n\t\t\t\t})\n\t\t\t\t\t.filter((value)=>value!=undefined)) \n\t\t} \n\t},[filterQuery,useDate])  //search box content or checkbox are changed\n\n\tif (workouts.length ===0) return ( //TODO styling\n\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t<MenuCard header={\"My History\"} body={()=>(null)}/>\n\n\t\t\t<div style={{  marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t<div style={{marginBottom:\"57px\",overflowY:\"auto\",minWidth:\"500px\",padding:\"0px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t\t\t<h2>It looks like you&apos;s never submitted an exercise!</h2>\n\t\t\t\t\t<h4 style={{marginTop:\"40px\"}}>After you submit one, you can start viewing your past workouts here.</h4>\n\t\t\t\t</div>\n\t\t\t</div> \n\n\t\t</div> \n\t)\n\n\tconst body=()=>(\n\t\t<>\n\t\t\t<p>Search by name</p>\n\t\t\t<Form  style={{marginBottom:\"40px\"}} onSubmit={(event)=>{event.preventDefault()}}>\n\t\t\t\t<FormControl type=\"text\" placeholder=\"Search exercises\" className=\"mr-sm-2\" onChange={(event)=>{ \n\t\t\t\t\tsetFilterQuery(event.target.value)\n\t\t\t\t}} />\n\t\t\t</Form>\n\t\t\t<div>\n\t\t\t\t<p style={{marginRight:\"20px\",display:\"inline\"}}>Filter by date</p>\n\t\t\t\t<input type=\"checkbox\" value={useDate} onClick={()=>{setUseDate(!useDate)}}/> {/* ON TOGGLE OFF, SET DATE RANGE TO UNREALISTIC RANGES*/}\n\t\t\t</div>\n\t\t\t<CalendarPicker dateRange={dateRange} setDateRange={setDateRange} workouts={workouts} callback={filterByDate} />\n\n\t\t</>\n\n\t)\n\n\treturn(\n\t\t<>\n\t\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t\t<MenuCard header={\"My History\"} body={body}/>\n\n\t\t\t\t<div style={{  marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t\t{ filteredWorkouts && filteredWorkouts.length>0 && \n\t\t\t\t<div style={{marginBottom:\"57px\",overflowY:\"auto\",minWidth:\"500px\",padding:\"0px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t\t\t<ul style={{ height:\"inherit\",listStyleType:\"none\",backgroundColor:\"white\",borderRadius:\"20px\",display:\"flex\", flexDirection:\"column\", }}>\n\t\t\t\t\t\t{filteredWorkouts.map((workout,index)=>( \n\t\t\t\t\t\t\t<li key={index} >\n\t\t\t\t\t\t\t\t<HistoryWorkout workout={workout} /> \n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default History","import React from \"react\"\nconst StatRow=({exercise,setExercise})=>{\n\t/*Takes individual exercise instances and renders interactable rows of data*/\n\tconst weightColor = exercise.weight ? \"#FF8933\" : \"gray\"\n\tconst cellStyle={width:\"80px\",marginLeft:\"25px\"}\n\n\treturn(\n\t\t<div style={{paddingBottom:\"10px\",marginTop:\"10px\",display:\"flex\"}}> \n\t\t\t<button style={{marginRight:\"10px\", marginBottom:\"auto\",border:\"none\",borderRadius:\"5px\",color:weightColor}} onClick={()=>{setExercise({...exercise, weight:\n\t\t\t\t\t\t\texercise.weight ? null : 1}) }}>KG</button> {/*Toggle weighted*/}\n\t\t\t<div style={cellStyle} > \n\t\t\t\t<h5>Repetitions</h5> \n\t\t\t\t<input type=\"number\" style={{width:\"80px\",textAlign:\"left\"}} onChange={(event)=>{\n\t\t\t\t\t(/^[0-9]+$/.test(event.target.value)) &&  // If contains only digits\n\t\t\t\t\tsetExercise({...exercise, [\"reps\"]:event.target.value})}}value = {exercise[\"reps\"]}/> \n\t\t\t</div>\n\t\t\t<div style={cellStyle}> \n\t\t\t\t<h5>Sets</h5> \n\t\t\t\t<input type=\"number\" style={{width:\"80px\",textAlign:\"left\"}} onChange={(event)=>{\n\t\t\t\t\t(/^[0-9]+$/.test(event.target.value)) &&\n\t\t\t\t\tsetExercise({...exercise, [\"sets\"]:event.target.value})}}value = {exercise[\"sets\"]}/>\n\t\t\t</div>\n\t\t\t{exercise.weight!=null &&( \n\t\t\t\t<div style={cellStyle}> \n\t\t\t\t\t<h5>Weight</h5> \n\t\t\t\t\t<input type=\"number\" style={{width:\"80px\",textAlign:\"left\"}} onChange={(event)=>{\n\t\t\t\t\t\t(/^[0-9]+$/.test(event.target.value)) &&\n\t\t\t\t\t\tsetExercise({...exercise, [\"weight\"]:event.target.value})}}value = {exercise[\"weight\"]}/> {/* if weighted, allow changing weight*/}\n\t\t\t\t</div>\n\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default StatRow","import React from \"react\"\nimport StatRow from \"./StatRow\"\nimport {AiOutlineClose} from \"react-icons/ai\"\n\nconst ExerciseBox=({exerciseArray, newWorkout, setNewWorkout})=>{ \n\t/*Responsible for holding all instances of a specific exercise, e.g. [1 set of 12 reps, 3 sets of 20 reps and 5 weight], etc.\n\tEach  instance of array will be passed to a StatRow to be interactable*/\n\n\tconst exerciseName=exerciseArray[0].name\n\n\treturn(\n\t\t<div className=\"a-exerciseEntry\"\n\t\t\tstyle={{minWidth:\"500px\",padding:\"36px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t<h5>Title</h5>\n\t\t\t<div style={{color:\"#FF8933\",marginBottom:\"15px\",display:\"flex\",alignItems:\"center\"}}>\n\t\t\t\t<h3 style={{display:\"inline\",color:\"black\"}}>{exerciseName} </h3>\n\t\t\t\t<button style={{backgroundColor:\"#FF8933\",marginLeft:\"auto\",border:\"none\",borderRadius:\"5px\"}}onClick={()=>{setNewWorkout(\n\t\t\t\t\tnewWorkout.map((Array)=>{return exerciseName===Array[0].name \n\t\t\t\t\t\t? Array.concat({name:exerciseName,reps:1,sets:1,weight:null})  //Append new exercise instance to array\n\t\t\t\t\t\t: Array}))}}>\n\t\t\t\tAdd set\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div style={{paddingBottom:\"25px\",borderBottom:\"0.5px solid #C4C4C4\"}}>\n\t\t\t\t{exerciseArray.map((exercise,i)=>( \n\t\t\t\t\t<div style={{display:\"flex\"}}key={`${exercise}${i}`}> {/* if multiple sets of exercise, allow removal*/}\n\t\t\t\t\t\t<StatRow exercise={exercise} setExercise={(exercise)=>{ \n\t\t\t\t\t\t\tsetNewWorkout(\n\t\t\t\t\t\t\t\tnewWorkout.map((Array)=>{return exerciseName===Array[0].name  //Find correct array\n\t\t\t\t\t\t\t\t\t? exerciseArray.map((item,index)=>{ // if correct array, find correct exercise index\n\t\t\t\t\t\t\t\t\t\tif (i===index) {\n\t\t\t\t\t\t\t\t\t\t\treturn exercise // set equal to current Exercise ( passed as func parameter )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn item // keep all else the same\n\t\t\t\t\t\t\t\t\t}) \n\t\t\t\t\t\t\t\t\t: Array})) //irrelevant array, keep same\n\t\t\t\t\t\t}} />\n\t\t\t\t\t\t{exerciseArray.length>1 &&  \n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tonClick={()=>{setNewWorkout(newWorkout.map((item)=>( \n\t\t\t\t\t\t\t\t\texerciseName === item[0].name \n\t\t\t\t\t\t\t\t\t\t? exerciseArray.filter((item,index)=>(index!=i)) // remove by index\n\t\t\t\t\t\t\t\t\t\t: item\n\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t\t))}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AiOutlineClose style={{cursor:\"pointer\"}}  />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t} \n\t\t\t\t\t</div>\n\t\t\t\t))}</div> \n\t\t</div>\n\t)} \nexport default ExerciseBox\n","import React,{useEffect,useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\nimport {CSSTransition}  from \"react-transition-group\"\n\nimport exerciseService from \"../Services/exercises\" \nimport ExerciseBox from \"./ExerciseBox\" \nimport MenuCard from \"./MenuCard\"\n\nconst ExerciseSubmission=({setNotification,setWorkouts, daysExercises})=>{ \n\tconst history=useHistory()\n\n\tif (!daysExercises){\n\t\t//TODO allow voluntary exercises\n\t\treturn(\n\t\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t\t<MenuCard header={\"My Exercises\"} body={()=>(<p>No exercises for today :)</p>)} />\n\t\t\t</div> \n\t\t)}\n\n\t/* Local copy of daysExercises\n\tto let user remove exercises without messing with outter state*/\n\tconst [uniqueNames,setUniqueNames]=useState([])\n\n\tconst [newWorkout, setNewWorkout]=useState([]) \n\tconst [removedExercises, setRemovedExercises]=useState([]) // Keep track of removed exercises\n\tconst [selectedExercise, setSelectedExercise]=useState(null) // to filter which exercises are shown for editing \n\n\tuseEffect(()=>{\n\t\tsetNewWorkout( daysExercises.map((exerciseName)=>( [{name:exerciseName,reps:1,sets:1}]))) \n\t\tsetUniqueNames([... new Set(daysExercises)]) \n\t}\n\t,[daysExercises])\n\n\tuseEffect(()=>{\n\t\tsetUniqueNames([... new Set(daysExercises)]) \n\t},[])\n\n\tconst submitWorkout=async ()=>{ \n\t\tconst exercisesForSubmission=[]\n\t\tnewWorkout.forEach((exerciseArray)=> //retrieve nested exercises\n\t\t{exerciseArray.forEach((exercise)=>{exercisesForSubmission.push(exercise)}) \n\t\t})\n\n\t\tconst validatedExercises=exercisesForSubmission.filter((exercise)=>( //validate exercises here\n\t\t\texercise.sets!=0 && exercise.reps!=0\n\t\t))\n\n\t\tif(validatedExercises.length>0){// Non-empty\n\t\t\tconst validEntries = newWorkout \n\t\t\t\t.filter((_,i) =>  \n\t\t\t\t\tvalidatedExercises[i] && true)\n\t\t\tconsole.log(\"trash\", exerciseService,setWorkouts,history,validEntries)\n\n\t\t\tif (validEntries.length>0) { \n\t\t\t\tconst sentWorkout=await exerciseService.sendWorkout(validatedExercises) //server response to new workout submission \n\t\t\t\tif(sentWorkout){\n\t\t\t\t\tconst userWorkouts = JSON.parse(window.localStorage.getItem(\"userWorkouts\")) //local storage copy of workouts \n\t\t\t\t\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(userWorkouts.concat(sentWorkout))) //update local storage\n\t\t\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))//update state\n\t\t\t\t\tsetNotification({color:\"white\",message:\"Workout uploaded successfully\"})\n\t\t\t\t\thistory.push(\"/\") \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong :(\"}) \n\t\t\t\t}\n\t\t\t} \n\t\t\t\n\t\t\telse{\n\t\t\t\tconsole.log(\"No valid entries\") //Data mangled-Shouldn't happen in production.\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tsetNotification({color:\"red\",message:\"Looks like you haven't submitted any exercises!\"}) \n\t\t} \n\t} \n\tconst body=()=>(\n\t\t<>\n\t\t\t{ uniqueNames.map((uniqueName,i) => (  //selectable box for each unique exercise\n\t\t\t\t<div style={{height:\"36px\",display:\"flex\",alignItems:\"center\", justifyContent:\"center\",\n\t\t\t\t\tmargin:\"5px\",borderRadius:\"5px\",boxShadow:\"0px 0px 4px rgba(0, 0, 0, 0.45)\"}}\n\t\t\t\tkey={`${uniqueName}${i}`}> \n\t\t\t\t\t<a onClick={()=>{setSelectedExercise(uniqueName)}} style={{width:\"100%\",cursor:\"pointer\",margin:0,marginLeft:\"5px\",marginRight:\"20px\",}}>{uniqueName}</a>\n\t\t\t\t\t<a style={{cursor:\"pointer\",padding:\"5px\",margin:0,}}\n\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.concat(uniqueName))\n\t\t\t\t\t\t\tsetNewWorkout(newWorkout.filter((exerciseArray)=>(exerciseArray[0].name!==uniqueName))) \n\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.filter((name)=>(uniqueName!==name)))\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<BsFillTrashFill style={{marginLeft:\"auto\",marginRight:\"15px\"}} onClick={()=>{ // remove an exercise\n\t\t\t\t\t\t}}/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t)) }\n\n\t\t\t{ removedExercises.length>0 && \n\t\t\t\t<h5 style={{marginTop:\"auto\",textAlign:\"center\"}}>Removed</h5> }\n\t\t\t{ removedExercises.map((exercise)=>{ //bring back a removed exercise\n\t\t\t\treturn(\n\t\t\t\t\t<div style={{cursor:\"pointer\",height:\"36px\",display:\"flex\",alignItems:\"center\", justifyContent:\"center\",\n\t\t\t\t\t\tborderRadius:\"5px\",boxShadow:\"0px 0px 4px rgba(0, 0, 0, 0.45)\"}}\n\t\t\t\t\tkey={exercise}>\n\t\t\t\t\t\t<a    \n\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.filter((name)=>(name!=exercise)))\n\t\t\t\t\t\t\t\tsetNewWorkout(newWorkout.concat([[{name:exercise,reps:1,sets:1,weight:null}]]))\n\t\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.concat((exercise)))}} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t)})\n\t\t\t}\n\t\t\t<button style={{borderRadius:\"5px\",border:\"none\",marginTop:\"auto\",}}onClick={()=>\n\t\t\t\tsubmitWorkout(newWorkout)}>Submit</button> \n\t\t</> \n\t)\n\t\n\treturn ( \n\t\t<div style={{display:\"flex\", height:\"100%\"}}>\n\t\t\t<MenuCard  header={\"My Exercises\"} body={body}/> \n\t\t\t{newWorkout.map((exerciseArray,i)=>{ \n\t\t\t\tif (exerciseArray[0].name!==selectedExercise){return} //render only for selected exercise\n\t\t\t\treturn( \n\t\t\t\t\t<div  key={i}style={{ zIndex:\"0\",marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t\t\t<CSSTransition timeout={{ enter: 10, exit: 10 }}>\n\t\t\t\t\t\t\t<ExerciseBox  exerciseArray={exerciseArray} newWorkout={newWorkout} setNewWorkout={setNewWorkout} indexInArray={i}/> \n\t\t\t\t\t\t</CSSTransition>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}) \n\t\t\t}\n\t\t</div> \n\t)\n} \n\nexport default ExerciseSubmission\n","import axios from \"axios\"\nconst baseurl = \"/api/users/password\"\n\nconst changePassword = async credentials => {\n\ttry{\n\t\tconst response = await axios.patch(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default {changePassword}","import React,{useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport MenuCard from \"./MenuCard\"\nimport RegimentForm from \"./RegimentForm\"\nimport exerciseService from \"../Services/exercises\"\nimport passwordService from \"../Services/password\"\n\nconst AccountPage = ({ setNotification,currentRegiment,setCurrentRegiment, user,setUser}) => {\n\n\tconst [view,setView] = useState(\"\")//\"Reset\"/\"Edit\"/Password \n\tconst [currentPassword,setCurrentPassword] = useState(\"\")\n\n\tconst [newPassword,setNewPassword] = useState(\"\") // Let user change password\n\tconst [validatePassword,setValidatePassword] = useState(\"\") // If these two passwords match\n\tconst history = useHistory()\n\treturn( \n\t\t<div style={{display:\"flex\",height:\"100%\"}}> \n\t\t\t<MenuCard  callback={()=>{setCurrentRegiment(JSON.parse(window.localStorage.getItem(\"currentRegiment\")) \n\t\t\t//If unsaved changes, revert currentRegiment\n\t\t\t)} } header={\"My Account\"}body={()=> (\n\t\t\t\t<>\n\t\t\t\t\t<a onClick={()=>{setView(\"Reset\")}} style={{cursor:\"pointer\",height:\"36px\",display:\"flex\",alignItems:\"center\", justifyContent:\"center\",\n\t\t\t\t\t\tmargin:\"5px\",borderRadius:\"5px\",boxShadow:\"0px 0px 4px rgba(0, 0, 0, 0.45)\"}} > \n\t\t\t\t\t\t\tReset weekly regiment\n\t\t\t\t\t</a>\n\n\t\t\t\t\t<a  onClick={()=>{setView(\"Edit\")}}style={{cursor:\"pointer\",height:\"36px\",display:\"flex\",alignItems:\"center\", justifyContent:\"center\",\n\t\t\t\t\t\tmargin:\"5px\",borderRadius:\"5px\",boxShadow:\"0px 0px 4px rgba(0, 0, 0, 0.45)\"}} > \n\t\t\t\t\t\tEdit weekly regiment \n\t\t\t\t\t</a>\n\n\t\t\t\t\t<a onClick={()=>{setView(\"Password\")}}  style={{cursor:\"pointer\",height:\"36px\",display:\"flex\",alignItems:\"center\", justifyContent:\"center\",\n\t\t\t\t\t\tmargin:\"5px\",borderRadius:\"5px\",boxShadow:\"0px 0px 4px rgba(0, 0, 0, 0.45)\"}} > \n\t\t\t\t\t\tChange password\n\t\t\t\t\t</a>\n\t\t\t\t</> \n\t\t\t)}/>\n\n\t\t\t{view && \n\t\t\t<div style={{ marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t<div style={{marginBottom:\"57px\",overflowY:\"auto\",minWidth:\"500px\",padding:\"36px 58px 36px 58px\",boxShadow: (\"0px 0px 4px rgba(0, 0, 0, 0.45)\"),borderRadius:\"5px\",\n\t\t\t\t\tbackgroundColor:\"white\",marginLeft:\"58px\",marginRight:\"58px\"}}>\n\t\t\t\t\t{view===\"Edit\" && (\n\t\t\t\t\t\t<RegimentForm  user={user} setUser={setUser} currentRegiment={currentRegiment} \n\t\t\t\t\t\t\tsetCurrentRegiment={setCurrentRegiment}/>)}\n\t\t\t\t\t{view===\"Reset\" && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Are you sure you want to reset your weekly regiment?</h2> \n\t\t\t\t\t\t\t<h5 style={{marginTop:\"20px\"}}>You&apos;ll be redirected to fill out all your weekly exercises from scratch. \n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tAlternatively, you can simply edit your existing regiment\n\t\t\t\t\t\tfrom the other option in the menu.</h5> \n\t\t\t\t\t\t\t<button style={{border:\"none\", borderRadius:\"5px\"}}onClick ={async()=>{\n\t\t\t\t\t\t\t\tconst updatedUser = await exerciseService.resetRegiment()\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"currentRegiment\", JSON.stringify(updatedUser.currentRegiment))\n\t\t\t\t\t\t\t\tsetUser(updatedUser)\n\t\t\t\t\t\t\t\thistory.push(\"/\") }}>Yes</button> \n\t\t\t\t\t\t</div> )}\n\n\t\t\t\t\t{view===\"Password\" && (\n\t\t\t\t\t\t<form onSubmit={async(event)=>{\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tif (newPassword===validatePassword ){\n\t\t\t\t\t\t\t\tconst updatedUser = await passwordService\n\t\t\t\t\t\t\t\t\t.changePassword({username:user.username,currentPassword,newPassword})\n\t\t\t\t\t\t\t\tif(updatedUser){\n\t\t\t\t\t\t\t\t\tsetUser(updatedUser)\n\t\t\t\t\t\t\t\t\tsetNotification({color:\"green\",message:\"Password changed successfully\"}) \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{ \n\t\t\t\t\t\t\t\t\tsetNotification({color:\"red\",message:\"Process failed. Wrong password maybe?\"}) \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}} style={{alignItems:\"center\",width:\"100%\",display:\"flex\",flexDirection:\"column\"}} >\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>Current password</h5>\n\t\t\t\t\t\t\t\t<input type=\"password\" value={currentPassword} onChange={(event)=>{setCurrentPassword(event.target.value)}}placeholder=\"current password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>New password</h5>\n\t\t\t\t\t\t\t\t<input type=\"password\" value={validatePassword} onChange={(event)=>{setValidatePassword(event.target.value)}}placeholder=\"new password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5>Repeat new password</h5>\n\t\t\t\t\t\t\t\t<input type=\"password\" value={newPassword} onChange={(event)=>{setNewPassword(event.target.value)}}placeholder=\"new password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button style={{marginTop:\"15px\",borderRadius:\"5px\",border:\"none\"}} type=\"submit\">Change my password</button>\n\t\t\t\t\t\t\t<div style={{width:\"100%\",paddingBottom:\"25px\",borderBottom:\"0.5px solid #C4C4C4\"}}>\n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t</form>  \n\t\t\t\t\t)}\n\t\t\t\n\t\t\t\t</div> \n\t\t\t</div> \n\t\t\t}\n\t\t</div> \n\t)\n}\n\nexport default AccountPage","import React from \"react\" \nimport {Switch,Route,useHistory} from \"react-router-dom\"\nimport { GoPlusSmall } from \"react-icons/go\"\nimport Analysis from \"./Analysis\"\nimport History from \"./History\"\nimport ExerciseSubmission from \"./ExerciseSubmission\"\nimport AccountPage from \"./AccountPage\"\n\nconst HeadQuarters=({currentRegiment, setCurrentRegiment, user, setUser,setNotification,setWorkouts,workouts, daysExercises})=>{\n\n\tconst centeredStyle={marginBottom:\"40px\",marginTop:\"4px\",display:\"flex\", alignItems:\"center\",}\n\tconst linkStyle = {display:\"inline\", color:\"white\", cursor:\"pointer\"}\n\n\tconst history=useHistory()\n\t\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/account\">\n\t\t\t\t<AccountPage  setNotification={setNotification} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment} user={user}setUser={setUser}/>\n\n\t\t\t</Route>\n\t\t\t<Route path=\"/dailySubmission\">\n\t\t\t\t<ExerciseSubmission setNotification={setNotification} setWorkouts={setWorkouts} \n\t\t\t\t\tdaysExercises={daysExercises} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/history\"> \n\t\t\t\t<History workouts={workouts}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/analysis\" style = {{ height:\"100%\"}}> \n\t\t\t\t<Analysis workouts={workouts}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/\">\n\t\t\t\t<div style={{height:\"100%\",display:\"flex\"}}>\n\t\t\t\t\t<div \n\t\t\t\t\t\tstyle={{marginLeft:\"80px\",marginTop:\"150px\",display:\"flex\",flexDirection:\"column\", }}>\n\t\t\t\t\t\t<div onClick={()=>{history.push(\"/dailySubmission\")}}style={centeredStyle}>\n\t\t\t\t\t\t\t<h2 style={linkStyle}>\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall style={{color:\"white\"}}/> Submit a Workout </a>\n\t\t\t\t\t\t\t</h2> \n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div onClick={()=>{history.push(\"/history\")}}\n\t\t\t\t\t\t\tstyle={centeredStyle}> \n\t\t\t\t\t\t\t<h2 style={linkStyle}>\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall style={{color:\"white\"}} /> My Workout History </a>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<div onClick={()=>{history.push(\"/analysis\")}}\n\t\t\t\t\t\t\tstyle={centeredStyle}>\n\t\t\t\t\t\t\t<h2 style={linkStyle}> \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall style={{color:\"white\"}}/> Performance Analysis </a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div onClick={()=>{history.push(\"/account\")}}\n\t\t\t\t\t\t\tstyle={centeredStyle}>\n\t\t\t\t\t\t\t<h2 style={linkStyle}> \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall style={{color:\"white\"}}/>My Account</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{workouts && workouts.length>0 \n\t\t\t\t\t?(<h1 style={{position:\"absolute\", bottom:\"0\",marginBottom:\"60px\",marginLeft:\"60px\",color:\"white\"}}> Welcome Back</h1>) \n\t\t\t\t\t: <h1 style={{position:\"absolute\", bottom:\"0\",marginBottom:\"60px\",marginLeft:\"60px\",color:\"white\"}}>Welcome!</h1>\n\t\t\t\t}</Route>\n\t\t</Switch>\n\t)\n}\n\nexport default HeadQuarters\n","import React from \"react\"\n\nconst Notification = ({message,color}) => { \n\tif(message){\n\t\treturn(\n\t\t\t<div style={{textAlign:\"center\",zIndex:\"1\",width:\"100vw\",position:\"absolute\", top:\"0\",backgroundColor:color}}> \n\t\t\t\t<h1>{message}</h1>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn(null)\n}\nexport default Notification","import axios from \"axios\"\nconst baseurl = \"/api/users\"\n\nconst register = async credentials => {\n\ttry{\n\t\tconst response = await axios.post(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default {register}\n","import axios from \"axios\"\nconst baseurl = \"/api/login\"\n\nconst login = async credentials => {\n\ttry{\n\t\tconst response = await axios.post(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default { login }\n\n","import ExerciseService from \"../Services/exercises\"\nimport LoginService from \"../Services/login\"\n\nexport const login = async(username, password) => {\n\tconst user = await LoginService.login(username, password)\n\tExerciseService.setToken(user.token) \n\n\t/*initialise local storage*/ \n\t/* set user's details. Last field specifies if user has set a workout regiment (false for new users) */\n\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({token:user.token, username:user.username, regIsSet:user.regIsSet})) \n\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(user.days)) // workout history of user \n\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(user.currentRegiment)) //if not, will be object with empty arrays\n\treturn user\n}\n\nexport const logout = (setUser)=>{\n\twindow.localStorage.removeItem(\"loggedUser\")\n\twindow.localStorage.removeItem(\"userWorkouts\")\n\twindow.localStorage.removeItem(\"currentRegiment\")\n\tsetUser(null)\n}\n","import React,{useState,useEffect} from \"react\"\nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nimport LoginForm from \"./Components/LoginForm\"\nimport RegisterForm from \"./Components/RegisterForm\"\nimport Banner from \"./Components/Banner\"\nimport LandingPage from \"./Components/LandingPage\"\nimport Headquarters from \"./Components/Headquarters\"\nimport Notification from \"./Components/Notification\"\n\nimport registerService from \"./Services/register\"\nimport exerciseService from \"./Services/exercises\"\nimport {login,logout}from \"./Functions/userFunctions\"\nimport { setTodaysExercises } from \"./Functions/workoutFunctions\"\n\n\nfunction App(){ \n\tconst location=useLocation()\n\tconst [backgroundImage,setBackgroundImage] = useState(\"Media/weightLiftingGirl.png\")\n\tconst [notification,setNotification] = useState(null) //Action feedback + Error messages\n\t//will be object e.g. {color:\"red\",message:\"text\"}\n\n\t/*user contains authorization token, username, and flag to show if a target regiment has been set.\n\t User workouts history is sent to localStorage on log-in*/\n\tconst [user, setUser] = useState(null) \t\n\tconst [daysExercises, setDaysExercises] = useState([]) // today's target exercises\n\tconst [currentRegiment, setCurrentRegiment] = useState({}) // whole week target exercises\n\tconst [workouts, setWorkouts] = useState(null) // whole week target exercises\n\n\n\tuseEffect(()=>{ //Turn off notification after 3 sec\n\t\tif(notification){\n\t\t\tsetTimeout(() => { \n\t\t\t\tsetNotification(null)\n\t\t\t}, 3000)\n\t\t} \n\t},[notification])\n\n\tuseEffect(()=>{  //Check to see if user is already logged in\n\t\tconst user = JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\t\tif(user && Object.entries(user).length>0){ //if no user, will return empty object\n\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))\n\t\t\tsetUser(user)\n\t\t\texerciseService.setToken(user.token) //token will be set on each render\n\t\t}}\n\t,[]) \n\n\tuseEffect(()=>{ //Set user's target workout (for a whole week)\n\t\tif(user){\n\t\t\tsetBackgroundImage(\"Media/weights_dark_flipped.jpeg\")\n\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))\n\t\t\tconst regiment=JSON.parse(window.localStorage.getItem(\"currentRegiment\"))\n\t\t\tsetCurrentRegiment(regiment) \n\t\t}\n\t\telse{\n\t\t\tsetBackgroundImage(\"Media/weightLiftingGirl.png\") \n\t\t}\n\t}\n\t,[user])\n\n\tuseEffect(()=>{ //Set exercises of today's workout\n\t\tif(user){ \n\t\t\tsetTodaysExercises(currentRegiment, setDaysExercises)\n\t\t}\n\t}\n\t,[currentRegiment])\n\n\treturn ( \n\t\t<div className=\"App\" style={{height:\"100vh\", backgroundImage:`url(${backgroundImage})`,\n\t\t\tbackgroundSize:\"cover\"}}>\n\t\t\t{notification && <Notification color={notification.color} message={notification.message}/>}\n\n\t\t\t{user ? //if user is logged in\n\t\t\t\t<>\n\t\t\t\t\t{user.regIsSet\n\t\t\t\t\t\t?  //User isn't new and has a regiment set - allow submissions, performance analysis & workout history view\n\t\t\t\t\t\t<div style={{height:\"100%\",}}>\n\t\t\t\t\t\t\t<Banner user={user} logout={()=>{logout(setUser) }}/>  \n\t\t\t\t\t\t\t<Headquarters currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment} user={user} setUser={setUser} setNotification={setNotification} setWorkouts={setWorkouts} workouts={workouts}\n\t\t\t\t\t\t\t\tdaysExercises={daysExercises} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:  //if user hasn't set a regiment, do that.\n\t\t\t\t\t\t<LandingPage setNotification={setNotification} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment} user={user} setUser={setUser}/>\n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t\t: //if no user, register or login\n\t\t\t\t<TransitionGroup style={{height:\"100%\",display:\"flex\",  justifyItems:\"flex-start\"}}>\n\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\tkey={location}\n\t\t\t\t\t\ttimeout={{ enter: 500, exit: 200 }}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t\t\t<RegisterForm setNotification={setNotification} submitCredentials={registerService.register}/>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t<LoginForm setNotification={setNotification} submitCredentials={login} setUser={setUser}/> \n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch> \n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</TransitionGroup>\n\t\t\t}\n\t\t</div>\n\t) \n} \n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"bootstrap/dist/js/bootstrap.js\"\nimport {BrowserRouter as Router} from  \"react-router-dom\"\n\n\nReactDOM.render(\n\t<Router>\n\t\t<App /> \n\t</Router>,\n\tdocument.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}
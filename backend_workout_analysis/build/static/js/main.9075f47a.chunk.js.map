{"version":3,"sources":["Components/LoginForm.js","Components/RegisterForm.js","Components/Banner.js","Services/token.js","Services/exercises.js","Components/Athlete/DayGrid.js","Components/Athlete/DaySubmissions.js","Components/Athlete/RegimentForm.js","Components/Athlete/DayForm.js","Components/Athlete/OnBoard_A.js","Services/clients.js","Components/Trainer/OnBoard_T.js","Components/LandingPage.js","Functions/workoutFunctions.js","Components/HistoryWorkout.js","Components/CalendarPicker.js","Components/MenuCard.js","Components/Athlete/History_A.js","Components/StatRow.js","Components/ExerciseBox.js","Components/Athlete/ExerciseSubmission_A.js","Services/password.js","Components/AccountPage.js","Components/AnalysisPlot.js","Components/Athlete/Analysis_A.js","Components/Athlete/Headquarters_A.js","Components/Trainer/Analysis_T.js","Components/Trainer/History_T.js","Components/Trainer/ExerciseSubmission_T.js","Components/Trainer/CollapsableList.js","Components/Trainer/AddClient.js","Components/Trainer/ClientsPage.js","Components/Trainer/RoutinePage.js","Components/Trainer/Headquarters_T.js","Components/Notification.js","Services/register.js","Services/login.js","Functions/userFunctions.js","App.js","index.js"],"names":["LoginForm","setNotification","submitCredentials","setUser","useState","username","setUsername","password","setPassword","inputStyle","width","padding","marginBottom","border","borderBottom","style","paddingTop","display","alignItems","onSubmit","event","a","preventDefault","user","color","message","className","value","placeholder","onChange","target","type","height","to","RegisterForm","history","useHistory","push","Banner","logout","position","marginLeft","marginRight","paddingLeft","borderLeft","cursor","onClick","Navbar","justifyContent","backgroundColor","Brand","src","Text","token","newToken","baseUrl","getUserWorkouts","config","headers","Authorization","tokenService","axios","get","response","console","log","data","sendWorkout","workoutData","post","resetRegiment","put","setRegiment","regiment","patch","addRoutine","routine","setRoutines","routines","DayGrid","day","currentRegiment","setCurrentRegiment","exercise","setExercise","trim","includes","charAt","toUpperCase","slice","concat","flexDirection","name","margin","DaySubmissions","map","i","borderRadius","filter","RegimentForm","backButton","submissionVisibility","setVisibility","regimentHasEmptyDay","key","length","finaliseRegiment","exerciseService","returnedRegiment","loggedUser","JSON","parse","window","localStorage","getItem","regIsSet","setItem","stringify","useEffect","Object","entries","Container","keys","item","marginTop","visibility","DayForm","overflow","fontWeight","checked","dayKey","hasAtLeastOne","OnBoardAthlete","location","useLocation","flexGrow","timeout","enter","exit","path","addClient","clients","updateClient","OnBoardTrainer","trainer","setTrainer","setClients","validatePassword","currentClient","setCurrentClient","client","index","clientService","updatedTrainer","removeItem","LandingPage","OnBoard_A","OnBoard_T","getTodaysExercises","Date","getDay","values","exerciseNamesFromWorkouts","workouts","exerciseArray","dayObject","exercises","forEach","workout","exercisesFromWorkouts","filterExercisesByName","toLowerCase","filterWorkoutsByDate","dates","date","datedAnalysis","exerciseName","interval","parameter","timeProperty","total","getTime","toDateString","toLocaleDateString","month","year","accumulate","workoutObject","sets","reps","weight","filteredWorkouts","uniqueTimes","allTimeAnalysis","HistoryWorkout","workoutDate","workoutMins","getMinutes","getHours","Table","striped","bordered","hover","variant","CalendarPicker","dateRange","setDateRange","callback","newDateRange","showNeighboringMonth","locale","selectRange","MenuCard","header","body","History","filterQuery","setFilterQuery","useDate","setUseDate","setFilteredWorkouts","filterByDate","results","undefined","Form","FormControl","listStyleType","StatRow","weightColor","cellStyle","paddingBottom","test","ExerciseBox","newWorkout","setNewWorkout","Array","AthleteExerciseSubmission","setWorkouts","daysExercises","uniqueNames","setUniqueNames","removedExercises","setRemovedExercises","selectedExercise","setSelectedExercise","Set","submitWorkout","exercisesForSubmission","validatedExercises","_","sentWorkout","userWorkouts","uniqueName","textAlign","zIndex","indexInArray","changePassword","credentials","AccountPage","view","setView","currentPassword","setCurrentPassword","newPassword","setNewPassword","setValidatePassword","updatedUser","passwordService","AnalysisPlot","analysis","dataKey","areaChart","AreaChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Area","stroke","fill","AthleteAnalysis","exerciseNameCache","indexOf","suggestions","setSuggestions","selection","setSelection","analysisType","setAnalysisType","repsAnalysis","setRepsAnalysis","weightAnalysis","setWeightAnalysis","suggestion","Dropdown","Toggle","Menu","Item","AthleteHeadquarters","setDaysExercises","Analysis_A","TrainerAnalysis","selectedClient","setSelectedClient","searchQuery","setSearchQuery","setExerciseNameCache","days","TrainerHistory","TrainerExerciseSubmission","unique","_id","updatedClient","updatedClients","CollapsableList","isEditable","addExercise","editExercise","removeExercise","isExpanded","setIsExpanded","listStyle","autoFocus","onBlur","AddClient","submitClient","ClientsPage","clientIndex","setClientIndex","setIsEditable","newExercise","currentExercise","updatedDay","containsDuplicate","size","fromEntries","flexWrap","Mon","Tue","Wed","Thu","Fri","Sat","Sun","boxShadow","fontSize","toggleDay","readOnly","RoutinePage","localRoutines","setLocalRoutines","selectedRoutine","setSelectedRoutine","routineIndex","setRoutineIndex","editRoutine","removeRoutine","updatedRoutines","validatedRoutines","saveRoutines","alignContent","justifyItems","removeFromRoutine","TrainerHeadquarters","isTrainer","storedClients","ExerciseSubmission_T","History_T","Analysis_T","Notification","register","login","LoginService","App","backgroundImage","setBackgroundImage","notification","setTimeout","backgroundSize","Headquarters_T","Headquarters_A","registerService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9075f47a.chunk.js","sourcesContent":["import React,{useState} from \"react\" \nimport {Link } from \"react-router-dom\"\n\nconst LoginForm=({setNotification,submitCredentials, setUser})=>{ \n\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\")\n\n\tconst inputStyle={width:\"400px\",padding:\"0\",marginBottom:\"55px\", border:\"none\", borderBottom:\"1px solid black\"}\n\n\treturn ( \n\t\t<form  style={{paddingTop:\"40px\",display:\"flex\", alignItems:\"center\"}}\n\t\t\tonSubmit={async (event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tconst user=await submitCredentials({username,password})\n\t\t\t\tif(user){\n\t\t\t\t\tsetUser(user) \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Wrong username or password :(\"}) \n\t\t\t\t}\n\t\t\t}}> \n\t\t\t<div className=\"credentialBox\" >\n\t\t\t\t<div className=\"credentialBox__inputContainer\">\n\t\t\t\t\t<h1 style ={{marginBottom:\"80px\"}} className=\"HomeRoute a-routeFadeIn\">Log in</h1>\n\t\t\t\t\t<input style={inputStyle} value={username} placeholder=\"Username\" \n\t\t\t\t\t\tonChange={(event)=>{setUsername(event.target.value) }}/>\n\t\t\t\t\t<input type=\"password\"style={inputStyle} value={password} placeholder=\"Password\" \n\t\t\t\t\t\tonChange={(event)=>{setPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div className=\"credentialBox__submission\" >\n\t\t\t\t\t<button className=\"themed\" style={{width:\"400px\",height:\"40px\"}}>Log in</button>\n\t\t\t\t\t<p> Don&apos;t have an account? <Link style={{color:\"#ff8933\"}} to=\"/register\"> Sign up </Link></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\t\n\t)\n} \n\nexport default LoginForm\n","import React,{useState} from \"react\" \nimport {useHistory,Link} from \"react-router-dom\"\n\nconst RegisterForm=({setNotification, submitCredentials})=>{ \n\tconst history=useHistory()\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\") \n\n\treturn ( \n\t\t<form style={{paddingTop:\"40px\",display:\"flex\", alignItems:\"center\"}}\n\t\t\tonSubmit={async (event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif(!username || !password){\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Please fill out both fields\"})\n\n\t\t\t\t}\n\t\t\t\telse if( await\tsubmitCredentials({username,password})){ //Account creation succeeded\n\t\t\t\t\thistory.push(\"/\")\n\t\t\t\t\tsetNotification({color:\"white\",message:\"User created!\"})\n\t\t\t\t}\n\t\t\t\telse{setNotification({color:\"red\",message:\"Username already exists\"})}\n\t\t\t}}> \n\t\t\t<div className=\"credentialBox\">\n\t\t\t\t<div className=\"credentialBox__inputContainer\">\n\t\t\t\t\t<h1 style ={{marginBottom:\"80px\"}} className=\"HomeRoute a-routeFadeIn\"> Register</h1>\n\t\t\t\t\t<input className=\"credentialBox__input\" value={username} placeholder=\"Username\" \n\t\t\t\t\t\tonChange={(event)=>{setUsername(event.target.value) }}/>\n\t\t\t\t\t<input className=\"credentialBox__input\" value={password} placeholder=\"Password\" \n\t\t\t\t\t\tonChange={(event)=>{setPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div className=\"credentialBox__submission\">\n\t\t\t\t\t<button className=\"themed\" style={{width:\"400px\",height:\"40px\"}}>Register</button> \n\t\t\t\t\t<p> Have an account? <Link style={{color:\"#ff8933\"}} to=\"/\"> Log in </Link></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\t\n\t)\n} \n\n\nexport default RegisterForm\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Navbar from \"react-bootstrap/Navbar\"\n\nconst Banner=({user,logout})=>{ \n\tconst history = useHistory()\n\tconst logoStyle={width:100}\n\t// Because clicking on a link in navbar would leave it expanded\n\treturn user\n\t\t? (\n\t\t\t<div style={{position:\"fixed\",display:\"flex\", alignItems:\"center\",height:\"80px\",width:\"100%\"}}> \n\t\t\t\t<h3 style={{marginLeft:\"80px\",marginRight:\"22px\",color:\"white\"}}>{user.username}</h3>\n\t\t\t\t<h3 style={{paddingLeft:\"22px\",color:\"white\",borderLeft:\"1px solid white\",cursor:\"pointer\"}}\n\t\t\t\t\tonClick={()=>{logout();history.push(\"/\")}}><a>Sign out</a></h3> \n\t\t\t</div>\n\t\t\n\t\t)\n\t\t:(\n\t\t\t<Navbar style={{display:\"flex\", justifyContent:\"center\",backgroundColor:\"#eeeeee\", color:\"black\"}}>\n\t\t\t\t<Navbar.Brand><img style={logoStyle} src=\"https://svgsilh.com/svg_v2/1539614.svg\"/></Navbar.Brand>\n\t\t\t\t<Navbar.Text><h2 style={{display:\"inline\"}} >Welcome to </h2><h2 style={{color:\"#ff8933\",display:\"inline\"}}>Fitness Express</h2></Navbar.Text>\n\t\t\t</Navbar>\n\t\t)\n}\n\n\nexport default Banner\n","let token = null \n\nconst setToken = newToken=> {\n\ttoken = `bearer ${newToken}`\n}\n\nconst getToken=()=>token \n\nexport default {setToken,getToken}","import axios from \"axios\"\nimport tokenService from \"./token\"\nconst baseUrl = \"/api/workout\"\n\nconst getUserWorkouts=async()=>{\n\tconst config ={\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\tconst response = await axios.get(baseUrl, config)\n\tconsole.log(response.data)\n\treturn response.data\n}\n\nconst sendWorkout=async(workoutData)=> {  //TODO if trainer, {exercises: {}, _id:} else just {workout:}\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\n\ttry{\n\t\tconst response = await axios.post(baseUrl, workoutData, config)\n\t\treturn response.data \n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nconst resetRegiment=async()=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken(),\n\t\t}}\n\tconst response = await axios.put(`${baseUrl}/regiment`, null, config)\n\treturn response.data\n}\n\nconst setRegiment=async(regiment)=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken(),\n\t\t}}\n\tconst response = await axios.patch(`${baseUrl}/regiment`, regiment, config)\n\treturn response.data\n}\n\nconst addRoutine = async(routine)=>{ \n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken(),\n\t\t}}\n\tconst response = await axios.post(`${baseUrl}/routines`, routine, config)\n\treturn response.data \n}\n\nconst setRoutines=async(routines)=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken(),\n\t\t}}\n\tconst response = await axios.put(`${baseUrl}/routines`, routines, config)\n\treturn response.data\n}\n\n\nexport default {resetRegiment,sendWorkout,getUserWorkouts,setRegiment,addRoutine,setRoutines}","import React,{useState} from \"react\"\n\nconst DayGrid=({day,currentRegiment,setCurrentRegiment})=>{ \n\t/*Title and input portion of each day in regimentForm */\n\n\tconst [exercise,setExercise] = useState(\"\") //individual exercise to control input\n\tconsole.log(exercise)\n\n\treturn( \n\n\t\t<form className=\"regimentForm__dayGrid\" onSubmit={(event)=>{event.preventDefault()\n\t\t\t{/*Append submitted exercise to one of day arrays in currentRegiment*/}\n\t\t\tif(exercise.trim()){ //no empty strings\n\t\t\t\tif(currentRegiment[day].includes( //no same exercise in day\n\t\t\t\t\t(exercise.charAt(0).toUpperCase()+ // compare formatted entry\n\t\t\t\t\texercise.slice(1)).trim())){\n\t\t\t\t\tconsole.log(\"you're already doing that today\")} \n\n\t\t\t\telse{ //format and update state\n\t\t\t\t\tsetCurrentRegiment({...currentRegiment, [day]:currentRegiment[day].concat(\n\t\t\t\t\t\t(exercise.charAt(0).toUpperCase()+exercise.slice(1)).trim()) }) //Capitalise first letter, and trim whitespace off ends\n\t\t\t\t\tsetExercise(\"\")\n\t\t\t\t}}\n\t\t}}> \n\n\t\t\t<div style={{alignItems:\"center\", display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t\t<h2>{day}</h2> \n\t\t\t\t<input style={{width:\"120px\"}}value={exercise} name={day} placeholder=\"exercise\" onChange={(event)=>{\n\t\t\t\t\tif(event.target.value!==\" \"){\n\t\t\t\t\t\tsetExercise(event.target.value)\n\t\t\t\t\t}}}/>\n\t\t\t\t<button className=\"themed\" style={{margin:\"5px\",padding:\"0px\",width:\"57px\"}} type=\"submit\">\n\t\t\t\t\tadd\n\t\t\t\t</button>\n\t\t\t</div> \n\n\t\t</form> \n\t)\n\n}\n\nexport default DayGrid","import React from \"react\"\n\nconst DaySubmissions=({currentRegiment,setCurrentRegiment, day})=>{\n\t/*used in Athlete RegimentForm,to show declared exercises of each day */\n\n\treturn(\n\t\t<div className=\"pageContainer\"key={day} >\n\t\t\t<ul>\n\t\t\t\t{currentRegiment[day].map((exercise,i)=>( \n\t\t\t\t\t<div key={`${exercise}${i}`} style={{padding:\"2px\"}}> \n\t\t\t\t\t\t<div style={{display:\"flex\",alignItems:\"center\", justifyContent:\"center\",}}>\n\t\t\t\t\t\t\t<p style={{margin:\"0\",marginRight:\"6px\"}}>\n\t\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t\t</p> \n\t\t\t\t\t\t\t{/*remove exercise*/}\n\t\t\t\t\t\t\t<button style={{borderRadius:\"5px\",marginLeft:\"auto\"}} type=\"button\" onClick={()=>\n\t\t\t\t\t\t\t\tsetCurrentRegiment( \n\t\t\t\t\t\t\t\t\t{...currentRegiment, \n\t\t\t\t\t\t\t\t\t\t[day]:currentRegiment[day].filter((name)=>(\n\t\t\t\t\t\t\t\t\t\t\tname!=exercise)\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t)}>remove\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)) }\n\t\t\t</ul>\n\n\t\t</div>\n\t\t\t\t\t\t\n\t)\n\n}\n\n\nexport default DaySubmissions","import React,{useState,useEffect} from \"react\"\nimport exerciseService from \"../../Services/exercises\"\nimport {useHistory} from \"react-router-dom\"\nimport DayGrid from \"./DayGrid\"\nimport DaySubmissions from \"./DaySubmissions\"\nimport Container from \"react-bootstrap/Container\" \n\nconst RegimentForm=({backButton,user,setUser,currentRegiment, setCurrentRegiment})=>{ \n\t/*lists each active day declared by athlete ,and allows appending exercises to them*/\n\n\tconst [submissionVisibility,setVisibility]=useState(\"hidden\") \n\tconst history = useHistory() \n\n\tconst regimentHasEmptyDay=()=>{  //returns true if any entry is empty\n\t\tfor (const key in currentRegiment){\n\t\t\tif(currentRegiment[key]&&currentRegiment[key].length===0) \n\t\t\t\treturn true \n\t\t}\n\t\treturn false\n\t}\n\n\tconst finaliseRegiment=async()=>{ //when regiment form has been filled out\n\t\tif (!regimentHasEmptyDay()){ // Don't allow submission unless all active days are filled \n\t\t\tconst returnedRegiment=await exerciseService.setRegiment(currentRegiment) \n\t\t\t//use server's response as data to be set. Also sets regIsSet in server\n\t\t\tconst loggedUser=JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\n\t\t\tsetUser({...user, regIsSet:true}) //update local data\n\t\t\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(returnedRegiment))\n\t\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({...loggedUser,regIsSet:true}))\n\t\t\thistory.push(\"/\")\n\t\t}\n\t}\n\tuseEffect(()=>{\n\t\tif(!Object.entries(currentRegiment).length){ //No days (happens on refresh), redirect back to selection\n\t\t\thistory.push(\"/\") \n\t\t}\n\t},[])\n\n\tuseEffect(()=>{\n\t\tregimentHasEmptyDay() \n\t\t\t? setVisibility(\"hidden\")\n\t\t\t: setVisibility(\"visible\") \n\t},[currentRegiment]) //Make submission button appear only once everything is filled\n\n\treturn(\n\t\t<div className=\"pageContainer\">\n\t\t\t<Container className=\"regimentForm\" >\n\t\t\t\t<div className=\" regimentForm__fadeContainer HomeRoute a-routeFadeIn\"> \n\t\t\t\t\t<h1>Fill out your weekly regiment</h1>\n\t\t\t\t\t<div className=\"regimentForm__weekContainer\"> \n\t\t\t\t\t\t{/*for each  (non-null) day-array in currentRegiment, create a DayGrid to fill in target exercises*/}\n\t\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>{  \n\t\t\t\t\t\t\tif(!currentRegiment[item]){return null}\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<div key={i} className=\"regimentForm__dayContainer\">\n\t\t\t\t\t\t\t\t\t<DayGrid day={item} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>\n\t\t\t\t\t\t\t\t\t<DaySubmissions key={item} day={item} setCurrentRegiment={setCurrentRegiment}currentRegiment={currentRegiment}/> \n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div> \n\t\t\t\t</div>\n\t\t\t\t<div style={{marginBottom:\"5px\",marginTop:\"auto\"}}>\n\t\t\t\t\t<button className=\"themed\" \n\t\t\t\t\t\tstyle={{marginRight:\"5px\",width:\"80px\",height:\"50px\",border:\"none\", \n\t\t\t\t\t\t\tvisibility:submissionVisibility}}\n\t\t\t\t\t\tonClick={()=>{finaliseRegiment()}}>\n\t\t\t\t\tSave\n\t\t\t\t\t</button>   \n\n\t\t\t\t\t{backButton &&  //If editing existing regiment from AccountPage, backButton already in MenuCard =>\n\t\t\t\t<button style={{border:\"none\", borderRadius:\"5px\",width:\"80px\",height:\"50px\"}}\n\t\t\t\t\tonClick={()=>{history.push(\"/\")}}>\n\t\t\t\t\tBack\n\t\t\t\t</button>   \n\t\t\t\t\t} \n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\nexport default RegimentForm\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Banner from \"../../Components/Banner\"\nimport Container from \"react-bootstrap/Container\"\n\nconst DayForm=({setNotification,currentRegiment,setCurrentRegiment})=>{\n\t/* used by athlete to set Active/Rest days */\n\tconst history=useHistory()\n\n\tconst toggleRegimentDay=(dayKey)=>{  //toggles a specific day between null/empty array\n\t\tif (currentRegiment[dayKey]){\n\t\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:null})\n\t\t\treturn\n\t\t}\n\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:[]})\n\t} \n\treturn(\n\t\t<div style={{overflow:\"auto\"}}>\n\t\t\t<Banner/>\n\t\t\t<Container>\n\t\t\t\t<form  className=\"dayForm\"> \n\t\t\t\t\t<h1 style={{fontWeight:\"bold\"}}>\n\t\t\t\t\t\tWhich days will you be working out on?</h1>\n\t\t\t\t\t<div className=\"dayForm__dayContainer\">\n\t\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>( \n\t\t\t\t\t\t\t<div className=\"dayForm__dayBox\"key={i}>\n\t\t\t\t\t\t\t\t<h2 >{item}</h2>\n\t\t\t\t\t\t\t\t<input  type=\"checkbox\"  checked={currentRegiment[item]||\"\"}\n\t\t\t\t\t\t\t\t\tonChange={()=>{console.log(currentRegiment);toggleRegimentDay(item)}}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"themed\" style={{marginTop:\"20px\"}}\n\t\t\t\t\t\tonClick={(event)=>{\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tlet hasAtLeastOne=false\n\t\t\t\t\t\t\tfor (const key in currentRegiment){\n\t\t\t\t\t\t\t\tif(currentRegiment[key]){\n\t\t\t\t\t\t\t\t\thasAtLeastOne=true }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (hasAtLeastOne) {\n\t\t\t\t\t\t\t\thistory.push(\"/athlete/setTargetWorkout\") \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tsetNotification({color:\"red\", message:\"Pick at least one day to exercise!\"})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>Next</button> \n\t\t\t\t</form>\n\t\t\t</Container>\n\t\t</div> \n\t)\n}\n\nexport default DayForm","import React,{useState,useEffect} from \"react\" \nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nimport RegimentForm from \"./RegimentForm\"\nimport DayForm from \"./DayForm\"\n\nconst OnBoardAthlete=({setNotification, user,setUser})=>{ \n\t//Responsible for weekly regiment setup\n\tconst location=useLocation()\n\tconst [currentRegiment, setCurrentRegiment]=useState({})\n\n\tuseEffect(()=>{  \n\t\tconst regiment=JSON.parse(window.localStorage.getItem(\"currentRegiment\"))\n\t\tsetCurrentRegiment(regiment)\n\t},[]) \n\t\n\treturn (  \n\t\t<TransitionGroup style={{height:\"100%\",flexGrow:\"1\",display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t<CSSTransition \n\t\t\t\tkey={location}\n\t\t\t\ttimeout={{ enter: 500, exit: 200 }}>\n\t\t\t\t<Switch location={location}>\n\t\t\t\t\t<Route path=\"/athlete/setTargetWorkout\"> {/*second page*/}\n\t\t\t\t\t\t<RegimentForm backButton={true} user={user} setUser={setUser} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>)\n\t\t\t\t\t</Route> \n\t\t\t\t\t<Route path=\"/\"> {/*initial page*/}\n\t\t\t\t\t\t<DayForm setNotification={setNotification} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/> \n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</CSSTransition>\n\t\t</TransitionGroup>\n\t)\n} \n\nexport default OnBoardAthlete","import axios from \"axios\"\nimport tokenService from \"./token\"\n\nconst baseUrl = \"/api/clients\"\n\nconst addClient=async(clients)=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\ttry{\n\t\tconst response = await axios.post(baseUrl, clients, config)\n\t\treturn response.data \n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nconst updateClient=async(clients)=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\ttry{\n\t\tconst response = await axios.patch(baseUrl, clients, config)\n\t\treturn response.data \n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nexport default {addClient,updateClient}","import React,{useState,useEffect} from \"react\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\nimport Container from \"react-bootstrap/Container\" \nimport clientService from \"../../Services/clients\" \nimport {useHistory} from \"react-router-dom\"\n\nconst OnBoardTrainer = ({setUser}) => {\n\tconst [trainer, setTrainer]=useState(null)  //To hold newly created \"user\" data, until the \"next\" button is pressed\n\tconst [clients, setClients]=useState([]) \n\tconst [currentClient, setCurrentClient]=useState({name:\"\",username:\"\",password:\"\", validatePassword:\"\"})\n\tconst history = useHistory()\n\n\tuseEffect(()=>{\n\t\tif (trainer){\n\t\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(trainer.clients)) \n\t\t}\n\t},[trainer])\n\n\tconst clearClient=()=>{ \n\t\tif( currentClient.name && currentClient.username && currentClient.password &&\n\t\t(currentClient.password===currentClient.validatePassword))\n\t\t{ setClients(clients.concat(currentClient))\n\t\t\tsetCurrentClient({name:\"\",username:\"\",password:\"\", validatePassword:\"\"})}\n\t} \n\n\tconst addClient = async(client,index) => { //register client, ID is appended to trainer.\n\t\tconst updatedTrainer = await clientService.addClient(client) \n\t\tsetTrainer(updatedTrainer)\n\t\tsetClients(clients.filter((client,i)=>index!=i)) //remove client from list after successful creation \n\t} \n\n\tconst finaliseBoarding=()=> { \n\t\twindow.localStorage.removeItem(\"currentRegiment\")\n\t\twindow.localStorage.removeItem(\"userWorkouts\")\n\t\tsetUser(trainer)\n\t\thistory.push(\"/\")\n\t} \n\n\treturn (\n\t\t<div className=\"pageContainer\" style={{flexDirection:\"column\"}}>\n\t\t\t<TransitionGroup style={{height:\"100%\"}}>\n\t\t\t\t<CSSTransition \n\t\t\t\t\tkey={location}\n\t\t\t\t\ttimeout={{ enter: 500, exit: 200 }}> \n\t\t\t\t\t<Container className=\"regimentForm\" >\n\t\t\t\t\t\t<form className=\"regimentForm__fadeContainer HomeRoute a-routeFadeIn\" \n\t\t\t\t\t\t\tonSubmit={(event)=>{event.preventDefault();clearClient()}} > \n\t\t\t\t\t\t\t<h1>Add some of your clients </h1>\n\t\t\t\t\t\t\t<div style={{marginTop:\"40px\",display:\"flex\", flexDirection:\"column\",alignItems:\"center\",}}>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,name:event.target.value}) }} \n\t\t\t\t\t\t\t\t\t\tplaceholder={currentClient.name || \"client name\"}\n\t\t\t\t\t\t\t\t\t\tvalue={currentClient.name} /> \n\t\t\t\t\t\t\t\t\t<input onChange={(event)=>{setCurrentClient({...currentClient,password:event.target.value}) }} \n\t\t\t\t\t\t\t\t\t\tplaceholder={currentClient.password || \"client password\"}\n\t\t\t\t\t\t\t\t\t\tvalue={currentClient.password}/> \n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,username:event.target.value}) }} \n\t\t\t\t\t\t\t\t\t\tplaceholder={currentClient.username || \"client username\"}\n\t\t\t\t\t\t\t\t\t\tvalue={currentClient.username} /> \n\n\t\t\t\t\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,validatePassword:event.target.value}) }}\n\t\t\t\t\t\t\t\t\t\tplaceholder={currentClient.validatePassword || \"repeat client password\"} \n\t\t\t\t\t\t\t\t\t\tvalue={currentClient.validatePassword} /> \n\t\t\t\t\t\t\t\t</div>\t\t\n\t\t\t\t\t\t\t\t<button type=\"submit\" \n\t\t\t\t\t\t\t\t\tclassName=\"themed\" style={{margin:\"20px\",width:\"50px\", height:\"50px\"}}>\n\t\t\t\t\t\t\t\t\t\tadd\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<h1 style={{marginTop:\"140px\"}}>Clients added:</h1>\n\t\t\t\t\t\t\t{clients.map((client,i)=>(\n\t\t\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t\t\t{client.name}\n\t\t\t\t\t\t\t\t\t<button onClick={()=>{addClient(client,i)} } style={{marginTop:\"140px\"}}>Register</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))} \n\t\t\t\t\t\t</form>\n\n\t\t\t\t\t\t{/*TODO  if refresh and click next when no clients in state-> setUser(trainer) sets to null -> redirects to home. \n\t\t\t\t\t\tIf log in again, should work.*/} \n\t\t\t\t\t\t<button onClick={()=>{ finaliseBoarding() }}>next</button> \n\t\t\t\t\t</Container>\n\t\t\t\t</CSSTransition>\n\t\t\t</TransitionGroup>\n\t\t</div>\n\t) \n}\n \nexport default OnBoardTrainer","import React from \"react\"\nimport OnBoard_A from \"./Athlete/OnBoard_A\"\nimport OnBoard_T from \"./Trainer/OnBoard_T\"\nimport {\n\tSwitch,\n\tRoute,\n\tuseHistory\n} from \"react-router-dom\"\nimport Banner from \"../Components/Banner\" \nimport Container from \"react-bootstrap/Container\"\n\nconst LandingPage = ({setNotification,  user, setUser}) =>{\n\tconst history = useHistory()\n\n\treturn(\n\t\t<div style={{overflow:\"auto\",height:\"100%\"}}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/athlete\">\n\t\t\t\t\t<OnBoard_A setNotification={setNotification} user={user} setUser={setUser}/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/trainer\">\n\t\t\t\t\t<OnBoard_T user={user}setUser={setUser}/>  {/*TODO set notifications, and fix bad css */}\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\"> \n\t\t\t\t\t<Banner/>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<form className=\"dayForm\">\n\t\t\t\t\t\t\t<h1 style={{fontWeight:\"bold\"}}>\n\t\t\t\t\tI am ...</h1>\n\t\t\t\t\t\t\t<div className=\"dayForm__dayContainer\">\n\t\t\t\t\t\t\t\t<button onClick={(event)=>{\n\t\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\t\thistory.push(\"/trainer\")\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"themed\"style ={{marginRight:\"20px\",height:\"50px\",width:\"150px\"}}>\n\t\t\t\t\t\t\t\t\t<h3 style={{color:\"white\"}}>A trainer</h3></button>\n\t\t\t\t\t\t\t\t<button onClick={(event)=>{\n\t\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\t\thistory.push(\"/athlete\")\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"themed\"style ={{marginRight:\"20px\",height:\"50px\",width:\"150px\"}}>\n\t\t\t\t\t\t\t\t\t<h3 style={{color:\"white\"}}>An athlete</h3></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Container>\n\t\t\t\t</Route>\n\t\t\t</Switch> \n\t\t</div>\n\t)\n}\nexport default LandingPage","export const getTodaysExercises = (currentRegiment) => { \n\t/*Choose todays exercises out of weekly regiment*/ //TODO simplify\n\tconst day=(new Date()).getDay() //Sunday starts at 0 with Date() - with currentRegiment at 6.\n\tconst exercisesForToday = day===0\n\t\t? Object.values(currentRegiment)[6] //Sunday\n\t\t: Object.values(currentRegiment)[day-1] //All other days \n\treturn exercisesForToday\n}\n\nexport const exercisesFromWorkouts=(workouts)=>{\n\tconst exerciseArray = [] \n\tworkouts.map((dayObject)=>(dayObject.exercises))\n\t\t.forEach((workout)=>{ \n\t\t\texerciseArray.push(...workout)\n\t\t})\n\treturn exerciseArray \n}\n\n//same as above, but one step further\nexport const exerciseNamesFromWorkouts=(workouts)=>{\n\treturn exercisesFromWorkouts(workouts).map((exercise)=>exercise.name) \n}\n\nexport const filterExercisesByName = (exercises, name) => ( \n\t//Filter exercise array of a workout object\n\texercises.filter((exercise) => (\n\t\texercise.name.toLowerCase().includes(name.toLowerCase())\n\t))\n) \nexport const filterWorkoutsByDate = (workouts, dates) => {  \n\t//Date property is in workout object, not in every individual exercises\n\treturn workouts.filter((workout)=>(new Date(workout.date)>= dates[0] && new Date(workout.date)<=dates[1])) \n}\n\nexport const getTotalReps = (exercises, name) => { \n\ttry{\n\t\treturn filterExercisesByName(exercises, name) //filter exercises by name \n\t\t\t.map((exercise) => (exercise.reps*exercise.sets) //total reps on exercise\n\t\t\t\t.reduce((sum,currentValue)=>(sum+currentValue)) //sum all\n\t\t\t) }\n\tcatch{\n\t\tconsole.log(\"Provided exercise does not seem to be in the array\") } \n}\n\nexport const datedAnalysis=(workouts,exerciseName,interval,parameter)=>{\n\t/* Get array of daily or monthly total reps or total weight lifted.\n\tinterval = \"daily\" / \"monthly\" \n\t* parameter=\"reps\"/weight\"*/\n\n\tif(interval!==\"daily\" && interval !== \"monthly\"){\n\t\tconsole.log(\"Interval is invalid\")\n\t\treturn }\n\n\tconst getTime = interval === \"daily\" //To compare time of workouts\n\t\t? (exercise) => (new Date (exercise.date).toDateString()) // Full date\n\t\t: (exercise) => (new Date (exercise.date).toLocaleDateString(\"default\",{month:\"long\",year:\"numeric\"}))  // Month and year\n\n\tconst accumulate = parameter === \"reps\" // will either be \"reps\" or \"weight\"\n\t\t? (workoutObject)=>(workoutObject.exercise.sets*workoutObject.exercise.reps) // accumulate reps\n\t\t: (workoutObject)=>(workoutObject.exercise.weight*workoutObject.exercise.sets*workoutObject.exercise.reps)  //accumulate total weight lifted\n\n\tconst filteredWorkouts=[] //Array of workouts containing date and analysed exercise\n\n\tif(parameter===\"reps\"){\n\t\tworkouts.forEach((workout)=>{ \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)  // get requested exercise by name\n\t\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})})\n\t\t})}\n\n\telse {\n\t\tworkouts.forEach((workout)=>{ \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.weight && exercise.name==exerciseName) // must also contain weight field\n\t\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})})\n\t\t})}\n\n\tif(filteredWorkouts.length==0){return null} //if no suitable exercise found, abort\n\n\tlet timeProperty // for storing formatted dates\n\tlet total // accumulator for reps or weight\n\tconst uniqueTimes=[] //array of unique dates or months\n\n\tif (filteredWorkouts.length==1){ // If only one workout, return reps*sets(*weight) and date\n\t\ttotal=accumulate(filteredWorkouts[0])\n\t\ttimeProperty = getTime(filteredWorkouts[0]) \n\t\treturn [{timeProperty, total}]\n\t}\n\n\tfilteredWorkouts.forEach((workout,i)=>{\n\t\tif(i===0){ // if first repetition\n\t\t\ttimeProperty = getTime(workout)  //initialise data\n\t\t\ttotal=accumulate(workout)\n\t\t} \n\t\telse{\n\t\t\tif (timeProperty === getTime(workout)){ // Same date \n\t\t\t\tif (i!==filteredWorkouts.length-1){ // Not end of array, aggregate reps\n\t\t\t\t\ttotal+=accumulate(workout)\n\t\t\t\t}\n\t\t\t\telse{ // End of array, push final entry\n\t\t\t\t\ttotal+=accumulate(workout)\n\t\t\t\t\tuniqueTimes.push({timeProperty,total}) }  \n\t\t\t}\n\n\t\t\telse{ // different date\n\t\t\t\tuniqueTimes.push({timeProperty, total}) //push accumulation so far\n\t\t\t\ttimeProperty=getTime(workout) //set time and accumulator equal to current workout\n\t\t\t\ttotal=accumulate(workout) }\n\t\t} \n\t})\n\treturn uniqueTimes \n} \n\nexport const allTimeAnalysis=(workouts,exerciseName,parameter)=>{ \n\tconst filteredWorkouts=[]\t\n\tlet total=0\n\n\tif(parameter===\"reps\") { //total reps\n\t\tworkouts.forEach((workout)=>{   \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)   // filter exercises\n\t\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise}) // push data\n\t\t\t}) \n\t\t}) \n\t\tfilteredWorkouts.forEach((workout)=>{  \n\t\t\ttotal+=workout.exercise.reps*workout.exercise.sets \n\t\t})\n\t}\n\telse {\n\t\tworkouts.forEach((workout)=>{\n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>(exercise.weight && exercise.name==exerciseName))\n\t\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise})\n\t\t\t}) \n\t\t})\n\t\tfilteredWorkouts.forEach((workout)=>{\n\t\t\ttotal+=workout.exercise.weight*workout.exercise.reps*workout.exercise.sets \n\t\t})\n\t} \n\tif (total===0) return null\n\treturn [{timeProperty:\"total\", total:total||null}]\n} \n","import React from \"react\"\nimport Table from \"react-bootstrap/Table\"\n\nconst HistoryWorkout = ({workout}) => {\n\n\tif(workout){\n\t\tconst workoutDate=new Date(workout.date)\n\t\tconst workoutMins= workoutDate.getMinutes() < 10\n\t\t\t? \"0\"+workoutDate.getMinutes() // to make double digit\n\t\t\t: workoutDate.getMinutes()\n\t\treturn( \n\t\t\t<>\n\t\t\t\t<h1 style={{backgroundColor:\"\",color:\"black\",padding:\"10px\",borderRadius:\"20px\",\n\t\t\t\t\tmarginTop:\"40px\"}}>{workoutDate.toDateString() +\", \" \n\t\t\t\t\t\t\t\t+ workoutDate.getHours()+ \":\" \n\t\t\t\t\t\t\t\t+ workoutMins}</h1>\n\t\t\t\t<Table striped bordered hover variant=\"dark\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr style={{backgroundColor:\"black\"}}> \n\t\t\t\t\t\t\t<th className=\"col-1\"><h2>Exercise</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2>Repetitions</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2>Sets</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2>Weight</h2></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{workout.exercises.map((exercise,index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.name}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.reps}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.sets}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.weight || 0}</h3></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</>\n\t\t)}\n}\nexport default HistoryWorkout","import React from \"react\"\nimport Calendar from \"react-calendar\"\n\nimport \"../Calendar.css\"\n \nconst CalendarPicker = ({dateRange,setDateRange, workouts,callback}) => { \n\n\tconst onDateChange=(newDateRange)=>{\n\t\tsetDateRange(newDateRange) // Update selected range\n\t\tcallback(workouts,newDateRange)  //Filter stuff with selected range\n\t} \n\n\treturn (\n\t\t<Calendar\n\t\t\tonChange={onDateChange}\n\t\t\tvalue={dateRange}\n\t\t\tshowNeighboringMonth={true}\n\t\t\tlocale={\"en-US\"} \n\t\t\tselectRange={true}\n\t\t/>\n\t)\n}\nexport default CalendarPicker","import React from \"react\"\nimport {IoIosArrowBack} from \"react-icons/io\"\nimport {useHistory} from \"react-router-dom\"\n\nconst MenuCard = ({callback, header, body}) => { \n\tconst history=useHistory()\n\treturn(\n\t\t<div className=\"menuCard\" >\n\t\t\t<h1 style={{marginBottom:\"57px\"}}> \n\t\t\t\t<a onClick={()=>{\n\t\t\t\t\thistory.push(\"/\") \n\t\t\t\t\tcallback && callback() //optional callback\n\t\t\t\t}}>\n\t\t\t\t\t<IoIosArrowBack style={{cursor:\"pointer\"}} /> \n\t\t\t\t\t{header}\n\t\t\t\t</a>\n\t\t\t</h1> \n\t\t\t{body()}\n\t\t</div>\n\t)\n}\n\nexport default MenuCard","import React, {useEffect,useState} from \"react\"\nimport {filterExercisesByName,filterWorkoutsByDate} from \"../../Functions/workoutFunctions\"\nimport Form from \"react-bootstrap/Form\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport HistoryWorkout from \"../HistoryWorkout\" \nimport CalendarPicker from \"../CalendarPicker\"\nimport MenuCard from \"../MenuCard\"\n\n\nconst History=({workouts})=>{ \n\tconst [filterQuery, setFilterQuery] = useState(\"\") //Search term\n\tconst [useDate,setUseDate]=useState(false) // use calendar selection? \n\tconst [dateRange,setDateRange]=useState(new Date()) // when interacted with, will become array  with start and end of selection\n\n\tconst [filteredWorkouts,setFilteredWorkouts]=useState(workouts) \n\t\n\tconst filterByDate=(workouts,dateRange)=>{ \n\t\tif(useDate){ // if check box is ticked\n\t\t\tconst results=[]\n\t\t\tfilterWorkoutsByDate(workouts,dateRange).forEach((workout)=>{ //For each workout within date range\n\t\t\t\tif (filterExercisesByName(workout.exercises,filterQuery).length>0){ // if satisfies search query\n\t\t\t\t\tresults.push(workout)\n\t\t\t\t}})\n\t\t\tsetFilteredWorkouts(results)\n\t\t}}\n\n\tuseEffect(()=>{\n\t\tif (useDate) { // combine date range and search term\n\t\t\tfilterByDate(workouts,dateRange)\n\t\t} \n\t\telse{ // use search term only \n\t\t\tsetFilteredWorkouts(\n\t\t\t\tworkouts.map((workout)=>{ \n\t\t\t\t\tconst result=filterExercisesByName(workout.exercises,filterQuery)\n\t\t\t\t\tif(result.length!==0){return(workout)}\n\t\t\t\t})\n\t\t\t\t\t.filter((value)=>value!=undefined)) \n\t\t} \n\t},[filterQuery,useDate])  //search box content or checkbox are changed\n\n\tif (workouts.length ===0) return ( \n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={\"My History\"} body={()=>(null)}/>\n\n\t\t\t<div style={{marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}> \n\t\t\t\t<div className=\"historyContainer\">\t\t\t\t\t\n\t\t\t\t\t<h2>It looks like you&apos;s never submitted an exercise!</h2>\n\t\t\t\t\t<h4 style={{marginTop:\"40px\"}}>After you submit one, you can start viewing your past workouts here.</h4>\n\t\t\t\t</div>\n\t\t\t</div> \n\n\t\t</div> \n\t)\n\n\tconst body=()=>(\n\t\t<>\n\t\t\t<p>Search by name</p>\n\t\t\t<Form style={{marginBottom:\"40px\"}} onSubmit={(event)=>{event.preventDefault()}}>\n\t\t\t\t<FormControl type=\"text\" placeholder=\"e.g. pushups\"  onChange={(event)=>{setFilterQuery(event.target.value)}}/>\n\t\t\t</Form>\n\t\t\t<div>\n\t\t\t\t<p style={{marginRight:\"20px\",display:\"inline\"}}>Filter by date</p>\n\t\t\t\t<input type=\"checkbox\" value={useDate} onClick={()=>{setUseDate(!useDate)}}/> \n\t\t\t</div>\n\t\t\t<CalendarPicker dateRange={dateRange} setDateRange={setDateRange} workouts={workouts} callback={filterByDate} /> \n\t\t</> \n\t)\n\n\treturn(\n\t\t<>\n\t\t\t<div className=\"pageContainer\">\n\t\t\t\t<MenuCard header={\"My History\"} body={body}/> \n\t\t\t\t{ filteredWorkouts && filteredWorkouts.length>0 && \n\t\t\t\t<div className=\"resultPage history\">\n\t\t\t\t\t<ul className=\"history__list\" \n\t\t\t\t\t\tstyle={{display:\"flex\",flexDirection:\"column-reverse\",listStyleType:\"none\"}}>\n\t\t\t\t\t\t{filteredWorkouts.map((workout,index)=>( \n\t\t\t\t\t\t\t<li key={index} >\n\t\t\t\t\t\t\t\t<HistoryWorkout workout={workout} /> \n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default History","import React from \"react\"\nconst StatRow=({exercise,setExercise})=>{\n\t/*Takes individual exercise instances and renders interactable rows of data- used in Exercise Submission*/\n\tconst weightColor = exercise.weight ? \"#FF8933\" : \"gray\"\n\tconst cellStyle={width:\"80px\",marginLeft:\"25px\"}\n\n\treturn(\n\t\t<div style={{paddingBottom:\"10px\",marginTop:\"10px\",display:\"flex\"}}> \n\t\t\t<button style={{marginRight:\"10px\", marginBottom:\"auto\",border:\"none\",borderRadius:\"5px\",color:weightColor}} \n\t\t\t\tonClick={()=>{setExercise({...exercise, weight:\n\t\t\t\t\t\t\texercise.weight ? null : 1}) }}>KG</button> {/*Toggle weighted*/}\n\t\t\t<div style={cellStyle} > \n\t\t\t\t<h5>Repetitions</h5> \n\t\t\t\t<input className=\"statRow__input\"type=\"number\" onChange={(event)=>{\n\t\t\t\t\t(/^[0-9]+$/.test(event.target.value)) &&  // If contains only digits\n\t\t\t\t\tsetExercise({...exercise, [\"reps\"]:event.target.value})}}value = {exercise[\"reps\"]}/> \n\t\t\t</div>\n\t\t\t<div style={cellStyle}> \n\t\t\t\t<h5>Sets</h5> \n\t\t\t\t<input className=\"statRow__input\"type=\"number\" onChange={(event)=>{\n\t\t\t\t\t(/^[0-9]+$/.test(event.target.value)) &&\n\t\t\t\t\tsetExercise({...exercise, [\"sets\"]:event.target.value})}}value = {exercise[\"sets\"]}/>\n\t\t\t</div>\n\t\t\t{exercise.weight!=null &&( \n\t\t\t\t<div style={cellStyle}> \n\t\t\t\t\t<h5>Weight</h5> \n\t\t\t\t\t<input className=\"statRow__input\"type=\"number\" onChange={(event)=>{\n\t\t\t\t\t\t(/^[0-9]+$/.test(event.target.value)) &&\n\t\t\t\t\t\tsetExercise({...exercise, [\"weight\"]:event.target.value})}}value = {exercise[\"weight\"]}/> {/* if weighted, allow changing weight*/}\n\t\t\t\t</div>\n\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default StatRow","import React from \"react\"\nimport StatRow from \"./StatRow\"\nimport {AiOutlineClose} from \"react-icons/ai\"\n\nconst ExerciseBox=({exerciseArray, newWorkout, setNewWorkout})=>{ \n\t/*Responsible for holding all instances of a specific exercise, e.g. [1 set of 12 reps, 3 sets of 20 reps and 5 weight], etc.\n\tEach  instance of array will be passed to a StatRow to be interactable*/\n\n\tconst exerciseName=exerciseArray[0].name\n\n\treturn(\n\t\t<div className=\"a-exerciseEntry itemCard\" >\n\t\t\t<h5>Title</h5>\n\t\t\t<div style={{marginBottom:\"15px\",display:\"flex\"}}>\n\t\t\t\t<h3 style={{display:\"inline\",color:\"black\"}}>{exerciseName} </h3>\n\t\t\t\t<button className=\"themed\" style={{marginLeft:\"auto\"}} onClick={()=>{setNewWorkout(\n\t\t\t\t\tnewWorkout.map((Array)=>{return exerciseName===Array[0].name \n\t\t\t\t\t\t? Array.concat({name:exerciseName,reps:1,sets:1,weight:null})  //Append new exercise instance to array\n\t\t\t\t\t\t: Array}))}}>\n\t\t\t\tAdd set\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div style={{paddingBottom:\"25px\",borderBottom:\"0.5px solid #C4C4C4\"}}>\n\t\t\t\t{exerciseArray.map((exercise,i)=>( \n\t\t\t\t\t<div style={{display:\"flex\"}}key={`${exercise}${i}`}> {/* if multiple sets of exercise, allow removal*/}\n\t\t\t\t\t\t<StatRow exercise={exercise} setExercise={(exercise)=>{ \n\t\t\t\t\t\t\tsetNewWorkout(\n\t\t\t\t\t\t\t\tnewWorkout.map((Array)=>{return exerciseName===Array[0].name  //Find correct array\n\t\t\t\t\t\t\t\t\t? exerciseArray.map((item,index)=>{ // if correct array, find correct exercise index\n\t\t\t\t\t\t\t\t\t\tif (i===index) {\n\t\t\t\t\t\t\t\t\t\t\treturn exercise // set equal to current Exercise ( passed as func parameter )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn item // keep all else the same\n\t\t\t\t\t\t\t\t\t}) \n\t\t\t\t\t\t\t\t\t: Array})) //irrelevant array, keep same\n\t\t\t\t\t\t}} />\n\t\t\t\t\t\t{exerciseArray.length>1 &&  \n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tonClick={()=>{setNewWorkout(newWorkout.map((item)=>( \n\t\t\t\t\t\t\t\t\texerciseName === item[0].name \n\t\t\t\t\t\t\t\t\t\t? exerciseArray.filter((item,index)=>(index!=i)) // remove by index\n\t\t\t\t\t\t\t\t\t\t: item\n\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t\t))}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AiOutlineClose style={{cursor:\"pointer\"}}  />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t} \n\t\t\t\t\t</div>\n\t\t\t\t))}</div> \n\t\t</div>\n\t)} \nexport default ExerciseBox\n","import React,{useEffect,useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\n\nimport exerciseService from \"../../Services/exercises\" \nimport ExerciseBox from \"../ExerciseBox\" \nimport MenuCard from \"../MenuCard\"\n\nconst AthleteExerciseSubmission=({setNotification,setWorkouts, daysExercises})=>{ \n\t/*allows user to select from today's scheduled exercises and submit his workout */\n\tconst history=useHistory()\n\n\t//TODO animation like in routine page - too much on every exercise choice\n\tif (!daysExercises){\n\t\treturn(\n\t\t\t<div className=\"pageContainer\">\n\t\t\t\t<MenuCard header={\"My Exercises\"} body={()=>(<p>No exercises for today :)</p>)} />\n\t\t\t</div> \n\t\t)}\n\n\t/* Local copy of daysExercises\n\tto let user remove exercises without messing with outter state*/\n\tconst [uniqueNames,setUniqueNames]=useState([])\n\n\tconst [newWorkout, setNewWorkout]=useState([]) \n\tconst [removedExercises, setRemovedExercises]=useState([]) // Keep track of removed exercises\n\tconst [selectedExercise, setSelectedExercise]=useState(null) // to filter which exercises are shown for editing \n\n\tuseEffect(()=>{\n\t\tsetNewWorkout( daysExercises.map((exerciseName)=>( [{name:exerciseName,reps:1,sets:1}]))) \n\t\tsetUniqueNames([... new Set(daysExercises)]) \n\t}\n\t,[daysExercises])\n\n\tuseEffect(()=>{\n\t\tsetUniqueNames([... new Set(daysExercises)]) \n\t},[])\n\n\tconst submitWorkout=async ()=>{ \n\t\tconst exercisesForSubmission=[]\n\t\tnewWorkout.forEach((exerciseArray)=> //retrieve nested exercises\n\t\t{exerciseArray.forEach((exercise)=>{exercisesForSubmission.push(exercise)}) \n\t\t})\n\n\t\tconst validatedExercises=exercisesForSubmission.filter((exercise)=>( //validate exercises here\n\t\t\texercise.sets!=0 && exercise.reps!=0\n\t\t))\n\n\t\tif(validatedExercises.length>0){// Non-empty\n\t\t\tconst validEntries = newWorkout \n\t\t\t\t.filter((_,i) =>  \n\t\t\t\t\tvalidatedExercises[i] && true)\n\n\t\t\tif (validEntries.length>0) { \n\t\t\t\tconst sentWorkout=await exerciseService.sendWorkout({exercises:validatedExercises}) //server response to new workout submission \n\t\t\t\tif(sentWorkout){\n\t\t\t\t\tconst userWorkouts = JSON.parse(window.localStorage.getItem(\"userWorkouts\")) //local storage copy of workouts \n\t\t\t\t\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(userWorkouts.concat(sentWorkout))) //update local storage\n\t\t\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))//update state\n\t\t\t\t\tsetNotification({color:\"white\",message:\"Workout uploaded successfully\"})\n\t\t\t\t\thistory.push(\"/\") \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong :(\"}) \n\t\t\t\t}\n\t\t\t} \n\t\t\t\n\t\t\telse{\n\t\t\t\tconsole.log(\"No valid entries\") //Data mangled-Shouldn't happen in production.\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tsetNotification({color:\"red\",message:\"Looks like you haven't submitted any exercises!\"}) \n\t\t} \n\t} \n\tconst body=()=>(\n\t\t<>\n\t\t\t{uniqueNames.map((uniqueName,i) => (  //selectable box for each unique exercise\n\t\t\t\t<div className=\"menuItem__removable\" key={`${uniqueName}${i}`}>  \n\t\t\t\t\t<a className=\"menuItem__text\" onClick={()=>{setSelectedExercise(uniqueName)}}>{uniqueName}</a>\n\t\t\t\t\t<a style={{cursor:\"pointer\"}}\n\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.concat(uniqueName))\n\t\t\t\t\t\t\tsetNewWorkout(newWorkout.filter((exerciseArray)=>(exerciseArray[0].name!==uniqueName))) \n\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.filter((name)=>(uniqueName!==name)))\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<BsFillTrashFill style={{marginLeft:\"auto\",marginRight:\"15px\"}}/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t))}\n\n\t\t\t{ removedExercises.length>0 && \n\t\t\t\t<h5 style={{marginTop:\"auto\",textAlign:\"center\"}}>Removed</h5> }\n\t\t\t{ removedExercises.map((exercise)=>{ //bring back a removed exercise\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"menuCard__exercise--removed\" key={exercise}> \n\t\t\t\t\t\t<a key={exercise} className=\"menuItem__text\"\n\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.filter((name)=>(name!=exercise)))\n\t\t\t\t\t\t\t\tsetNewWorkout(newWorkout.concat([[{name:exercise,reps:1,sets:1,weight:null}]]))\n\t\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.concat((exercise)))}} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t)})\n\t\t\t}\n\t\t\t<button style={{borderRadius:\"5px\",marginTop:\"auto\",}}onClick={()=>\n\t\t\t\tsubmitWorkout(newWorkout)}>Submit</button> \n\t\t</> \n\t)\n\t\n\treturn ( \n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={\"My Exercises\"} body={body}/> \n\n\t\t\t{newWorkout.map((exerciseArray,i)=>{ \n\t\t\t\tif (exerciseArray[0].name!==selectedExercise){return} //render only for selected exercise\n\t\t\t\treturn( \n\t\t\t\t\t<div key={i} style={{ zIndex:\"0\",marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}>   {/*TODO shared with routinePage */}\n\t\t\t\t\t\t<ExerciseBox  exerciseArray={exerciseArray} newWorkout={newWorkout} setNewWorkout={setNewWorkout} indexInArray={i}/> \n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}) \n\t\t\t}\n\t\t</div> \n\t)\n} \n\nexport default AthleteExerciseSubmission\n","import axios from \"axios\"\nconst baseurl = \"/api/users/password\"\n\nconst changePassword = async credentials => {\n\ttry{\n\t\tconst response = await axios.patch(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default {changePassword}","import React,{useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport MenuCard from \"./MenuCard\"\nimport RegimentForm from \"./Athlete/RegimentForm\"\nimport exerciseService from \"../Services/exercises\"\nimport passwordService from \"../Services/password\"\n\nconst AccountPage = ({ setNotification,currentRegiment,setCurrentRegiment, user,setUser}) => {\n\t/*Edit Account details */\n\n\tconst [view,setView] = useState(\"\")//\"Reset\"/\"Edit\"/Password \n\tconst [currentPassword,setCurrentPassword] = useState(\"\")\n\n\tconst [newPassword,setNewPassword] = useState(\"\") // Let user change password\n\tconst [validatePassword,setValidatePassword] = useState(\"\") // If these two passwords match\n\tconst history = useHistory()\n\treturn( \n\t\t<div className=\"pageContainer\"> \n\t\t\t<MenuCard  callback={()=>{setCurrentRegiment(JSON.parse(window.localStorage.getItem(\"currentRegiment\")) \n\t\t\t//If unsaved changes, revert currentRegiment\n\t\t\t)} } header={\"My Account\"}body={()=> (\n\t\t\t\t<>\n\t\t\t\t\t<a className=\"menuCard__account\"onClick={()=>{setView(\"Reset\")}}>\n\t\t\t\t\t\t\tReset weekly regiment\n\t\t\t\t\t</a>\n\n\t\t\t\t\t<a  className=\"menuCard__account\"onClick={()=>{setView(\"Edit\")}}> \n\t\t\t\t\t\tEdit weekly regiment \n\t\t\t\t\t</a>\n\n\t\t\t\t\t<a className=\"menuCard__account\" onClick={()=>{setView(\"Password\")}}> \n\t\t\t\t\t\tChange password\n\t\t\t\t\t</a>\n\t\t\t\t</> \n\t\t\t)}/>\n\n\t\t\t{view && \n\t\t\t\t<div className=\"resultPage account\" style={{display:\"flex\"}}>\n\t\t\t\t\t{view===\"Edit\" && ( //Edit current regiment\n\t\t\t\t\t\t<RegimentForm  user={user} setUser={setUser} \n\t\t\t\t\t\t\tcurrentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>)}\n\n\t\t\t\t\t{view===\"Reset\" && ( //reset regiment entirely\n\t\t\t\t\t\t<div style={{marginTop:\"20px\"}}>\n\t\t\t\t\t\t\t<h2>Are you sure you want to reset your weekly regiment?</h2> \n\t\t\t\t\t\t\t<h5 style={{marginTop:\"20px\"}}>You&apos;ll be redirected to fill out all your weekly exercises from scratch. \n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tAlternatively, you can simply edit your existing regiment\n\t\t\t\t\t\tfrom the other option in the menu.</h5> \n\t\t\t\t\t\t\t<button style={{border:\"none\", borderRadius:\"5px\"}}onClick ={async()=>{\n\t\t\t\t\t\t\t\tconst updatedUser = await exerciseService.resetRegiment()\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"currentRegiment\", JSON.stringify(updatedUser.currentRegiment))\n\t\t\t\t\t\t\t\tsetUser(updatedUser)\n\t\t\t\t\t\t\t\thistory.push(\"/\") }}>Yes</button> \n\t\t\t\t\t\t</div> )}\n\n\t\t\t\t\t{view===\"Password\" && ( //change password\n\t\t\t\t\t\t<form \n\t\t\t\t\t\t\tstyle={{marginTop:\"40px\",alignItems:\"center\",width:\"100%\",display:\"flex\",flexDirection:\"column\"}}\n\t\t\t\t\t\t\tonSubmit={async(event)=>{\n\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\tif (newPassword===validatePassword ){\n\t\t\t\t\t\t\t\t\tconst updatedUser = await passwordService\n\t\t\t\t\t\t\t\t\t\t.changePassword({username:user.username,currentPassword,newPassword})\n\t\t\t\t\t\t\t\t\tif(updatedUser){\n\t\t\t\t\t\t\t\t\t\tsetUser(updatedUser)\n\t\t\t\t\t\t\t\t\t\tsetNotification({color:\"green\",message:\"Password changed successfully\"}) \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{ \n\t\t\t\t\t\t\t\t\t\tsetNotification({color:\"red\",message:\"Process failed. Wrong password maybe?\"}) \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}  >\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5 >Current password</h5>\n\t\t\t\t\t\t\t\t<input style={{marginBottom:\"20px\"}}type=\"password\" value={currentPassword} onChange={(event)=>{\n\t\t\t\t\t\t\t\t\tsetCurrentPassword(event.target.value)}}placeholder=\"current password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5 >New password</h5>\n\t\t\t\t\t\t\t\t<input style={{marginBottom:\"20px\"}}type=\"password\" value={validatePassword} onChange={(event)=>{\n\t\t\t\t\t\t\t\t\tsetValidatePassword(event.target.value)}}placeholder=\"new password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5 >Repeat new password</h5>\n\t\t\t\t\t\t\t\t<input style={{marginBottom:\"20px\"}}type=\"password\" value={newPassword} onChange={(event)=>{\n\t\t\t\t\t\t\t\t\tsetNewPassword(event.target.value)}}placeholder=\"new password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button style={{marginTop:\"15px\",borderRadius:\"5px\",border:\"none\"}} type=\"submit\">Change my password</button>\n\t\t\t\t\t\t\t<div style={{marginTop:\"auto\",marginBottom:\"20px\",width:\"100%\",borderBottom:\"0.5px solid #C4C4C4\"}}>\n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t</form>  \n\t\t\t\t\t)}\n\t\t\t\n\t\t\t\t</div> \n\t\t\t}\n\t\t</div> \n\t)\n}\n\nexport default AccountPage","import React from \"react\"\nimport { CartesianGrid,AreaChart, Area, XAxis, YAxis,  Tooltip, } from \"recharts\"\n\nconst AnalysisPlot=({analysis, dataKey})=>{\n\n\tconst areaChart=(\n\t\t<AreaChart\n\t\t\twidth={600}\n\t\t\theight={400}\n\t\t\tdata={analysis}\n\t\t\tmargin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n\t\t>\n\t\t\t<CartesianGrid strokeDasharray=\"10 10\" />\n\t\t\t<XAxis dataKey=\"timeProperty\" />\n\t\t\t<YAxis />\n\t\t\t<Tooltip />\n\t\t\t<Area\n\t\t\t\ttype='monotone'\n\t\t\t\tdataKey={dataKey}\n\t\t\t\tstroke='#8884d8'\n\t\t\t\tfill='#8884d8'\n\t\t\t/>\n\t\t</AreaChart> \n\t)\n\n\n\tif(analysis){ \n\t\treturn (\n\t\t\tareaChart\n\t\t)\n\n\t}\n\treturn(null)\n}\n\nexport default AnalysisPlot\n","import React,{useState, useEffect} from \"react\" \nimport {datedAnalysis,allTimeAnalysis,exerciseNamesFromWorkouts} from \"../../Functions/workoutFunctions\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nimport AnalysisPlot from \"../AnalysisPlot\"\nimport MenuCard from \"../MenuCard\"\n\nconst AthleteAnalysis=({workouts})=>{\n\t/*Allow athlete to view progress analysis based on time-interval, repetitions, and weight */\n\n\tconst exerciseNameCache=exerciseNamesFromWorkouts(workouts)\n\t\t.filter((name,index)=>( //keep only 1 instance of each name\n\t\t\texerciseNamesFromWorkouts(workouts).indexOf(name)===index))\n\t/*indexOf returns index of first matching element\n\t\t\tif repetition of element in array, it will not equal the index of the first\n\t\t\telement, thus being discarded */\n\t\t\n\tconst [suggestions,setSuggestions]=useState([]) \n\tconst [selection,setSelection]=useState(null)  //Selection to be analysed\n\tconst [analysisType,setAnalysisType]=useState(null)  //Daily/Monthly/All-Time\n\n\tconst [repsAnalysis,setRepsAnalysis]=useState(null)  //Data from analysis\n\tconst [weightAnalysis,setWeightAnalysis]=useState(null)  //Data from analysis\n\n\tuseEffect(()=>{\n\t\tswitch(analysisType){\n\t\tcase \"Daily\": \n\t\t\tsetWeightAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"weight\"))\n\t\t\tsetRepsAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"reps\"))\n\t\t\tbreak\n\t\tcase \"Monthly\": \n\t\t\tsetWeightAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"monthly\",\"weight\"))\n\t\t\tsetRepsAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"monthly\",\"reps\"))\n\t\t\tbreak\n\t\tdefault: \n\t\t\tsetWeightAnalysis(allTimeAnalysis(workouts,selection||suggestions[0],\"weight\"))\n\t\t\tsetRepsAnalysis(allTimeAnalysis(workouts,selection||suggestions[0],\"reps\"))\n\t\t\tbreak\n\t\t}\n\t},[selection, analysisType])\n\t\n\tif (workouts.length===0) return (\n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={\"Performance Analysis\"} body={()=>(null)}/> \n\t\t\t<div className=\"resultPage analysis\">\n\t\t\t\t<h2>It looks like you&apos;s never submitted an exercise!</h2>\n\t\t\t\t<h4 style={{marginTop:\"40px\"}}>After you submit one, you can start viewing your progress here, and get various performance stats.</h4>\n\t\t\t</div>\n\t\t</div> \n\t)\n\n\tconst body=()=>(\n\t\t<>\n\t\t\t<input placeholder=\"exercise\" onChange={(event)=>{ //filter suggestions\n\t\t\t\tsetSuggestions(exerciseNameCache.filter((name)=>(\n\t\t\t\t\tname.toLowerCase().includes(event.target.value.toLowerCase()))))\n\t\t\t}}/> \n\t\t\t{suggestions.length<5 //if suggestions narrowed down, allow setting the selection for analysis\n\t\t\t\t? (<ul className=\"analysis__list\">{suggestions.map((suggestion,index)=> \n\t\t\t\t\t(<div className=\"analysis__result\" key={index}>\n\t\t\t\t\t\t<h5>{suggestion}</h5> \n\t\t\t\t\t\t<Dropdown key ={`${index}Button`}>\n\t\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAnalyse \n\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Daily\");setSelection(suggestions[index])}}> Daily</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Monthly\");setSelection(suggestions[index])}}> Monthly</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"All-Time\");setSelection(suggestions[index])}}> All-Time</Dropdown.Item>\n\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>)\n\t\t\t\t)} </ul>)  \n\t\t\t\t: (<h6>Too many suggestions to show!</h6>)} \n\t\t</>\n\t) \n\treturn(\n\t\t<div className=\"pageContainer\"> \n\t\t\t<MenuCard header={\"Analyse\"} body={body}/>  {/*TODO Change from MenuCard to resultPage*/}\n\t\t\t{ repsAnalysis && selection &&  //Right-side card\n\t\t\t\t\t<div className=\"resultPage analysis\"> \n\t\t\t\t\t\t<h2 >{analysisType}</h2>\n\t\t\t\t\t\t<h2>Total repetitions</h2>\n\t\t\t\t\t\t<AnalysisPlot analysis={repsAnalysis} dataKey=\"total\"/>\n\t\t\t\t\t\t{ weightAnalysis && ( \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h2>Total weight lifted</h2>\n\t\t\t\t\t\t\t\t<AnalysisPlot analysis={weightAnalysis} dataKey=\"total\" />\n\t\t\t\t\t\t\t</> )}\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default AthleteAnalysis","import React,{useEffect,useState} from \"react\" \nimport {Switch,Route,useHistory} from \"react-router-dom\"\nimport { GoPlusSmall } from \"react-icons/go\"\nimport AthleteHistory from \"./History_A\"\nimport AthleteExerciseSubmission from \"./ExerciseSubmission_A\"\nimport AccountPage from \"../AccountPage\"\nimport Analysis_A from \"./Analysis_A\"\nimport { getTodaysExercises } from \"../../Functions/workoutFunctions\"\n\nconst AthleteHeadquarters=({ user, setUser,setNotification,})=>{ \n\tconst [daysExercises, setDaysExercises] = useState([]) // today's target exercises\n\tconst [currentRegiment, setCurrentRegiment] = useState({}) // whole week target exercises\n\tconst [workouts, setWorkouts] = useState(null) // whole week target exercises !!TODO pass to Athlete Headquarters?\n\tconst history=useHistory()\n\n\tuseEffect(()=>{ //set athlete's workouts and regiment\n\t\tif(user){ \n\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))\n\t\t\tsetCurrentRegiment( JSON.parse(window.localStorage.getItem(\"currentRegiment\")) )\n\t\t} \n\t},[user])\n\n\tuseEffect(()=>{\n\t\tif(user){\n\t\t\tsetDaysExercises(getTodaysExercises(currentRegiment)) \n\t\t} \n\t},[currentRegiment])\n\t\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/account\">\n\t\t\t\t<AccountPage  setNotification={setNotification} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment} \n\t\t\t\t\tuser={user}setUser={setUser}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/dailySubmission\">\n\t\t\t\t<AthleteExerciseSubmission setNotification={setNotification} setWorkouts={setWorkouts} \n\t\t\t\t\tdaysExercises={daysExercises} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/history\"> \n\t\t\t\t<AthleteHistory workouts={workouts}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/analysis\" style = {{ height:\"100%\"}}> \n\t\t\t\t<Analysis_A workouts={workouts}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/\">\n\t\t\t\t<div className=\"pageContainer\">\n\t\t\t\t\t<div className=\"HQ__menu\">\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/dailySubmission\")}}>\n\t\t\t\t\t\t\t<h2>  {/*Everything within HQ__items gets styled in CSS*/}\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/> Submit a Workout </a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/history\")}} > \n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/> My Workout History </a>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/analysis\")}} >\n\t\t\t\t\t\t\t<h2> \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/> Performance Analysis </a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/account\")}} >\n\t\t\t\t\t\t\t<h2> \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>My Account</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{workouts && workouts.length>0 \n\t\t\t\t\t?(<h1 className=\"HQ__greeting\">Welcome Back</h1>) \n\t\t\t\t\t: <h1 className=\"HQ__greeting\">Welcome!</h1>\n\t\t\t\t}</Route>\n\t\t</Switch>\n\t)\n}\n\nexport default AthleteHeadquarters\n","import React,{useState, useEffect} from \"react\" \nimport {datedAnalysis,allTimeAnalysis,exerciseNamesFromWorkouts} from \"../../Functions/workoutFunctions\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nimport AnalysisPlot from \"../AnalysisPlot\"\nimport MenuCard from \"../MenuCard\"\n\nconst TrainerAnalysis=({clients})=>{\n\t/*For trainer to select any client, and view their workout progress */\n\n\tconst [selectedClient,setSelectedClient]=useState() //workouts will depend on selectedClient\n\n\tconst [searchQuery,setSearchQuery]=useState(\"\") \n\tconst [suggestions,setSuggestions]=useState([]) \n\tconst [selection,setSelection]=useState(null)  //Selection to be analysed\n\n\tconst [analysisType,setAnalysisType]=useState(null)  //Daily/Monthly/All-Time\n\n\tconst [repsAnalysis,setRepsAnalysis]=useState(null)  //Data from analysis\n\tconst [weightAnalysis,setWeightAnalysis]=useState(null)  //Data from analysis\n\tconst [exerciseNameCache,setExerciseNameCache] = useState(null) \n\n\t/*indexOf returns index of first matching element\n\t\t\tif repetition of element in array, it will not equal the index of the first\n\t\t\telement, thus being discarded */\n\t\t\n\tuseEffect(()=>{ \n\t\tselectedClient &&\n\t\tsetExerciseNameCache(selectedClient.days && exerciseNamesFromWorkouts(selectedClient.days)\n\t\t\t.filter((name,index)=>( //keep only 1 instance of each name\n\t\t\t\texerciseNamesFromWorkouts(selectedClient.days).indexOf(name)===index)))\n\t},[selectedClient]) //when client changes, update selection ( if username has an exercise of the same name)\n\n\tuseEffect(()=>{\n\t\texerciseNameCache && searchQuery && \n\t\tsetSuggestions(exerciseNameCache.filter((name)=>(\n\t\t\tname.toLowerCase().includes(searchQuery.toLowerCase())))) \n\t},[exerciseNameCache,searchQuery,])\n\n\tuseEffect(()=>{\n\t\tif (selectedClient){\n\t\t\tswitch(analysisType){\n\t\t\tcase \"Daily\": \n\t\t\t\tsetWeightAnalysis(datedAnalysis(selectedClient.days,selection||suggestions[0],\"daily\",\"weight\"))\n\t\t\t\tsetRepsAnalysis(datedAnalysis(selectedClient.days,selection||suggestions[0],\"daily\",\"reps\"))\n\t\t\t\tbreak\n\t\t\tcase \"Monthly\": \n\t\t\t\tsetWeightAnalysis(datedAnalysis(selectedClient.days,selection||suggestions[0],\"monthly\",\"weight\"))\n\t\t\t\tsetRepsAnalysis(datedAnalysis(selectedClient.days,selection||suggestions[0],\"monthly\",\"reps\"))\n\t\t\t\tbreak\n\t\t\tdefault: \n\t\t\t\tsetWeightAnalysis(allTimeAnalysis(selectedClient.days,selection||suggestions[0],\"weight\"))\n\t\t\t\tsetRepsAnalysis(allTimeAnalysis(selectedClient.days,selection||suggestions[0],\"reps\"))\n\t\t\t\tbreak\n\t\t\t}}\n\t},[selectedClient,selection, analysisType])\n\t\n\tconst body=()=>(\n\t\t<>\n\t\t\t<Dropdown style={{marginBottom:\"20px\"}}>\n\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t{selectedClient && selectedClient.username || \"Select a client\"} \n\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t{clients && clients.map((client)=>( \n\t\t\t\t\t\t<Dropdown.Item key={client.username} onClick={()=>{setSelectedClient(client)\n\t\t\t\t\t\t}}> {client.username}</Dropdown.Item>\n\t\t\t\t\t))}\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown> \n\n\n\t\t\t<input placeholder=\"exercise\" \n\t\t\t\tvalue={searchQuery}\n\t\t\t\tonChange={(event)=>{ //filter suggestions\n\t\t\t\t\tsetSearchQuery(event.target.value)\n\t\t\t\t}}/> \n\t\t\t{suggestions.length<5 //if suggestions narrowed down, allow setting the selection for analysis\n\t\t\t\t? (<ul className=\"analysis__list\">{suggestions.map((suggestion,index)=> \n\t\t\t\t\t(<div className=\"analysis__result\" key={index}>\n\t\t\t\t\t\t<h5>{suggestion}</h5> \n\t\t\t\t\t\t<Dropdown key ={`${index}Button`}>\n\t\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAnalyse \n\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Daily\");setSelection(suggestions[index])}}> Daily</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Monthly\");setSelection(suggestions[index])}}> Monthly</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"All-Time\");setSelection(suggestions[index])}}> All-Time</Dropdown.Item>\n\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>)\n\t\t\t\t)} </ul>)  \n\t\t\t\t: (<h6>Too many suggestions to show!</h6>)} \n\t\t</>\n\t) \n\treturn(\n\t\t<div className=\"pageContainer\"> \n\t\t\t<MenuCard header={\"Analysis\"} body={body}/>  {/*TODO change from menucard to resultpage*/}\n\t\t\t{ repsAnalysis && selection &&  //Right-side card\n\t\t\t\t\t<div className=\"resultPage analysis\"> \n\t\t\t\t\t\t<h2 >{analysisType}</h2>\n\t\t\t\t\t\t<h2>Total repetitions</h2>\n\t\t\t\t\t\t<AnalysisPlot analysis={repsAnalysis} dataKey=\"total\"/>\n\t\t\t\t\t\t{ weightAnalysis && ( \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h2>Total weight lifted</h2>\n\t\t\t\t\t\t\t\t<AnalysisPlot analysis={weightAnalysis} dataKey=\"total\" />\n\t\t\t\t\t\t\t</> )}\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default TrainerAnalysis","import React, {useEffect,useState} from \"react\"\nimport {filterExercisesByName,filterWorkoutsByDate} from \"../../Functions/workoutFunctions\"\nimport Form from \"react-bootstrap/Form\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport HistoryWorkout from \"../HistoryWorkout\" \nimport CalendarPicker from \"../CalendarPicker\"\nimport MenuCard from \"../MenuCard\" \nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nconst TrainerHistory=({clients})=>{ \n\t/* view workout history of any client */\n\n\tconst [selectedClient,setSelectedClient]=useState()\n\tconst [filterQuery, setFilterQuery] = useState(\"\") //Search term\n\tconst [useDate,setUseDate]=useState(false) // use calendar selection? \n\tconst [dateRange,setDateRange]=useState(new Date()) // when interacted with, will become array  with start and end of selection\n\n\tconst [filteredWorkouts,setFilteredWorkouts]=useState(null) \n\t\n\tconst filterByDate=(workouts,dateRange)=>{ \n\t\tif(useDate){ // if check box is ticked\n\t\t\tconst results=[]\n\t\t\tfilterWorkoutsByDate(workouts,dateRange).forEach((workout)=>{ //For each workout within date range\n\t\t\t\tif (filterExercisesByName(workout.exercises,filterQuery).length>0){ // if satisfies search query\n\t\t\t\t\tresults.push(workout)\n\t\t\t\t}})\n\t\t\tsetFilteredWorkouts(results)\n\t\t}}\n\n\tuseEffect(()=>{\n\t\tif (selectedClient){\n\t\t\tif (useDate) { // combine date range and search term\n\t\t\t\tfilterByDate(selectedClient.days,dateRange)\n\t\t\t} \n\t\t\telse{ // use search term only \n\t\t\t\tsetFilteredWorkouts(\n\t\t\t\t\tselectedClient.days.map((workout)=>{ \n\t\t\t\t\t\tconst result=filterExercisesByName(workout.exercises,filterQuery)\n\t\t\t\t\t\tif(result.length!==0){return(workout)}\n\t\t\t\t\t})\n\t\t\t\t\t\t.filter((value)=>value!=undefined)) \n\t\t\t} }\n\t},[filterQuery,useDate,selectedClient])  //search box content or checkbox are changed\n\n\tconst body=()=>(\n\t\t<>\n\t\t\t<Dropdown style={{marginBottom:\"20px\"}}>\n\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t{selectedClient && selectedClient.username || \"Select a client\"}\n\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t{clients && clients.map((client)=>( \n\t\t\t\t\t\t<Dropdown.Item key={client.username} onClick={()=>{setSelectedClient(client)\n\t\t\t\t\t\t}}> {client.username}</Dropdown.Item>\n\t\t\t\t\t))}\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown> \n\t\t\t<p>Search by name</p>\n\t\t\t<Form style={{marginBottom:\"40px\"}} onSubmit={(event)=>{event.preventDefault()}}>\n\t\t\t\t<FormControl type=\"text\" placeholder=\"e.g. pushups\"  onChange={(event)=>{setFilterQuery(event.target.value)}}/>\n\t\t\t</Form>\n\t\t\t<div>\n\t\t\t\t<p style={{marginRight:\"20px\",display:\"inline\"}}>Filter by date</p>\n\t\t\t\t<input type=\"checkbox\" value={useDate} onClick={()=>{setUseDate(!useDate)}}/> \n\t\t\t</div>\n\t\t\t<CalendarPicker dateRange={dateRange} setDateRange={setDateRange} workouts={selectedClient && selectedClient.days} callback={filterByDate} /> \n\t\t</> \n\t)\n\n\treturn(\n\t\t<>\n\t\t\t<div className=\"pageContainer\">\n\t\t\t\t<MenuCard header={\"History\"} body={body}/> \n\t\t\t\t{ filteredWorkouts && filteredWorkouts.length>0 && \n\t\t\t\t<div className=\"resultPage history\">\n\t\t\t\t\t<ul className=\"history__list\" \n\t\t\t\t\t\tstyle={{display:\"flex\",flexDirection:\"column-reverse\",listStyleType:\"none\"}}>\n\t\t\t\t\t\t{filteredWorkouts.map((workout,index)=>( \n\t\t\t\t\t\t\t<li key={index} >\n\t\t\t\t\t\t\t\t<HistoryWorkout workout={workout} /> \n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default TrainerHistory","import React,{useEffect, useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\n\nimport exerciseService from \"../../Services/exercises\" \nimport ExerciseBox from \"../ExerciseBox\" \nimport MenuCard from \"../MenuCard\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport {getTodaysExercises } from \"../../Functions/workoutFunctions\"\n\nconst TrainerExerciseSubmission=({clients, setClients, setNotification})=>{ \n/*Trainer can submit workouts on behalf of a client */\n\tconst history=useHistory()\n\t\n\tconst [uniqueNames,setUniqueNames]=useState([]) \n\tconst [selectedClient, setSelectedClient] = useState(null)\n\tconst [newWorkout, setNewWorkout]=useState([]) \n\tconst [removedExercises, setRemovedExercises]=useState([]) // Keep track of removed exercises\n\tconst [selectedExercise, setSelectedExercise]=useState(null) // to filter which exercises are shown for editing \n\n\tuseEffect(()=>{\n\t\tif(selectedClient){\n\t\t\tconst unique=getTodaysExercises(selectedClient.currentRegiment)  //todays exercises\n\t\t\tif(unique){ //has exercises for today\n\t\t\t\tsetUniqueNames(unique)\n\t\t\t\tsetNewWorkout(unique.map((exerciseName)=>(   [{name:exerciseName,reps:1,sets:1}] ) ))\n\t\t\t}\n\t\t}},[selectedClient])\n\n\tconst submitWorkout=async ()=>{ \n\t\tconst exercisesForSubmission=[]\n\t\tnewWorkout.forEach((exerciseArray)=> //retrieve nested exercises\n\t\t{exerciseArray.forEach((exercise)=>{exercisesForSubmission.push(exercise)}) \n\t\t})\n\n\t\tconst validatedExercises=exercisesForSubmission.filter((exercise)=>( //validate exercises\n\t\t\texercise.sets!=0 && exercise.reps!=0\n\t\t))\n\n\t\tif(validatedExercises.length>0){// Non-empty\n\t\t\tconst validEntries = newWorkout \n\t\t\t\t.filter((_,i) =>  \n\t\t\t\t\tvalidatedExercises[i] && true) \n\n\t\t\tif (validEntries.length>0) {  \n\t\t\t\tconst sentWorkout=await exerciseService.sendWorkout({exercises:validatedExercises,_id:selectedClient._id}) \n\t\t\t\tif(sentWorkout){\n\t\t\t\t\tconst updatedClient={...selectedClient,days:selectedClient.days.concat(sentWorkout)}\n\t\t\t\t\tconst updatedClients=clients.filter((client)=>client._id!==selectedClient._id).concat(updatedClient)\n\t\t\t\t\tsetClients(updatedClients)\n\t\t\t\t\tsetNotification({color:\"white\",message:\"Workout uploaded successfully\"}) \n\t\t\t\t\thistory.push(\"/\") \n\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong :(\"}) \n\t\t\t\t}\n\t\t\t} \n\t\t\t\n\t\t\telse{\n\t\t\t\tconsole.log(\"No valid entries\") //Data mangled-Shouldn't happen in production.\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tsetNotification({color:\"red\",message:\"Looks like you haven't submitted any exercises!\"}) \n\t\t} \n\t} \n\tconst body=()=>(\n\t\t<>\n\t\t\t<Dropdown style={{marginBottom:\"20px\"}}>\n\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t{selectedClient && selectedClient.username || \"Select a client\"} \n\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t{clients && clients.map((client)=>( \n\t\t\t\t\t\t<Dropdown.Item key={client.username} onClick={()=>{setSelectedClient(client)\n\t\t\t\t\t\t}}> {client.username}</Dropdown.Item>\n\t\t\t\t\t))}\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown> \n\n\t\t\t{uniqueNames &&\n\n<>\n\t{uniqueNames.map((uniqueName,i) => (  //selectable box for each unique exercise\n\t\t<div className=\"menuItem__removable\" key={`${uniqueName}${i}`}>  \n\t\t\t<a className=\"menuItem__text\" onClick={()=>{setSelectedExercise(uniqueName)}}>{uniqueName}</a>\n\t\t\t<a style={{cursor:\"pointer\"}}\n\t\t\t\tonClick={()=>{\n\t\t\t\t\tsetRemovedExercises(removedExercises.concat(uniqueName))\n\t\t\t\t\tsetNewWorkout(newWorkout.filter((exerciseArray)=>(exerciseArray[0].name!==uniqueName))) \n\t\t\t\t\tsetUniqueNames(uniqueNames.filter((name)=>(uniqueName!==name)))\n\t\t\t\t}}>\n\t\t\t\t<BsFillTrashFill style={{marginLeft:\"auto\",marginRight:\"15px\"}}/>\n\t\t\t</a>\n\t\t</div>\n\t))}\n</>\n\t\t\t}\n\n\t\t\t{ removedExercises.length>0 && \n\t\t\t\t<h5 style={{marginTop:\"auto\",textAlign:\"center\"}}>Removed</h5> }\n\t\t\t{ removedExercises.map((exercise)=>{ //bring back a removed exercise\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"menuCard__exercise--removed\" key={exercise}> \n\t\t\t\t\t\t<a key={exercise} className=\"menuItem__text\"\n\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.filter((name)=>(name!=exercise)))\n\t\t\t\t\t\t\t\tsetNewWorkout(newWorkout.concat([[{name:exercise,reps:1,sets:1,weight:null}]]))\n\t\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.concat((exercise)))}} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t)})\n\t\t\t}\n\t\t\t<button style={{borderRadius:\"5px\",marginTop:\"auto\",}}onClick={()=>\n\t\t\t\tsubmitWorkout(newWorkout)}>Submit</button> \n\t\t</> \n\t)\n\t\n\treturn ( \n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={\"Exercises\"} body={body}/> \n\n\t\t\t{newWorkout.map((exerciseArray,i)=>{ \n\t\t\t\tif (exerciseArray[0].name!==selectedExercise){return} //render only for selected exercise\n\t\t\t\treturn( \n\t\t\t\t\t<div key={i} style={{ zIndex:\"0\",marginTop:\"80px\",display:\"flex\",flexDirection:\"column\"}}>   {/*TODO make css class - shared with routinePage */}\n\t\t\t\t\t\t<ExerciseBox  exerciseArray={exerciseArray} newWorkout={newWorkout} setNewWorkout={setNewWorkout} indexInArray={i}/> \n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}) \n\t\t\t}\n\t\t</div> \n\t)\n} \n\nexport default TrainerExerciseSubmission ","import React,{useState} from \"react\"\nimport {BsChevronUp} from \"react-icons/bs\"\nimport {BsChevronDown} from \"react-icons/bs\" \nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nconst CollapsableList=({day,routines,isEditable,selectedClient,setSelectedClient,addExercise,editExercise,removeExercise})=>{\n\t/*collapsable list component used in trainer clientPage */\n\tconst [isExpanded, setIsExpanded]=useState(false)\n\t\n\tconsole.log(routines)\n\treturn (\t\n\t\t<div style={{ marginTop:\"20px\",borderBottom:\"0.5px solid #CECECE\"}}>\n\t\t\t<div \n\t\t\t\tstyle={{cursor:\"pointer\",marginTop:\"20px\",display:\"flex\",margin:\"0px\"}} >\n\t\t\t\t<div \n\t\t\t\t\tonClick={()=>setIsExpanded(!isExpanded)}\n\t\t\t\t\tstyle={{ display:\"flex\",width:\"100%\"}}>\n\t\t\t\t\t<h5 >\t\n\t\t\t\t\t\t{day[0]} \n\t\t\t\t\t</h5>\n\t\t\t\t\t{isExpanded\n\t\t\t\t\t\t? <BsChevronDown style={{marginLeft:\"auto\"}}/> \n\t\t\t\t\t\t: <BsChevronUp style={{marginLeft:\"auto\"}}/>}\n\t\t\t\t</div>\n\n\t\t\t\t{isEditable && isExpanded &&  \n\t\t\t\t<> {/*User pressed \"edit\" and has expanded the day list */}\n\t\t\t\t\t<button onClick={()=>{addExercise(day)}}\n\t\t\t\t\t\tclassName=\"themed\"style={{marginLeft:\"15px\",display:\"inline\"}}>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t</button>\n\t\t\t\t\t<Dropdown >{/* dropdown menu to overwrite exercises with a routine*/}\n\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAssign routine\n\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t{routines.map((routine)=>( \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{ \n\t\t\t\t\t\t\t\t\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,\n\t\t\t\t\t\t\t\t\t\t\t[day[0]]:routine.exercises\n\t\t\t\t\t\t\t\t\t\t}})}}> {routine.name}</Dropdown.Item>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<ul style={{listStyle:\"none\"}}>\n\t\t\t\t{day[1].map((exercise,i)=>\n\t\t\t\t\tisEditable\n\t\t\t\t\t\t? //if editable -> allow render entries as inputs\n\t\t\t\t\t\t<div key={i} style={{margin:\"5px\", display:\"flex\"}}>\n\t\t\t\t\t\t\t{isExpanded && \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<input style={{display:\"block\"}} \n\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\tonBlur={(event)=>{editExercise(day,i,event.target.value.trim())} } //on unfocus, remove trailing whitespace\n\t\t\t\t\t\t\t\t\tonChange={(event)=>editExercise(day,i,event.target.value)}\n\t\t\t\t\t\t\t\t\tvalue={exercise}/>\n\t\t\t\t\t\t\t\t<button onClick={()=>{removeExercise(day,i)}}>remove</button> \n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:  //else render as plain text\n\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t{isExpanded && <li>{exercise}</li> }\n\t\t\t\t\t\t</div>\n\t\t\t\t)} \n\t\t\t</ul> \n\t\t</div>\n\t)\n\t\n}\nexport default CollapsableList","import React,{useState} from \"react\"\nimport clientService from \"../../Services/clients\" \n\nconst AddClient=({setClients})=>{ \n\t/*form for trainer to add a new client */\n\n\tconst submitClient=async ()=>{\n\t\tif (currentClient.name  //all fields filled in\n\t\t\t&& currentClient.username \n\t\t\t&& currentClient.password \n\t\t\t&& (currentClient.password===currentClient.validatePassword)){ //password typed correctly twice\n\t\t\tconst updatedTrainer=await clientService.addClient(currentClient)\n\t\t\tsetClients(updatedTrainer.clients)\n\t\t\tsetCurrentClient({username:\"\", password:\"\",validatePassword:\"\"})\n\t\t}\n\t} \n\n\tconst [currentClient,setCurrentClient]=\n\tuseState({username:\"\", password:\"\",validatePassword:\"\"})\n\n\treturn(\n\t\t<form className=\"resultPage\" style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}\n\t\t\tonSubmit={(event)=>{event.preventDefault(); submitClient(currentClient)}\n\t\t\t}> \n\t\t\t<h1>Add a client </h1>\n\t\t\t<div style={{marginTop:\"40px\",display:\"flex\", flexDirection:\"column\",alignItems:\"center\",}}>\n\n\t\t\t\t<div style={{display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t\t<h1>Username</h1>\n\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,name:event.target.value}) }} \n\t\t\t\t\t\tplaceholder={currentClient.name || \"client name\"} //TODO set value to user name - changing from uncontrolled to controlled right now\n\t\t\t\t\t\tvalue={currentClient.name} /> \n\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,username:event.target.value}) }} \n\t\t\t\t\t\tplaceholder={currentClient.username || \"client username\"}\n\t\t\t\t\t\tvalue={currentClient.username} /> \n\n\t\t\t\t</div>\n\t\t\t\t<div style={{marginTop:\"20px\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t\t<h1>Password</h1>\n\t\t\t\t\t<input onChange={(event)=>{setCurrentClient({...currentClient,password:event.target.value}) }} \n\t\t\t\t\t\tplaceholder={currentClient.password || \"client password\"}\n\t\t\t\t\t\tvalue={currentClient.password}/> \n\n\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,validatePassword:event.target.value}) }}\n\t\t\t\t\t\tplaceholder={currentClient.validatePassword || \"repeat client password\"} \n\t\t\t\t\t\tvalue={currentClient.validatePassword} /> \n\t\t\t\t</div>\t\t\n\t\t\t\t<button type=\"submit\"  \n\t\t\t\t\tclassName=\"themed\" style={{margin:\"20px\",width:\"50px\", height:\"50px\"}}>\n\t\t\t\t\t\t\t\t\t\tadd\n\t\t\t\t</button>\n\t\t\t</div> \n\t\t</form>\n\n\t)\n}\nexport default AddClient","import React,{useState,useEffect} from \"react\"\nimport MenuCard from \"../MenuCard\"\nimport CollapsableList from \"./CollapsableList\"\nimport AddClient from \"./AddClient\"\nimport clientService from \"../../Services/clients\"\nimport {GrAddCircle} from \"react-icons/gr\"\n\nconst ClientsPage=({clients,setClients,routines,setNotification })=>{ \n\t/*For trainer to view and edit his clients workout details */\n\n\tconst [selectedClient,setSelectedClient]=useState(null) //use this state to send update request to backend if changes happen\n\tconst [clientIndex,setClientIndex]=useState(null)  //Keep track of client index in clients state\n\tconst [isEditable,setIsEditable]=useState(false) //Allow editing client \n\n\n\tuseEffect(()=>{\n\t\tclients && isEditable==false &&  // On cancel\n\t\tselectedClient!==clients[clientIndex] && setSelectedClient(clients[clientIndex])  //If differences, revert state to original\n\t},[isEditable])\n\n\tuseEffect(()=>{ \n\t\tsetIsEditable(false)\n\t},[selectedClient && selectedClient.username]) //everytime client changes (NOT EDITED), set isEditable to false\n\n\tconst toggleDay=(day)=>{ // workout day or rest day\n\t\tisEditable && \n\t\t(day[1]\n\t\t\t? setSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,[day[0]]:null}})\n\t\t\t: setSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,[day[0]]:[\"\"]}})\n\t\t)} \n\n\tconst editExercise=(day,index,newExercise)=>{ \n\t\tisEditable && \n\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,\n\t\t\t[day[0]]:day[1].map((currentExercise,i)=>( \n\t\t\t\ti==index\n\t\t\t\t\t? (newExercise.charAt(0).toUpperCase()+ // compare formatted entry\n\t\t\t\t\tnewExercise.slice(1))\n\t\t\t\t\t: currentExercise\n\t\t\t))}})} \n\n\tconst addExercise=(day)=>{ \n\t\tisEditable && \n\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,\n\t\t\t[day[0]]:day[1].concat(\"\")}})}\n\n\tconst removeExercise=(day,index)=>{ \n\t\tif (isEditable){ \n\t\t\tconst updatedDay=selectedClient.currentRegiment[day[0]].filter((_,i)=>index!==i)\n\t\t\tif(updatedDay.length===0)\n\t\t\t{  //set day to null\n\t\t\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment, [day[0]]:null}})\n\t\t\t} \n\t\t\telse{ //set day to filtered array\n\t\t\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment, [day[0]]:updatedDay}})}} \n\t} \n\t\n\tconst submitClient=async()=>{ \n\t\tlet containsDuplicate=false\n\t\tconst regiment=Object.entries(selectedClient.currentRegiment) \n\t\t\t.map((day)=>{\n\t\t\t\tif(day[1] && new Set(day[1]).size != day[1].length){ //If duplicate exercise on same day\n\t\t\t\t\tcontainsDuplicate=true  //set Notification\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(day[1]){ //filter whitespace entries\n\t\t\t\t\t\tconst exercises = day[1].filter((exercise)=>(exercise.trim())) //TODO might be redundant -> handling with onblur of inputs\n\t\t\t\t\t\treturn [day[0], exercises.length===0 \n\t\t\t\t\t\t\t? null // no valid entries?\n\t\t\t\t\t\t\t: exercises ] //exercise array \n\t\t\t\t\t}\n\t\t\t\t\telse{ //rest day\n\t\t\t\t\t\treturn [day[0],null]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tif (containsDuplicate){\n\t\t\tsetNotification({color:\"red\",message:\"Looks like you've assigned the same exercise twice in the same day :)\"})\n\t\t}\n\t\telse{  //submit\n\t\t\ttry{\n\n\t\t\t\tsetSelectedClient({...selectedClient,currentRegiment:Object.fromEntries(regiment)})\n\t\t\t\tconst updatedClient=await clientService.updateClient({...selectedClient,currentRegiment:Object.fromEntries(regiment)}) \n\t\t\t\tconst updatedClients=clients.filter((client)=>client._id!==updatedClient._id).concat(updatedClient)\n\t\t\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(updatedClients))\n\t\t\t\tsetClients(updatedClients) \n\t\t\t\tsetIsEditable(false)\n\t\t\t\tsetNotification({color:\"green\",message:\"Client updated successfully\"})\n\t\t\t}\n\t\t\tcatch{ \n\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong :(\"})\n\t\t\t}\n\t\t}\n\t}\n\t\n\t{if(!clients){return (<div>No clients</div>)}}\n\treturn(\n\t\t<div className=\"pageContainer\"> \n\t\t\t<MenuCard header={\"My Clients\"} body={ \n\t\t\t\t()=>\n\t\t\t\t\t<div style={{flexWrap:\"wrap\",display:\"flex\"}}>\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tonClick={()=>{ \n\t\t\t\t\t\t\t\tsetSelectedClient({username:\"\",currentRegiment:{Mon:null,Tue:null,Wed:null,Thu:null,Fri:null,Sat:null,Sun:null}})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmargin:\"10px\",\n\t\t\t\t\t\t\t\tboxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.45)\", borderRadius: \"5px\",\n\t\t\t\t\t\t\t\tcursor:\"pointer\",display:\"flex\",flexDirection:\"column\", alignItems:\"center\",\n\t\t\t\t\t\t\t\theight:\"200px\", width:\"155px\", }}>\n\t\t\t\t\t\t\t<GrAddCircle style={{color:\"orange\",fontSize:\"60px\"}}/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{clients.map((client,i)=>( \n\t\t\t\t\t\t\t<div onClick={()=>{if(isEditable){console.log(\"Are you sure?\")}\n\t\t\t\t\t\t\t\tsetSelectedClient(client)\n\t\t\t\t\t\t\t\tsetClientIndex(i)}}\n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmargin:\"10px\",\n\t\t\t\t\t\t\t\tboxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.45)\", borderRadius: \"5px\",\n\t\t\t\t\t\t\t\tcursor:\"pointer\",display:\"flex\",flexDirection:\"column\", alignItems:\"center\",\n\t\t\t\t\t\t\t\theight:\"200px\", width:\"155px\", }}>\n\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t{client.username }\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t</div>\n\t\t\t}/> \n\t\t\t{selectedClient && selectedClient.username\n\t\t\t\t? //edit existing client\n\t\t\t\t//TODO make component\n\t\t\t\t<div style={{display:\"flex\",flexDirection:\"column\",}} className=\"resultPage clientView\" >\n\n\t\t\t\t\t<div className=\"client__header\" \n\t\t\t\t\t\tstyle={{ width:\"100%\",borderBottom:\"0.5px solid #CECECE\",padding:\"40px\",display:\"flex\",}} > \n\n\t\t\t\t\t\t<div className=\"client__details\" style={{flexGrow:\"1\",marginRight:\"25px\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t\t\t\t<h5 style={{display:\"inline\"}}> Username </h5>\n\t\t\t\t\t\t\t<p style={{display:\"inline\"}}> {selectedClient.username}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"client__details\" style={{display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t\t\t\t<h5 style={{display:\"inline\"}}> Email </h5>\n\t\t\t\t\t\t\t<p style={{display:\"inline\"}}> example@example.com</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button style ={{marginLeft:\"40px\"}}onClick={()=>{setIsEditable(!isEditable)}}>\n\t\t\t\t\t\t\t{isEditable\n\t\t\t\t\t\t\t\t? \"Cancel\" \n\t\t\t\t\t\t\t\t: \"Edit\"}</button>  \n\t\t\t\t\t\t{isEditable && <button onClick={()=>{ submitClient() }} className=\"themed\">Save</button>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"client__regiment\" style={{width:\"100%\",borderBottom:\"0.5px solid #CECECE\",padding:\"40px\",display:\"flex\"}} > \n\n\t\t\t\t\t\t{ Object.entries(selectedClient.currentRegiment)\n\t\t\t\t\t\t\t.map((day)=>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst value=day[1]||\"\"\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div key={day[0]} style={{flexGrow:\"1\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",margin:\"5px\"}}>\n\t\t\t\t\t\t\t\t\t\t<h5> {day[0]} </h5> \n\t\t\t\t\t\t\t\t\t\t<input value={value} type=\"checkbox\" onChange={()=>{toggleDay(day)}}readOnly={false} checked={value} />\n\t\t\t\t\t\t\t\t\t</div>)}) \n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style ={{width:\"100%\"}}>\n\t\t\t\t\t\t{ Object.entries(selectedClient.currentRegiment)\n\t\t\t\t\t\t\t.map((day)=>\n\t\t\t\t\t\t\t\tday[1] &&  //if day has entries, render list\n\t\t\t\t\t\t\t\t<CollapsableList key={day[0]} \n\t\t\t\t\t\t\t\t\tsetSelectedClient={setSelectedClient}\n\t\t\t\t\t\t\t\t\tselectedClient={selectedClient}\n\t\t\t\t\t\t\t\t\tday={day} isEditable={isEditable} \n\t\t\t\t\t\t\t\t\taddExercise={addExercise} editExercise={editExercise} \n\t\t\t\t\t\t\t\t\tremoveExercise={removeExercise} routines={routines}/>\n\t\t\t\t\t\t\t)} \n\t\t\t\t\t</div> \n\t\t\t\t</div> \n\t\t\t\t: //new client\n\t\t\t\t<AddClient setClients={setClients} clients={clients} />\n\t\t\t}\n\t\t</div> \n\t)\n}\nexport default ClientsPage","import React,{useState,useEffect} from \"react\"\nimport MenuCard from \"../MenuCard\"\nimport exerciseService from \"../../Services/exercises\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\n\nconst RoutinePage = ({routines,setRoutines }) => {\n\t/*Trainer can create-edit-remove routines; Workouts frequently assigned to clients , e.g. \"Backday-basic\" */\n\tconst [localRoutines,setLocalRoutines]=useState(routines || JSON.parse(window.localStorage.getItem(\"routines\"))) // To modify temporarily without changes to outside state until save\n\tconst [selectedRoutine,setSelectedRoutine]=useState(null)\n\tconst [routineIndex,setRoutineIndex]=useState(null) //index of selectedRoutine in routines array\n\tconst [isEditable,setIsEditable]=useState(false) \n\n\tconst editRoutine=(index,exercise)=>{ //edit a routine exercise\n\t\tisEditable && \n\t\tsetSelectedRoutine({...selectedRoutine,exercises: \n\t\t\tselectedRoutine.exercises.map((name,i)=>\n\t\t\t\ti===index \n\t\t\t\t\t? exercise.charAt(0).toUpperCase()+exercise.slice(1)\n\t\t\t\t\t: name\n\t\t\t)})} \n\n\tconst addRoutine = ()=>{  //brand new routine \n\t\tsetLocalRoutines(localRoutines.concat({name:\"New Routine\", exercises:[\"\"]}))\n\t} \n\n\tconst removeRoutine = async(index)=>{  \n\t\tconst updatedRoutines=localRoutines.filter((_,i)=>index!=i)\n\t\tconst validatedRoutines=await exerciseService.setRoutines(updatedRoutines) //\n\t\tsetLocalRoutines(validatedRoutines)\n\t\tsetRoutines(validatedRoutines)\n\t\twindow.localStorage.setItem(\"routines\",JSON.stringify(validatedRoutines))\n\t\tindex===routineIndex && setSelectedRoutine(null) //if removing currently viewed routine\n\t} \n\n\tconst removeFromRoutine = (exercise)=>{ //remove exerise from routine\n\t\tsetSelectedRoutine({...selectedRoutine, exercises:selectedRoutine.exercises.filter((name)=>name!=exercise)})\n\t} \n\n\tconst saveRoutines= async() =>{\n\t\t//TODO filter routines for duplicates, null exercises and names\n\t\tsetIsEditable(false)\n\t\tconst updatedRoutines=localRoutines.map((routine,i)=>i===routineIndex ? selectedRoutine : routine)\n\t\tconst validatedRoutines=await exerciseService.setRoutines(updatedRoutines) //\n\t\tsetRoutines(validatedRoutines)\n\t\tsetLocalRoutines(validatedRoutines)\n\t\twindow.localStorage.setItem(\"routines\",JSON.stringify(validatedRoutines))\n\t\tsetSelectedRoutine(validatedRoutines[routineIndex])\n\t\tconsole.log(validatedRoutines) \n\t} \n\n\tuseEffect(()=>{\n\t\tlocalRoutines && isEditable==false &&  // On cancel\n\t\tselectedRoutine!==localRoutines[routineIndex] && setSelectedRoutine(localRoutines[routineIndex])  //If differences, revert state to original\n\t},[isEditable]) \n\n\treturn ( \n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header=\"My Routines\" body ={()=>\n\t\t\t\t<>\n\t\t\t\t\t<button onClick={()=>{addRoutine()}}>Add routine </button>\n\t\t\t\t\t{localRoutines && localRoutines.map((routine,index)=>\n\t\t\t\t\t\t<div key={`${routine.name}${index}`} className=\"menuItem__removable\">\n\t\t\t\t\t\t\t<a  onClick={()=>{setSelectedRoutine(routine); setRoutineIndex(index);setIsEditable( false )}}\n\t\t\t\t\t\t\t\tclassName=\"menuItem__text\">  \n\t\t\t\t\t\t\t\t{ routine.name }\n\t\t\t\t\t\t\t</a> \n\n\t\t\t\t\t\t\t<a style={{cursor:\"pointer\"}}\n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tremoveRoutine(index)\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<BsFillTrashFill style={{marginLeft:\"auto\",marginRight:\"15px\"}}/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</> \n\t\t\t}/>\n\n\t\t\t{selectedRoutine &&  \n\t\t\t\t\t<div style={{ marginTop:\"80px\"}}>  \n\t\t\t\t\t\t<div className=\"a-exerciseEntry itemCard\">  \n\t\t\t\t\t\t\t{isEditable \n\t\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div style={{alignContent:\"flexStart\",justifyItems:\"flexStart\",justifyContent:\"flexStart\",alignItems:\"flexStart\",display:\"flex\",}}>\n\t\t\t\t\t\t\t\t\t\t<div style={{display:\"flex-inline\", flexDirection:\"column\"}}>\n\t\t\t\t\t\t\t\t\t\t\t<h2>Routine name</h2>\n\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{marginBottom:\"30px\"}}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>{setSelectedRoutine({...selectedRoutine,name:event.target.value})}}value={selectedRoutine.name || \"\"} /> \n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div style={{marginLeft:\"auto\"}}>\n\t\t\t\t\t\t\t\t\t\t\t<button style={{marginRight:\"2px\",display:\"inline\"}}className=\"themed\" onClick={()=>{saveRoutines() }}>Save</button> \n\t\t\t\t\t\t\t\t\t\t\t<button   style={{display:\"inline\"}} onClick={()=>{setIsEditable(!isEditable)}}>{isEditable ? \"Cancel\" : \"Edit\"}</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h2 style={{marginBottom:\"0px\"}}>Routine exercises</h2>\n\t\t\t\t\t\t\t\t\t<div style={{display:\"flex\"}}>\n\t\t\t\t\t\t\t\t\t\t<button className=\"themed\"style={{marginLeft:\"auto\"}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={()=>{setSelectedRoutine({...selectedRoutine,exercises:selectedRoutine.exercises.concat(\"\")})}}>Add</button> \n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tselectedRoutine && selectedRoutine.exercises.map((exercise,index)=> \n\t\t\t\t\t\t\t\t\t\t\t<div style={{marginBottom:\"2px\"}}key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event)=>{editRoutine(index,event.target.value.trim())}} //Trim white space when input loses focus\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>{editRoutine(index,event.target.value)}}value={exercise} /> \n\t\t\t\t\t\t\t\t\t\t\t\t<button style={{marginLeft:\"10px\"}}onClick={()=>{removeFromRoutine(exercise)}}>Remove</button>\n\t\t\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div style={{marginBottom:\"10px\",display:\"flex\"}}>\n\t\t\t\t\t\t\t\t\t\t<h2 style={{marginBottom:\"0px\",}} >{selectedRoutine.name}</h2>\n\t\t\t\t\t\t\t\t\t\t<button  style={{marginLeft:\"auto\",display:\"inline\"}} onClick={()=>{setIsEditable(!isEditable)}}>{isEditable ? \"Cancel\" : \"Edit\"}</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tselectedRoutine && selectedRoutine.exercises.map((exercise,i)=> \n\t\t\t\t\t\t\t\t\t\t\t<h5  key={i}> \n\t\t\t\t\t\t\t\t\t\t\t\t{exercise }\n\t\t\t\t\t\t\t\t\t\t\t</h5> \n\t\t\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t} \n\t\t</div>\n\n\t)\n\n}\n\nexport default RoutinePage","import React,{useEffect,useState} from \"react\" \nimport {Switch,Route,useHistory} from \"react-router-dom\"\nimport { GoPlusSmall } from \"react-icons/go\"\n\nimport Analysis_T from \"./Analysis_T.js\"\nimport History_T from \"./History_T.js\"\nimport ExerciseSubmission_T from \"./ExerciseSubmission_T\"\nimport ClientsPage from \"./ClientsPage\"\nimport RoutinePage from \"./RoutinePage.js\"\n\nconst TrainerHeadquarters=({user,setUser,setNotification })=>{ \n\tconst history=useHistory()\n\n\tconst [clients, setClients] = useState(null) \n\tconst [routines, setRoutines] = useState(null)\n\n\tuseEffect(()=>{ //set trainer's clients\n\t\tif(user && user.isTrainer){ \n\t\t\tconst storedClients=JSON.parse(window.localStorage.getItem(\"clients\"))\n\t\t\tstoredClients && setClients(storedClients)  \n\t\t\tsetRoutines(JSON.parse(window.localStorage.getItem(\"routines\"))) \n\t\t}\n\t},[user])\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/dailySubmission\">\n\t\t\t\t<ExerciseSubmission_T clients={clients} setClients={setClients} \n\t\t\t\t\tsetNotification={setNotification}/>\n\t\t\t</Route>\n\t\t\t<Route path=\"/history\">\n\t\t\t\t<History_T clients={clients} setClients={setClients} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/clients\">\n\t\t\t\t<ClientsPage user={user}setUser={setUser} clients={clients} \n\t\t\t\t\tsetClients={setClients} routines={routines} setNotification={setNotification}/>\n\t\t\t</Route>\n\t\t\t<Route path=\"/analysis\">\n\t\t\t\t<Analysis_T clients={clients} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/routines\"> \n\t\t\t\t<RoutinePage user={user}setUser={setUser} routines={routines} setRoutines={setRoutines}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/\">\n\t\t\t\t<div className=\"pageContainer\">\n\t\t\t\t\t<div className=\"HQ__menu\">\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/clients\")}}>\n\t\t\t\t\t\t\t<h2>  {/*Everything within HQ__items gets styled in CSS*/}\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/> My Clients </a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/dailySubmission\")}}>\n\t\t\t\t\t\t\t<h2>  {/*Everything within HQ__items gets styled in CSS*/}\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/> Workout Submission </a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/analysis\")}}>\n\t\t\t\t\t\t\t<h2>  \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/> Analysis </a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/history\")}}>\n\t\t\t\t\t\t\t<h2>  \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/> History </a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/routines\")}} > \n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/> My Routines </a>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n\nexport default TrainerHeadquarters ","import React from \"react\"\n\nconst Notification = ({message,color}) => { \n\tif(message){\n\t\treturn(\n\t\t\t<div style={{textAlign:\"center\",zIndex:\"1\",width:\"100vw\",position:\"absolute\", top:\"0\",backgroundColor:color}}> \n\t\t\t\t<h1>{message}</h1>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn(null)\n}\nexport default Notification","import axios from \"axios\"\nconst baseurl = \"/api/users\"\n\nconst register = async credentials => {\n\ttry{\n\t\tconst response = await axios.post(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default {register}\n","import axios from \"axios\"\nconst baseurl = \"/api/login\"\n\nconst login = async credentials => {\n\ttry{\n\t\tconst response = await axios.post(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default { login }\n\n","import tokenService from \"../Services/token\"\nimport LoginService from \"../Services/login\"\n\nexport const login = async(username, password) => {\n\tconst user = await LoginService.login(username, password)\n\ttokenService.setToken(user.token) \n\n\tif (user.isTrainer) { \n\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(user.clients)) \n\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({isTrainer:user.isTrainer,token:user.token, username:user.username})) \n\t\twindow.localStorage.setItem(\"routines\",JSON.stringify(user.routines))\n\t}\n\telse{\n\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({token:user.token, username:user.username, regIsSet:user.regIsSet})) \n\t\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(user.days)) // workout history of user \n\t\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(user.currentRegiment)) //if not, will be object with empty arrays\n\t}\n\treturn user\n}\n\nexport const logout = (setUser)=>{\n\twindow.localStorage.removeItem(\"loggedUser\")\n\twindow.localStorage.removeItem(\"userWorkouts\")\n\twindow.localStorage.removeItem(\"currentRegiment\")\n\twindow.localStorage.removeItem(\"clients\")\n\twindow.localStorage.removeItem(\"routines\")\n\tsetUser(null)\n}\n","import React,{useState,useEffect} from \"react\"\nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\"\n\nimport LoginForm from \"./Components/LoginForm\"\nimport RegisterForm from \"./Components/RegisterForm\"\nimport Banner from \"./Components/Banner\"\nimport LandingPage from \"./Components/LandingPage\"\nimport Headquarters_A from \"./Components/Athlete/Headquarters_A\"\nimport Headquarters_T from \"./Components/Trainer/Headquarters_T\"\nimport Notification from \"./Components/Notification\"\n\nimport registerService from \"./Services/register\"\nimport tokenService from \"./Services/token\"\nimport {login,logout}from \"./Functions/userFunctions\" \n\nfunction App(){ \n\tconst location=useLocation()\n\tconst [backgroundImage,setBackgroundImage] = useState(\"Media/weightLiftingGirl.png\")\n\tconst [notification,setNotification] = useState(null) //Action feedback + Error messages\n\t//will be object e.g. {color:\"red\",message:\"text\"}\n\n\tconst [user, setUser] = useState(null) \t\n\t/*user contains authorization token, username, and bool flag to show if trainer or athlete. \n\tAthletes have 1) currentRegiment obj, showing target exercises for each day of week.\n\t\t\t\t\t\t\t\t2) days array, showing their whole workout history\n\n\tTrainers have 1) clients array\n\t\t\t\t\t\t\t\t2) routines array, to save frequently prescribed workout routines for easy access \n\t */ \n\n\tuseEffect(()=>{ //Turn off notification after 3 sec\n\t\tif(notification){\n\t\t\tsetTimeout(() => { \n\t\t\t\tsetNotification(null)\n\t\t\t}, 3000)\n\t\t} \n\t},[notification])\n\n\tuseEffect(()=>{  //Check to see if user is already logged in\n\t\tconst user = JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\t\tif(user){\n\t\t\tsetUser(user)\n\t\t\ttokenService.setToken(user.token) //token will be set on each render\n\t\t}}\n\t,[]) \n\n\tuseEffect(()=>{  //different background if logged in\n\t\tif (user){ setBackgroundImage(\"Media/weights_dark_flipped.jpeg\") }\n\t\telse { setBackgroundImage(\"Media/weightLiftingGirl.png\") }\n\t}\n\t,[user]) \n\n\treturn ( \n\t\t<div className=\"App\" style={{height:\"100vh\", backgroundImage:`url(${backgroundImage})`,backgroundSize:\"cover\"}}>\n\t\t\t{notification && <Notification color={notification.color} message={notification.message}/>}\n\n\t\t\t{user ? //if user is logged in\n\t\t\t\t<>\n\t\t\t\t\t{user.isTrainer //user is a trainer\n\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t<Banner user={user} logout={()=>{logout(setUser) }}/>  \n\t\t\t\t\t\t\t<Headquarters_T user={user} setUser={setUser} setNotification={setNotification} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: //user is an athlete\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{user.regIsSet \n\t\t\t\t\t\t\t\t?  //User isn't new - allow submissions, performance analysis & workout history view\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Banner user={user} logout={()=>{logout(setUser) }}/>  \n\t\t\t\t\t\t\t\t\t<Headquarters_A  user={user} setUser={setUser} setNotification={setNotification}  />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:  //if user hasn't set a regiment, do that. \n\t\t\t\t\t\t\t\t//TODO fix CSS on trainer side\n\t\t\t\t\t\t\t\t<LandingPage  user={user} setUser={setUser} setNotification={setNotification}/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</> \n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t\t: //if no user, register or login\n\t\t\t\t<TransitionGroup style={{height:\"100%\",display:\"flex\",  justifyItems:\"flex-start\"}}>\n\t\t\t\t\t<CSSTransition\n\t\t\t\t\t\tkey={location}\n\t\t\t\t\t\ttimeout={{ enter: 500, exit: 200 }}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t\t\t<RegisterForm setNotification={setNotification} submitCredentials={registerService.register}/>\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t<LoginForm setNotification={setNotification} submitCredentials={login} setUser={setUser}/> \n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch> \n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</TransitionGroup>\n\t\t\t}\n\t\t</div>\n\t) \n} \n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"bootstrap/dist/js/bootstrap.js\"\nimport {BrowserRouter as Router} from  \"react-router-dom\"\n\n\nReactDOM.render(\n\t<Router>\n\t\t<App /> \n\t</Router>,\n\tdocument.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}
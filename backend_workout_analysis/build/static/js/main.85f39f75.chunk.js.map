{"version":3,"sources":["Components/LoginForm.js","Components/RegisterForm.js","Components/Banner.js","Services/token.js","Services/exercises.js","Components/Athlete/DayGrid.js","Components/Athlete/DaySubmissions.js","Components/Athlete/RegimentForm.js","Components/CheckBox.js","Components/Athlete/DayForm.js","Components/Athlete/OnBoard_A.js","Services/clients.js","Components/Trainer/OnBoard_T.js","Services/name.js","Components/LandingPage.js","Components/TutorialPage.js","Functions/workoutFunctions.js","Components/HistoryWorkout.js","Components/CalendarPicker.js","Components/MenuCard.js","Components/Athlete/History_A.js","Components/StatRow.js","Components/ExerciseBox.js","Components/Athlete/ExerciseSubmission_A.js","Services/password.js","Components/AccountPage.js","Components/AnalysisPlot.js","Components/Athlete/Analysis_A.js","Components/Athlete/Headquarters_A.js","Components/Trainer/DropdownClient.js","Components/Trainer/Analysis_T.js","Components/Trainer/History_T.js","Components/Trainer/ExerciseSubmission_T.js","Components/Trainer/AddClient.js","Components/ProfilePicture.js","Components/Trainer/CollapsableList.js","Components/NotificationChoice.js","Components/Trainer/ClientCard.js","Components/Trainer/ClientsPage.js","Components/Trainer/RoutinePage.js","Components/Trainer/Headquarters_T.js","Components/Notification.js","Services/register.js","Services/login.js","Functions/userFunctions.js","App.js","index.js"],"names":["LoginForm","setNotification","submitCredentials","setUser","useState","username","setUsername","password","setPassword","inputStyle","width","padding","marginBottom","border","borderBottom","style","paddingTop","display","alignItems","onSubmit","event","a","preventDefault","user","color","message","className","value","placeholder","onChange","target","type","height","to","RegisterForm","history","useHistory","push","Banner","logout","position","marginLeft","marginRight","name","paddingLeft","borderLeft","cursor","onClick","Navbar","justifyContent","backgroundColor","Brand","src","Text","token","newToken","baseUrl","getUserWorkouts","config","headers","Authorization","tokenService","axios","get","response","data","sendWorkout","workoutData","post","resetRegiment","put","setRegiment","regiment","patch","addRoutine","routine","setRoutines","routines","DayGrid","day","currentRegiment","setCurrentRegiment","exercise","setExercise","trim","includes","charAt","toUpperCase","slice","console","log","concat","flexDirection","margin","DaySubmissions","map","i","filter","RegimentForm","backButton","submissionVisibility","setVisibility","regimentHasEmptyDay","key","length","finaliseRegiment","exerciseService","returnedRegiment","loggedUser","JSON","parse","window","localStorage","getItem","regIsSet","setItem","stringify","useEffect","Object","entries","Container","keys","item","marginTop","visibility","CheckBox","callback","readOnly","checked","xmlns","viewBox","aria-hidden","focusable","fill","stroke","strokeWidth","d","DayForm","overflow","fontWeight","dayKey","hasAtLeastOne","OnBoardAthlete","location","useLocation","path","addClient","client","updateClient","removeClient","id","OnBoardTrainer","trainer","setTrainer","clients","setClients","validatePassword","currentClient","setCurrentClient","index","clientService","updatedTrainer","removeItem","alignSelf","changeName","LandingPage","setName","OnBoard_A","OnBoard_T","fontSize","textAlign","nameService","TutorialPage","textStyle","imageStyle","maxHeight","maxWidth","overflowY","borderRadius","paddingBottom","getInvalidExercises","exerciseArray","invalidExercises","forEach","reps","sets","getTodaysExercises","Date","getDay","values","exerciseNamesFromWorkouts","workouts","Set","dayObject","exercises","workout","exercisesFromWorkouts","filterExercisesByName","toLowerCase","filterWorkoutsByDate","dates","date","datedAnalysis","exerciseName","interval","parameter","accumulate","timeProperty","total","getTime","toDateString","toLocaleDateString","month","year","filteredWorkouts","workoutObject","weight","uniqueTimes","allTimeAnalysis","HistoryWorkout","workoutDate","workoutMins","getMinutes","getHours","Table","striped","bordered","hover","variant","CalendarPicker","dateRange","setDateRange","newDateRange","showNeighboringMonth","locale","selectRange","MenuCard","header","body","History","filterQuery","setFilterQuery","useDate","setUseDate","setFilteredWorkouts","filterByDate","results","undefined","listStyleType","StatRow","weightColor","cellStyle","checkInput","val","test","replace","ExerciseBox","newWorkout","setNewWorkout","Array","AthleteExerciseSubmission","setWorkouts","daysExercises","uniqueNames","setUniqueNames","removedExercises","setRemovedExercises","selectedExercise","setSelectedExercise","invalidArray","setInvalidArray","submitWorkout","exercisesForSubmission","sentWorkout","userWorkouts","uniqueName","indexInArray","changePassword","credentials","AccountPage","view","setView","currentPassword","setCurrentPassword","newPassword","setNewPassword","newName","setNewName","setValidatePassword","isTrainer","updatedUser","passwordService","AnalysisPlot","analysis","dataKey","dataChart","BarChart","top","right","left","bottom","barSize","XAxis","scale","YAxis","Tooltip","CartesianGrid","Bar","background","AreaChart","Area","AthleteAnalysis","exerciseNameCache","suggestions","setSuggestions","selection","setSelection","analysisType","setAnalysisType","repsAnalysis","setRepsAnalysis","weightAnalysis","setWeightAnalysis","suggestion","Dropdown","Toggle","Menu","Item","AthleteHeadquarters","setDaysExercises","Analysis_A","DropdownClient","selectedClient","setSelectedClient","TrainerAnalysis","setExerciseNameCache","searchQuery","setSearchQuery","days","indexOf","TrainerHistory","TrainerExerciseSubmission","unique","_id","updatedClient","updatedClients","AddClient","submitClient","ProfilePicture","size","radius","font","initials","canvasRef","useRef","ctx","context","current","getContext","canvas","clearRect","fillStyle","textBaseline","beginPath","arc","Math","PI","fillText","ref","CollapsableList","isEditable","addExercise","editExercise","removeExercise","isExpanded","setIsExpanded","listStyle","autoFocus","onBlur","NotificationChoice","yesCallback","noCallback","zIndex","boxShadow","ClientCard","choice","setChoice","clientIndex","setIsEditable","newExercise","currentExercise","updatedDay","_","storedClients","containsDuplicate","fromEntries","minHeight","flexGrow","toggleDay","ClientsPage","setClientIndex","setInitials","profileColors","setProfileColors","split","join","str","hash","charCodeAt","colour","j","toString","substr","stringToColour","justifyItems","Mon","Tue","Wed","Thu","Fri","Sat","Sun","flexWrap","RoutinePage","localRoutines","setLocalRoutines","selectedRoutine","setSelectedRoutine","routineIndex","setRoutineIndex","editRoutine","removeRoutine","updatedRoutines","validatedRoutines","saveRoutines","alignContent","removeFromRoutine","TrainerHeadquarters","ExerciseSubmission_T","History_T","Analysis_T","Notification","register","login","LoginService","App","backgroundImage","setBackgroundImage","notification","setTimeout","backgroundSize","Headquarters_T","Headquarters_A","registerService","ReactDOM","render","document","getElementById"],"mappings":"oQAwCeA,EArCC,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,gBAAgBC,EAA8B,EAA9BA,kBAAmBC,EAAW,EAAXA,QAAW,EAEjCC,mBAAS,IAFwB,mBAExDC,EAFwD,KAE9CC,EAF8C,OAGjCF,mBAAS,IAHwB,mBAGxDG,EAHwD,KAG9CC,EAH8C,KAKzDC,EAAW,CAACC,MAAM,QAAQC,QAAQ,IAAIC,aAAa,OAAQC,OAAO,OAAQC,aAAa,mBAE7F,OACC,sBAAOC,MAAO,CAACC,WAAW,OAAOC,QAAQ,OAAQC,WAAW,UAC3DC,SAAQ,uCAAE,WAAOC,GAAP,eAAAC,EAAA,6DACTD,EAAME,iBADG,SAEQpB,EAAkB,CAACG,WAASE,aAFpC,QAEHgB,EAFG,QAIRpB,EAAQoB,GAGRtB,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,kCAP7B,2CAAF,sDADT,SAWC,sBAAKC,UAAU,gBAAf,UACC,sBAAKA,UAAU,gCAAf,UACC,oBAAIX,MAAQ,CAACH,aAAa,QAASc,UAAU,0BAA7C,oBACA,uBAAOX,MAAON,EAAYkB,MAAOtB,EAAUuB,YAAY,WACtDC,SAAU,SAACT,GAASd,EAAYc,EAAMU,OAAOH,UAC9C,uBAAOI,KAAK,WAAUhB,MAAON,EAAYkB,MAAOpB,EAAUqB,YAAY,WACrEC,SAAU,SAACT,GAASZ,EAAYY,EAAMU,OAAOH,aAE/C,sBAAKD,UAAU,4BAAf,UACC,wBAAQA,UAAU,YAAYX,MAAO,CAACL,MAAM,QAAQsB,OAAO,QAA3D,oBACA,yDAAgC,cAAC,IAAD,CAAMjB,MAAO,CAACS,MAAM,WAAYS,GAAG,YAAnC,0BAChC,+CAAiB,cAAC,IAAD,CAAMlB,MAAO,CAACS,MAAM,WAAYS,GAAG,YAAnC,uBAAjB,gBCOUC,EArCI,SAAC,GAAwC,IAAvCjC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,kBAC/BiC,EAAQC,cAD4C,EAE5BhC,mBAAS,IAFmB,mBAEnDC,EAFmD,KAEzCC,EAFyC,OAG5BF,mBAAS,IAHmB,mBAGnDG,EAHmD,KAGzCC,EAHyC,KAK1D,OACC,sBAAMO,MAAO,CAACC,WAAW,OAAOC,QAAQ,OAAQC,WAAW,UAC1DC,SAAQ,uCAAE,WAAOC,GAAP,SAAAC,EAAA,yDACTD,EAAME,iBACFjB,GAAaE,EAFR,gBAGRN,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,gCAH7B,uCAMMvB,EAAkB,CAACG,WAASE,aANlC,mCAOR4B,EAAQE,KAAK,KACbpC,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,kBAR/B,wBAUJxB,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,4BAVjC,4CAAF,sDADT,SAaC,sBAAKC,UAAU,gBAAf,UACC,sBAAKA,UAAU,gCAAf,UACC,oBAAIX,MAAQ,CAACH,aAAa,QAASc,UAAU,0BAA7C,uBACA,uBAAOA,UAAU,uBAAuBC,MAAOtB,EAAUuB,YAAY,WACpEC,SAAU,SAACT,GAASd,EAAYc,EAAMU,OAAOH,UAC9C,uBAAOI,KAAK,WAAUL,UAAU,uBAAuBC,MAAOpB,EAAUqB,YAAY,WACnFC,SAAU,SAACT,GAASZ,EAAYY,EAAMU,OAAOH,aAE/C,sBAAKD,UAAU,4BAAf,UACC,wBAAQA,UAAU,YAAYX,MAAO,CAACL,MAAM,QAAQsB,OAAO,QAA3D,sBACA,mDAAqB,cAAC,IAAD,CAAMjB,MAAO,CAACS,MAAM,WAAYS,GAAG,IAAnC,kC,SCNXK,EAtBF,SAAC,GAAiB,IAAhBf,EAAe,EAAfA,KAAKgB,EAAU,EAAVA,OACbJ,EAAUC,cAGhB,OAAOb,EAEL,sBAAKR,MAAO,CAACyB,SAAS,QAAQvB,QAAQ,OAAQC,WAAW,SAASc,OAAO,OAAOtB,MAAM,QAAtF,UACC,oBAAIK,MAAO,CAAC0B,WAAW,OAAOC,YAAY,OAAOlB,MAAM,SAAvD,SAAkED,EAAKoB,OACvE,oBAAI5B,MAAO,CAAC6B,YAAY,OAAOpB,MAAM,QAAQqB,WAAW,kBAAkBC,OAAO,WAChFC,QAAS,WAAKR,IAASJ,EAAQE,KAAK,MADrC,SAC4C,8CAK7C,eAACW,EAAA,EAAD,CAAQjC,MAAO,CAACE,QAAQ,OAAQgC,eAAe,SAASC,gBAAgB,UAAW1B,MAAM,SAAzF,UACC,cAACwB,EAAA,EAAOG,MAAR,UAAc,qBAAKpC,MAbN,CAACL,MAAM,KAaiB0C,IAAI,6CACzC,eAACJ,EAAA,EAAOK,KAAR,WAAa,oBAAItC,MAAO,CAACE,QAAQ,UAApB,yBAAgD,oBAAIF,MAAO,CAACS,MAAM,UAAUP,QAAQ,UAApC,oC,wBCpB7DqC,EAAQ,KAQG,EANE,SAAAC,GAChBD,EAAK,iBAAaC,IAKJ,EAFA,kBAAID,GCJbE,EAAU,eAEVC,EAAe,uCAAC,8BAAApC,EAAA,6DACfqC,EAAQ,CACbC,QAAQ,CAACC,cAAcC,MAFH,SAIEC,IAAMC,IAAIP,EAASE,GAJrB,cAIfM,EAJe,yBAKdA,EAASC,MALK,2CAAD,qDAQfC,EAAW,uCAAC,WAAMC,GAAN,iBAAA9C,EAAA,6DACXqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFP,kBAMOC,IAAMM,KAAKZ,EAASW,EAAaT,GANxC,cAMVM,EANU,yBAOTA,EAASC,MAPA,0DAUT,GAVS,yDAAD,sDA+CF,GAACI,cAjCG,uCAAC,8BAAAhD,EAAA,6DACbqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFL,SAIIC,IAAMQ,IAAN,UAAad,EAAb,aAAiC,KAAME,GAJ3C,cAIbM,EAJa,yBAKZA,EAASC,MALG,2CAAD,qDAiCWC,cAAYT,kBAAgBc,YAzBzC,uCAAC,WAAMC,GAAN,iBAAAnD,EAAA,6DACXqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFP,SAIMC,IAAMW,MAAN,UAAejB,EAAf,aAAmCgB,EAAUd,GAJnD,cAIXM,EAJW,yBAKVA,EAASC,MALC,2CAAD,sDAyBqDS,WAjBtD,uCAAG,WAAMC,GAAN,iBAAAtD,EAAA,6DACZqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFN,SAIKC,IAAMM,KAAN,UAAcZ,EAAd,aAAkCmB,EAASjB,GAJhD,cAIZM,EAJY,yBAKXA,EAASC,MALE,2CAAH,sDAiBiEW,YAThE,uCAAC,WAAMC,GAAN,iBAAAxD,EAAA,6DACXqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFP,SAIMC,IAAMQ,IAAN,UAAad,EAAb,aAAiCqB,EAAUnB,GAJjD,cAIXM,EAJW,yBAKVA,EAASC,MALC,2CAAD,uD,QCVFa,EAtCD,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,IAAIC,EAAsC,EAAtCA,gBAAgBC,EAAsB,EAAtBA,mBAAsB,EAG1B7E,mBAAS,IAHiB,mBAGlD8E,EAHkD,KAGzCC,EAHyC,KAKzD,OAEC,sBAAMzD,UAAU,wBAAwBP,SAAU,SAACC,GAASA,EAAME,iBAE9D4D,EAASE,SACRJ,EAAgBD,GAAKM,UACtBH,EAASI,OAAO,GAAGC,cACpBL,EAASM,MAAM,IAAIJ,QACnBK,QAAQC,IAAI,wDAGZT,EAAmB,2BAAID,GAAL,kBAAuBD,EAAKC,EAAgBD,GAAKY,QACjET,EAASI,OAAO,GAAGC,cAAcL,EAASM,MAAM,IAAIJ,WACtDD,EAAY,OAXf,SAeC,sBAAKpE,MAAO,CAACG,WAAW,SAAUD,QAAQ,OAAQ2E,cAAc,UAAhE,UACC,6BAAKb,IACL,uBAAOhE,MAAO,CAACL,MAAM,SAASiB,MAAOuD,EAAUvC,KAAMoC,EAAKnD,YAAY,WAAWC,SAAU,SAACT,GACnE,MAArBA,EAAMU,OAAOH,OACfwD,EAAY/D,EAAMU,OAAOH,UAE3B,wBAAQD,UAAU,YAAYX,MAAO,CAAC8E,OAAO,MAAMlF,QAAQ,MAAMD,MAAM,QAASqB,KAAK,SAArF,uBCMW+D,EAlCM,SAAC,GAA6C,IAA5Cd,EAA2C,EAA3CA,gBAAgBC,EAA2B,EAA3BA,mBAAoBF,EAAO,EAAPA,IAG1D,OACC,qBAAKrD,UAAU,gBAAf,SACC,6BACEsD,EAAgBD,GAAKgB,KAAI,SAACb,EAASc,GAAV,OACzB,qBAA6BjF,MAAO,CAACJ,QAAQ,OAA7C,SACC,sBAAKI,MAAO,CAACE,QAAQ,OAAOC,WAAW,SAAU+B,eAAe,UAAhE,UACC,mBAAGlC,MAAO,CAAC8E,OAAO,IAAInD,YAAY,OAAlC,SACEwC,IAGF,wBAAQxD,UAAU,YAAYX,MAAO,CAAC0B,WAAW,QAASV,KAAK,SAASgB,QAAS,kBAChFkC,EAAmB,2BACdD,GADa,kBAEfD,EAAKC,EAAgBD,GAAKkB,QAAO,SAACtD,GAAD,OACjCA,GAAMuC,SAJV,wBANF,UAAaA,GAAb,OAAwBc,UAHQjB,I,QC6EtBmB,EA5EI,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,WAAW5E,EAAoD,EAApDA,KAAKpB,EAA+C,EAA/CA,QAAQ6E,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,mBAAsB,EAGxC7E,mBAAS,UAH+B,mBAG5EgG,EAH4E,KAGvDC,EAHuD,KAI7ElE,EAAUC,cAEVkE,EAAoB,WACzB,IAAK,IAAMC,KAAOvB,EACjB,GAAGA,EAAgBuB,IAAoC,IAA9BvB,EAAgBuB,GAAKC,OAC7C,OAAO,EAET,OAAO,GAIFC,EAAgB,uCAAC,8BAAApF,EAAA,yDACjBiF,IADiB,gCAEQI,EAAgBnC,YAAYS,GAFpC,OAEf2B,EAFe,OAIfC,EAAWC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eAExD9G,EAAQ,2BAAIoB,GAAL,IAAW2F,UAAS,KAC3BH,OAAOC,aAAaG,QAAQ,kBAAkBN,KAAKO,UAAUT,IAC7DI,OAAOC,aAAaG,QAAQ,aAAaN,KAAKO,UAAL,2BAAmBR,GAAnB,IAA8BM,UAAS,MAChF/E,EAAQE,KAAK,KATQ,2CAAD,qDAwBtB,OAZAgF,qBAAU,WACLC,OAAOC,QAAQvC,GAAiBwB,QACnCrE,EAAQE,KAAK,OAEb,IAEFgF,qBAAU,WACTf,IACGD,EAAc,UACdA,EAAc,aAChB,CAACrB,IAGF,qBAAKtD,UAAU,gBAAf,SACC,eAAC8F,EAAA,EAAD,CAAW9F,UAAU,eAArB,UACC,sBAAKA,UAAU,uDAAf,UACC,+DACA,qBAAKA,UAAU,8BAAf,SAEE4F,OAAOG,KAAKzC,GAAiBe,KAAI,SAAC2B,EAAK1B,GACvC,OAAIhB,EAAgB0C,GAEnB,sBAAahG,UAAU,6BAAvB,UACC,cAAC,EAAD,CAASqD,IAAK2C,EAAM1C,gBAAiBA,EAAiBC,mBAAoBA,IAC1E,cAAC,EAAD,CAA2BF,IAAK2C,EAAMzC,mBAAoBA,EAAmBD,gBAAiBA,GAAzE0C,KAFZ1B,GAFuB,aAUrC,sBAAKjF,MAAO,CAACH,aAAa,MAAM+G,UAAU,QAA1C,UACC,wBAAQjG,UAAU,YACjBX,MAAO,CAAC2B,YAAY,MAAMhC,MAAM,OAAOsB,OAAO,OAAOnB,OAAO,OAC3D+G,WAAWxB,GACZrD,QAAS,WAAK0D,KAHf,kBAOCN,GACF,wBAAQzE,UAAU,YAAYX,MAAO,CAACL,MAAM,OAAOsB,OAAO,QACzDe,QAAS,WAAKZ,EAAQE,KAAK,MAD5B,2BCnDWwF,EApBE,SAAC,GAEjB,IAFkBC,EAEnB,EAFmBA,SAASnG,EAE5B,EAF4BA,MAG3B,OACC,qBAAKD,UAAU,iBAAiBX,MAAO,CAACE,QAAQ,OAAO2E,cAAc,SAAS1E,WAAW,UAAzF,SACC,uBAAOQ,UAAU,WAAjB,SACC,uBAAMA,UAAU,kBAAhB,UACC,uBAAOK,KAAK,WAAWY,KAAK,WAAWoF,UAAU,EAAMpG,MAAOA,EAAOqG,QAASrG,IAC9E,sBAAMD,UAAU,oBAAoBqB,QAAS,WAAK+E,KAAlD,SACC,qBAAKpG,UAAU,gBAAgBuG,MAAM,6BAA6BC,QAAQ,YAAYC,cAAY,OAAOC,UAAU,QAAnH,SACC,sBAAMC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIC,EAAE,iDCyClDC,EA/CD,SAAC,GAAwD,IAAvDxI,EAAsD,EAAtDA,gBAAgB+E,EAAsC,EAAtCA,gBAAgBC,EAAsB,EAAtBA,mBAEzC9C,EAAQC,cASd,OACC,sBAAKrB,MAAO,CAAC2H,SAAS,QAAtB,UACC,cAAC,EAAD,IACA,cAAClB,EAAA,EAAD,UACC,uBAAO9F,UAAU,UAAjB,UACC,oBAAIX,MAAO,CAAC4H,WAAW,QAAvB,oDAEA,qBAAKjH,UAAU,wBAAf,SACE4F,OAAOG,KAAKzC,GAAiBe,KAAI,SAAC2B,EAAK1B,GAAN,OACjC,sBAAKtE,UAAU,kBAAf,UACC,6BAAMgG,IACN,cAAC,EAAD,CAAUI,SAAU,WAlBH,IAACc,EACpB5D,EADoB4D,EAkByBlB,GAhBhDzC,EAAmB,2BAAID,GAAL,kBAAuB4D,EAAQ,QAGlD3D,EAAmB,2BAAID,GAAL,kBAAuB4D,EAAQ,OAaQjH,MAAOqD,EAAgB0C,IAAO,OAF7C1B,QAMvC,wBAAQtE,UAAU,YAAYX,MAAO,CAACL,MAAM,OAAOiH,UAAU,QAC5D5E,QAAS,SAAC3B,GACTA,EAAME,iBACN,IAAIuH,GAAc,EAClB,IAAK,IAAMtC,KAAOvB,EACdA,EAAgBuB,KAClBsC,GAAc,GAEZA,EACH1G,EAAQE,KAAK,6BAGbpC,EAAgB,CAACuB,MAAM,MAAOC,QAAQ,wCAZzC,2BCAUqH,EAtBM,SAAC,GAAmC,IAAlC7I,EAAiC,EAAjCA,gBAAiBsB,EAAgB,EAAhBA,KAAKpB,EAAW,EAAXA,QAEtC4I,EAASC,cAFwC,EAGX5I,mBAAS,IAHE,mBAGhD4E,EAHgD,KAG/BC,EAH+B,KAUvD,OALAoC,qBAAU,WACT,IAAM7C,EAASqC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBACtDhC,EAAmBT,KAClB,IAGD,eAAC,IAAD,CAAQuE,SAAUA,EAAlB,UACC,eAAC,IAAD,CAAOE,KAAK,4BAAZ,cACC,cAAC,EAAD,CAAc9C,YAAY,EAAM5E,KAAMA,EAAMpB,QAASA,EAAS6E,gBAAiBA,EAAiBC,mBAAoBA,IADrH,OAGA,eAAC,IAAD,CAAOgE,KAAK,IAAZ,cACC,cAAC,EAAD,CAAShJ,gBAAiBA,EAAiB+E,gBAAiBA,EAAiBC,mBAAoBA,WCvB/FzB,EAAU,eAyCD,GAAC0F,UAvCD,uCAAC,WAAMC,GAAN,iBAAA9H,EAAA,6DACTqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFT,kBAKSC,IAAMM,KAAKZ,EAAS2F,EAAQzF,GALrC,cAKRM,EALQ,yBAMPA,EAASC,MANF,0DASP,GATO,yDAAD,sDAuCWmF,aA1BR,uCAAC,WAAMD,GAAN,iBAAA9H,EAAA,6DACZqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFN,kBAKMC,IAAMW,MAAMjB,EAAS2F,EAAQzF,GALnC,cAKXM,EALW,yBAMVA,EAASC,MANC,0DASV,GATU,yDAAD,sDA0BqBoF,aAbrB,uCAAC,WAAMC,GAAN,iBAAAjI,EAAA,6DACZqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFN,kBAKMC,IAAMW,MAAN,UAAejB,EAAf,iBAAuC8F,EAAI5F,GALjD,cAKXM,EALW,yBAMVA,EAASC,MANC,0DASV,GATU,yDAAD,uDC8EHsF,EAxGQ,SAAC,GAA+B,IAA9BtJ,EAA6B,EAA7BA,gBAAgBE,EAAa,EAAbA,QAAa,EACzBC,mBAAS,MADgB,mBAC9CoJ,EAD8C,KACrCC,EADqC,OAGzBrJ,mBAAS,IAHgB,mBAG9CsJ,EAH8C,KAGrCC,EAHqC,OAIbvJ,mBAAS,CAACuC,KAAK,GAAGtC,SAAS,GAAGE,SAAS,GAAIqJ,iBAAiB,KAJ/C,mBAI9CC,EAJ8C,KAI/BC,EAJ+B,KAK/C3H,EAAUC,cAEhBiF,qBAAU,WACLmC,GACHzC,OAAOC,aAAaG,QAAQ,UAAUN,KAAKO,UAAUoC,EAAQE,YAE7D,CAACF,IAEH,IAOMN,EAAS,uCAAG,WAAMC,EAAOY,GAAb,eAAA1I,EAAA,sEACY2I,EAAcd,UAAUC,GADpC,QACXc,EADW,SAQhBlD,OAAOC,aAAakD,WAAW,mBAC/BnD,OAAOC,aAAakD,WAAW,gBAC/BT,EAAWQ,GACXN,EAAWD,EAAQzD,QAAO,SAACkD,EAAOnD,GAAR,OAAY+D,GAAO/D,MAC7C/F,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,iCATvCxB,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,wDACrCkI,EAAWD,EAAQzD,QAAO,SAACkD,EAAOnD,GAAR,OAAY+D,GAAO/D,OAJ7B,2CAAH,wDAwBf,OACC,qBAAKtE,UAAU,gBAAgBX,MAAO,CAAC6E,cAAc,UAArD,SACC,eAAC4B,EAAA,EAAD,CAAW9F,UAAU,eAArB,UACC,uBAAMA,UAAU,sDACfX,MAAO,CAACE,QAAQ,QAChBE,SAAU,SAACC,GACVA,EAAME,iBApCNuI,EAAclH,MAAQkH,EAAcxJ,UAAYwJ,EAActJ,UACjEsJ,EAActJ,WAAWsJ,EAAcD,mBACtCD,EAAWD,EAAQ/D,OAAOkE,IAC3BC,EAAiB,CAACnH,KAAK,GAAGtC,SAAS,GAAGE,SAAS,GAAIqJ,iBAAiB,OA8BnE,UAKC,oDALD,IAMC,4FACA,sBAAK7I,MAAO,CACX4G,UAAU,OAAO1G,QAAQ,OAEzBgC,eAAe,UAHhB,UAMC,sBAAKlC,MAAO,CAACE,QAAQ,OAAQ2E,cAAc,UAA3C,UACC,sCACA,uBAAQ7E,MAAO,CAACH,aAAa,OAC5BiB,SAAU,SAACT,GAAU0I,EAAiB,2BAAID,GAAL,IAAmBlH,KAAKvB,EAAMU,OAAOH,UAC1EC,YAAaiI,EAAclH,MAAQ,cACnChB,MAAOkI,EAAclH,OACtB,0CACA,uBAAO5B,MAAO,CAACH,aAAa,QAAQiB,SAAU,SAACT,GAAU0I,EAAiB,2BAAID,GAAL,IAAmBxJ,SAASe,EAAMU,OAAOH,UACjHC,YAAaiI,EAAcxJ,UAAY,kBACvCsB,MAAOkI,EAAcxJ,WACtB,0CACA,uBAAOU,MAAO,CAACH,aAAa,OAC3BiB,SAAU,SAACT,GAAS0I,EAAiB,2BAAID,GAAL,IAAmBtJ,SAASa,EAAMU,OAAOH,UAC7EC,YAAaiI,EAActJ,UAAY,kBACvCoB,MAAOkI,EAActJ,WAEtB,iDACA,uBAAOsB,SAAU,SAACT,GAAU0I,EAAiB,2BAAID,GAAL,IAAmBD,iBAAiBxI,EAAMU,OAAOH,UAC5FC,YAAaiI,EAAcD,kBAAoB,yBAC/CjI,MAAOkI,EAAcD,mBACtB,wBAAQ7H,KAAK,SACZL,UAAU,YAAYX,MAAO,CAACoJ,UAAU,SAASlJ,QAAQ,QAAQ4E,OAAO,OAAOnF,MAAM,OAAQsB,OAAO,QADrG,oBAKD,sBAAKjB,MAAO,CAACE,QAAQ,OAAO2E,cAAc,SAASnD,WAAW,SAA9D,UACC,kDACCiH,EAAQ3D,KAAI,SAACoD,EAAOnD,GAAR,OACZ,sBAAKjF,MAAO,CAACE,QAAQ,OAAO2E,cAAc,SAAS1E,WAAW,UAA9D,UACC,oBAAIH,MAAO,CAAC4G,UAAU,QAAtB,SAAgCwB,EAAOxG,OACvC,wBAAQjB,UAAU,YAAYqB,QAAS,WAAKmG,EAAUC,EAAOnD,IAA7D,wBAF4EA,eAUjF,wBAAQtE,UAAU,YAAYX,MAAO,CAACH,aAAa,OAAOoB,OAAO,OAAOtB,MAAM,QAAQqC,QAAS,WA7D7FyG,IACHrJ,EAAQqJ,GACRrH,EAAQE,KAAK,OA2DZ,wBCtFW,GAAC+H,WAbA,uCAAG,WAAMzH,GAAN,iBAAAtB,EAAA,6DACZqC,EAAS,CACdC,QAAQ,CAACC,cAAcC,MAFN,kBAKMC,IAAMM,KAPf,kBAO6BzB,EAAKe,GAL/B,cAKXM,EALW,yBAMVA,EAASC,MANC,0DASV,GATU,yDAAH,uDC6DDoG,EApDK,SAAC,GAAsC,IAArCpK,EAAoC,EAApCA,gBAAkBsB,EAAkB,EAAlBA,KAAMpB,EAAY,EAAZA,QAAY,EACpCC,mBAAS,MAD2B,mBAClDuC,EADkD,KAC7C2H,EAD6C,KAEnDnI,EAAUC,cAEhB,OACC,qBAAKrB,MAAO,CAAC2H,SAAS,OAAO1G,OAAO,QAApC,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOiH,KAAK,WAAZ,SACC,cAACsB,EAAD,CAAWtK,gBAAiBA,EAAiBsB,KAAI,2BAAMA,GAAN,IAAWoB,SAAOxC,QAASA,MAE7E,cAAC,IAAD,CAAO8I,KAAK,WAAZ,SACC,cAACuB,EAAD,CAAWvK,gBAAiBA,EAAiBE,QAASA,MAEvD,eAAC,IAAD,CAAO8I,KAAK,IAAZ,UACC,cAAC,EAAD,IACA,cAACzB,EAAA,EAAD,UACC,uBAAM9F,UAAU,UAAhB,UACC,oBAAIX,MAAO,CAAC4H,WAAW,QAAvB,4BAEA,uBAAO5H,MAAO,CAAC0J,SAAS,OAAOC,UAAU,SAAS9J,aAAa,QAC9DiB,SAAU,SAACT,GAASkJ,EAAQlJ,EAAMU,OAAOH,UAC1C,oBAAIZ,MAAO,CAAC4H,WAAW,QAAvB,0BAEA,sBAAKjH,UAAU,wBAAf,UACC,wBAAQA,UAAU,YAAYX,MAAQ,CAAC2B,YAAY,OAAOV,OAAO,OAAOtB,MAAM,SAC7EqC,QAAS,SAAC3B,GACTA,EAAME,iBACHqB,IACFgI,EAAYP,WAAW,CAACzH,KAAKA,IAC7BR,EAAQE,KAAK,cALhB,SASC,oBAAItB,MAAO,CAACS,MAAM,SAAlB,yBACD,wBAAQE,UAAU,YAAYX,MAAQ,CAAC2B,YAAY,OAAOV,OAAO,OAAOtB,MAAM,SAC7EqC,QAAS,SAAC3B,GACTA,EAAME,iBACFqB,IACHgI,EAAYP,WAAW,CAACzH,KAAKA,IAC7BR,EAAQE,KAAK,cALhB,SASC,oBAAItB,MAAO,CAACS,MAAM,SAAlB,2CC8BMoJ,EApFI,WAElB,IAAMzI,EAAUC,cAEVyI,EAAU,CAAChF,OAAO,QAClBiF,EAAW,CAACnD,UAAU,OAAO/G,aAAa,OAAOmK,UAAU,MAAMC,SAAS,OAEhF,OACC,sBAAKtJ,UAAU,SACdX,MAAO,CAACkK,UAAU,SAAShK,QAAQ,OAAQ2E,cAAc,SAAU1E,WAAW,SAC7EgK,aAAa,MAAMvD,UAAU,OAAOlF,WAAW,QAC/CC,YAAY,QAAQhC,MAAM,OAAQwC,gBAAgB,SAHpD,UAIC,8BACC,wBAAQH,QAAS,WAAKZ,EAAQE,KAAK,MAAOX,UAAU,YAApD,6BAID,oBAAIX,MAAO,CAAC4G,UAAU,OAAO/G,aAAa,QAA1C,SAAmD,mEACnD,qBAAIG,MAAO8J,EAAX,4EAEI,+DAFJ,yMAKA,oBAAI9J,MAAO,CAAC8E,OAAO,OAAQ6E,UAAU,UAArC,SAAgD,qDAChD,oBAAI3J,MAAO8J,EAAX,uJAGA,qBAAK9J,MAAO+J,EAAY1H,IAAK,8BAE7B,qBAAIrC,MAAO8J,EAAX,oJAEK,+CAFL,QAE8C,gDAF9C,8CAIA,qBAAI9J,MAAO8J,EAAX,yFAEC,uBACA,uBAHD,sLAOA,qBAAK9J,MAAO+J,EAAY1H,IAAK,oCAC7B,oBAAIrC,MAAO8J,EAAX,gRAIA,qBAAK9J,MAAO+J,EAAY1H,IAAK,0BAE7B,oBAAIrC,MAAO,CAAC8E,OAAO,OAAQ6E,UAAU,UAArC,SAAgD,qDAChD,qBAAI3J,MAAO8J,EAAX,2QAGC,uBACA,uBAJD,mRAQC,uBACA,uBATD,iQAaA,qBAAK9J,MAAO+J,EAAY1H,IAAK,yBAC7B,oBAAIrC,MAAO8J,EAAX,sOAIA,qBAAK9J,MAAO+J,EAAY1H,IAAK,0BAC7B,+BACC,uBACA,uBAFD,8HAIC,uBACA,uBALD,qGAQA,qBAAKrC,MAAO+J,EAAY1H,IAAK,yBAC7B,oBAAIrC,MAAO,CAACoK,cAAc,QAA1B,SAAoC,0D,gBC9E1BC,EAAsB,SAACC,GACnC,IAAMC,EAAiB,GAMvB,OALAD,EAAcE,SAAQ,SAACrG,GACjBA,EAASsG,MAAOtG,EAASuG,MAAuB,GAAfvG,EAASuG,MAA0B,GAAfvG,EAASsG,MAClEF,EAAiBjJ,KAAK6C,EAASvC,SAG1B2I,GAGKI,EAAqB,SAAC1G,GAElC,IAAMD,GAAK,IAAI4G,MAAQC,SAIvB,OAHgC,IAAN7G,EACvBuC,OAAOuE,OAAO7G,GAAiB,GAC/BsC,OAAOuE,OAAO7G,GAAiBD,EAAI,IAc1B+G,EAA0B,SAACC,GAGvC,OAFkB,YAAI,IAAIC,IAXQ,SAACD,GACnC,IAAMV,EAAgB,GAKtB,OAJAU,EAAShG,KAAI,SAACkG,GAAD,OAAcA,EAAUC,aACnCX,SAAQ,SAACY,GACTd,EAAchJ,KAAd,MAAAgJ,EAAa,YAASc,OAEjBd,EAMNe,CAAsBL,GAAUhG,KAAI,SAACb,GAAD,OAAYA,EAASvC,WAI9C0J,EAAwB,SAACH,EAAWvJ,GAAZ,OAEpCuJ,EAAUjG,QAAO,SAACf,GAAD,OAChBA,EAASvC,KAAK2J,cAAcjH,SAAS1C,EAAK2J,mBAG/BC,EAAuB,SAACR,EAAUS,GAE9C,OAAOT,GAAYA,EAAS9F,QAAO,SAACkG,GAAD,OAAY,IAAIR,KAAKQ,EAAQM,OAAQD,EAAM,IAAM,IAAIb,KAAKQ,EAAQM,OAAOD,EAAM,OActGE,EAAc,SAACX,EAASY,EAAaC,EAASC,GAK1D,GAAc,UAAXD,GAAmC,YAAbA,EAAzB,CAIA,IAKIE,EAsBAC,EACAC,EA5BEC,EAAuB,UAAbL,EACb,SAAC1H,GAAD,OAAe,IAAIyG,KAAMzG,EAASuH,MAAMS,gBACxC,SAAChI,GAAD,OAAe,IAAIyG,KAAMzG,EAASuH,MAAMU,mBAAmB,UAAU,CAACC,MAAM,OAAOC,KAAK,aAErFC,EAAiB,GAGvB,OAAOT,GACP,IAAK,OACJC,EAAW,SAACS,GAAD,OAAkBA,EAAcrI,SAASuG,KAAK8B,EAAcrI,SAASsG,MAChFO,EAASR,SAAQ,SAACY,GACHA,EAAQD,UAAUjG,QAAO,SAACf,GAAD,OAAYA,EAASvC,MAAMgK,KAC1DpB,SAAQ,SAAC7D,GAAQ4F,EAAiBjL,KAAK,CAACoK,KAAKN,EAAQM,KAAKvH,SAASwC,UAE5E,MACD,IAAK,SACJoF,EAAW,SAACS,GAAD,OAAkBA,EAAcrI,SAASsI,OAAOD,EAAcrI,SAASuG,KAAK8B,EAAcrI,SAASsG,MAC9GO,EAASR,SAAQ,SAACY,GACHA,EAAQD,UAAUjG,QAAO,SAACf,GAAD,OAAYA,EAASsI,QAAUtI,EAASvC,MAAMgK,KAC7EpB,SAAQ,SAAC7D,GAAQ4F,EAAiBjL,KAAK,CAACoK,KAAKN,EAAQM,KAAKvH,SAASwC,UAE5E,MACD,QACCjC,QAAQC,IAAI,+CAEb,GAA4B,GAAzB4H,EAAiB9G,OAAW,OAAO,KAItC,IAAMiH,EAAY,GAElB,OAA6B,GAAzBH,EAAiB9G,QACpBwG,EAAMF,EAAWQ,EAAiB,IAE3B,CAAC,CAACP,aADTA,EAAeE,EAAQK,EAAiB,IACjBN,YAGxBM,EAAiB/B,SAAQ,SAACY,EAAQnG,GAC1B,IAAJA,GACF+G,EAAeE,EAAQd,GACvBa,EAAMF,EAAWX,IAGbY,IAAiBE,EAAQd,GACxBnG,IAAIsH,EAAiB9G,OAAO,EAC/BwG,GAAOF,EAAWX,IAGlBa,GAAOF,EAAWX,GAClBsB,EAAYpL,KAAK,CAAC0K,eAAaC,YAIhCS,EAAYpL,KAAK,CAAC0K,eAAcC,UAChCD,EAAaE,EAAQd,GACrBa,EAAMF,EAAWX,OAGbsB,GA7DNhI,QAAQC,IAAI,wBAgEDgI,EAAgB,SAAC3B,EAASY,EAAaE,GACnD,IAAMS,EAAiB,GACnBN,EAAM,EAEV,OAAOH,GACP,IAAK,OACJd,EAASR,SAAQ,SAACY,GACHA,EAAQD,UAAUjG,QAAO,SAACf,GAAD,OAAYA,EAASvC,MAAMgK,KAC1DpB,SAAQ,SAACrG,GAAYoI,EAAiBjL,KAAK,CAACoK,KAAKN,EAAQM,KAAKvH,mBAGvEoI,EAAiB/B,SAAQ,SAACY,GACzBa,GAAOb,EAAQjH,SAASsG,KAAKW,EAAQjH,SAASuG,QAE/C,MAED,IAAK,SACJM,EAASR,SAAQ,SAACY,GACHA,EAAQD,UAAUjG,QAAO,SAACf,GAAD,OAAaA,EAASsI,QAAUtI,EAASvC,MAAMgK,KAC9EpB,SAAQ,SAACrG,GAAYoI,EAAiBjL,KAAK,CAACoK,KAAKN,EAAQM,KAAKvH,mBAGvEoI,EAAiB/B,SAAQ,SAACY,GACzBa,GAAOb,EAAQjH,SAASsI,OAAOrB,EAAQjH,SAASsG,KAAKW,EAAQjH,SAASuG,QAEvE,MACD,QACChG,QAAQC,IAAI,kCAGb,OAAY,IAARsH,EAAkB,KACf,CAAC,CAACD,aAAa,QAASC,MAAMA,GAAO,Q,iBCxH9BW,EAnCQ,SAAC,GAAe,IAAdxB,EAAa,EAAbA,QAGxB,GAAGA,EAAQ,CACV,IAAMyB,EAAY,IAAIjC,KAAKQ,EAAQM,MAC7BoB,EAAaD,EAAYE,aAAe,GAC3C,IAAIF,EAAYE,aAChBF,EAAYE,aACf,OACC,qCACC,oBAAI/M,MAAO,CAACmC,gBAAgB,GAAG1B,MAAM,QAAQb,QAAQ,OAAOuK,aAAa,OACxEvD,UAAU,QADX,SACqBiG,EAAYV,eAAgB,KAC3CU,EAAYG,WAAY,IACxBF,IACN,cAACG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,SACC,kCACC,qBAAIrN,MAAO,CAACmC,gBAAgB,SAA5B,UACC,oBAAIxB,UAAU,QAAd,SAAsB,4CACtB,oBAAIA,UAAU,QAAd,SAAsB,+CACtB,oBAAIA,UAAU,QAAd,SAAsB,wCACtB,oBAAIA,UAAU,QAAd,SAAsB,6CAEtByK,EAAQD,UAAUnG,KAAI,SAACb,EAAS6E,GAAV,OACtB,+BACC,oBAAIrI,UAAU,QAAd,SAAsB,oBAAIX,MAAO,CAACS,MAAM,SAAlB,SAA6B0D,EAASvC,SAC5D,oBAAIjB,UAAU,QAAd,SAAsB,oBAAIX,MAAO,CAACS,MAAM,SAAlB,SAA6B0D,EAASsG,SAC5D,oBAAI9J,UAAU,QAAd,SAAsB,oBAAIX,MAAO,CAACS,MAAM,SAAlB,SAA6B0D,EAASuG,SAC5D,oBAAI/J,UAAU,QAAd,SAAsB,oBAAIX,MAAO,CAACS,MAAM,SAAlB,SAA6B0D,EAASsI,QAAU,QAJ9DzD,gB,SCJDsE,I,OAjBQ,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,UAAUC,EAAqC,EAArCA,aAAcxC,EAAuB,EAAvBA,SAASjE,EAAc,EAAdA,SAOzD,OACC,cAAC,IAAD,CACCjG,SAPiB,SAAC2M,GACnBD,EAAaC,GACb1G,EAASiE,EAASyC,IAMjB7M,MAAO2M,EACPG,sBAAsB,EACtBC,OAAQ,QACRC,aAAa,M,UCIDC,GAlBE,SAAC,GAA8B,IAA7B9G,EAA4B,EAA5BA,SAAU+G,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAC9B3M,EAAQC,cACd,OACC,sBAAKV,UAAU,WAAf,UACC,qBAAIX,MAAO,CAACH,aAAa,QAAzB,UACC,mBAAGmC,QAAS,WACXZ,EAAQE,KAAK,KACbyF,GAAYA,KAFb,SAIC,cAAC,KAAD,CAAgB/G,MAAO,CAAC+B,OAAO,eAE/B+L,OAEDC,QC6EWC,GArFD,SAAC,GAAc,IAAbhD,EAAY,EAAZA,SAAY,EACW3L,mBAAS,IADpB,mBACpB4O,EADoB,KACPC,EADO,OAEA7O,oBAAS,GAFT,mBAEpB8O,EAFoB,KAEZC,EAFY,OAGI/O,mBAAS,IAAIuL,MAHjB,mBAGpB2C,EAHoB,KAGVC,EAHU,OAKkBnO,mBAAS2L,GAL3B,mBAKpBuB,EALoB,KAKH8B,EALG,KAOrBC,EAAa,SAACtD,EAASuC,GAC5B,GAAGY,EAAQ,CACV,IAAMI,EAAQ,GACd/C,EAAqBR,EAASuC,GAAW/C,SAAQ,SAACY,GAC7CE,EAAsBF,EAAQD,UAAU8C,GAAaxI,OAAO,GAC/D8I,EAAQjN,KAAK8J,MAEfiD,EAAoBE,KAkBtB,GAfAjI,qBAAU,WACL6H,EACHG,EAAatD,EAASuC,GAGtBvC,GACAqD,EACCrD,EAAShG,KAAI,SAACoG,GAEb,GAAmB,IADNE,EAAsBF,EAAQD,UAAU8C,GAC3CxI,OAAY,OAAO2F,KAE5BlG,QAAO,SAACtE,GAAD,YAAgB4N,GAAP5N,QAEnB,CAACqN,EAAYE,IAEXnD,GAA+B,IAAnBA,EAASvF,OAAa,OACrC,qBAAK9E,UAAU,gBAAf,SACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,cAAcC,KAAM,kBACzC,wFA2BH,OACC,mCACC,sBAAKpN,UAAU,gBAAf,UACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,cAAcC,KArB5B,kBACV,sBAAK/N,MAAO,CAACiB,OAAO,OAAOf,QAAQ,OAAO2E,cAAc,UAAxD,UACC,yDACA,sBAAK7E,MAAO,CAACE,QAAQ,QAArB,UACC,cAAC,IAAD,CAAUF,MAAO,CAAC2B,YAAY,SAC9B,uBAAOhB,UAAU,SAASE,YAAY,sBAAsBC,SAAU,SAACT,GACtE6N,EAAe7N,EAAMU,OAAOH,aAE9B,qBAAKZ,MAAO,CAACoJ,UAAU,aAAaxC,UAAU,OAAO/G,aAAa,QAAlE,SACC,sBAAKG,MAAO,CAACE,QAAQ,OAAQ2E,cAAc,SAAS1E,WAAW,SAAS2E,OAAO,OAA/E,UACC,mBAAG9E,MAAO,CAAC8E,OAAO,MAAM5E,QAAQ,SAAhC,4BACA,cAAC,EAAD,CAAU6G,SAAU,WAAKqH,GAAYD,IAAWvN,MAAOuN,SAGzD,cAAC,GAAD,CAAgBZ,UAAWA,EAAWC,aAAcA,EAAcxC,SAAUA,EAAUjE,SAAUuH,UAQ7F/B,GAAoBA,EAAiB9G,OAAO,GAC9C,qBAAK9E,UAAU,qBAAf,SACC,qBAAKX,MAAO,CAACE,QAAQ,SAArB,SACC,oBAAIS,UAAU,gBACbX,MAAO,CAACE,QAAQ,OAAO2E,cAAc,iBAAiB4J,cAAc,QADrE,SAEElC,EAAiBvH,KAAI,SAACoG,EAAQpC,GAAT,OACrB,6BACC,cAAC,EAAD,CAAgBoC,QAASA,KADjBpC,kBC1CF0F,GAtCD,SAAC,GAA0B,IAAzBvK,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,YAElBuK,EAAcxK,EAASsI,OAAS,UAAY,OAC5CmC,EAAU,CAACjP,MAAM,OAAO+B,WAAW,QAEnCmN,EAAW,SAACC,GAAD,MAAS,WAAWC,KAAKD,IAI1C,OACC,sBAAK9O,MAAO,CAACoK,cAAc,OAAOxD,UAAU,OAAO1G,QAAQ,QAA3D,UACC,wBAAQS,UAAU,YAAYX,MAAO,CAAC2B,YAAY,MAAO9B,aAAa,OAAOY,MAAMkO,GAClF3M,QAAS,WAAKoC,EAAY,2BAAID,GAAL,IAAesI,OACrCtI,EAASsI,OAAS,KAAO,MAF7B,gBADD,IAIC,sBAAKzM,MAAO4O,EAAZ,UACC,6CACA,uBAAOjO,UAAU,iBAAiBC,MAASuD,EAAQ,MAAU,GAAIrD,SAAU,SAACT,GAC3EwO,EAAWxO,EAAMU,OAAOH,QAAUwD,EAAY,2BAAID,GAAL,kBAAgB,OAAQ9D,EAAMU,OAAOH,MAAMoO,QAAQ,MAAM,UAHxG,QAKA,sBAAKhP,MAAO4O,EAAZ,UACC,sCACA,uBAAOjO,UAAU,iBAAiBC,MAASuD,EAAQ,MAAU,GAAIrD,SAAU,SAACT,GAC3EwO,EAAWxO,EAAMU,OAAOH,QAAUwD,EAAY,2BAAID,GAAL,kBAAgB,OAAQ9D,EAAMU,OAAOH,MAAMoO,QAAQ,MAAM,aAGtF,MAAjB7K,EAASsI,QACT,sBAAKzM,MAAO4O,EAAZ,UACC,wCACA,uBAAOjO,UAAU,iBAAiBC,MAA4B,GAAnBuD,EAAQ,OAAerD,SAAU,SAACT,GAC5EwO,EAAWxO,EAAMU,OAAOH,QACxBwD,EAAY,2BAAID,GAAL,kBAAgB,SAAU9D,EAAMU,OAAOH,MAAMoO,QAAQ,MAAM,UAJxE,W,UC0BWC,GAjDG,SAAC,GAA8C,IAA7C3E,EAA4C,EAA5CA,cAAe4E,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAIxCvD,EAAatB,EAAc,GAAG1I,KAEpC,OACC,sBAAKjB,UAAU,kBAAf,UACC,uCACA,sBAAKX,MAAO,CAACH,aAAa,MAAMK,QAAQ,QAAxC,UACC,qBAAIF,MAAO,CAACE,QAAQ,SAASO,MAAM,SAAnC,UAA8CmL,EAA9C,OACA,wBAAQjL,UAAU,YAAYX,MAAO,CAAC0B,WAAW,QAASM,QAAS,WAAKmN,EACvED,EAAWlK,KAAI,SAACoK,GAAS,OAAOxD,IAAewD,EAAM,GAAGxN,KACrDwN,EAAMxK,OAAO,CAAChD,KAAKgK,EAAanB,KAAK,KAAKC,KAAK,KAAK+B,OAAO,OAC3D2C,OAHJ,wBAOD,8BACE9E,EAActF,KAAI,SAACb,EAASc,GAAV,OAClB,sBAAKjF,MAAO,CAACE,QAAQ,QAArB,cACC,cAAC,GAAD,CAASiE,SAAUA,EAAUC,YAAa,SAACD,GAC1CgL,EACCD,EAAWlK,KAAI,SAACoK,GAAS,OAAOxD,IAAewD,EAAM,GAAGxN,KACrD0I,EAActF,KAAI,SAAC2B,EAAKqC,GACzB,OAAI/D,IAAI+D,EACA7E,EAEDwC,KAENyI,SAEJ9E,EAAc7E,OAAO,GACrB,mBACCzD,QAAS,WAAKmN,EAAcD,EAAWlK,KAAI,SAAC2B,GAAD,OAC1CiF,IAAiBjF,EAAK,GAAG/E,KACtB0I,EAAcpF,QAAO,SAACyB,EAAKqC,GAAN,OAAeA,GAAO/D,KAC3C0B,OAJL,SAQC,cAAC,KAAD,CAAgB3G,MAAO,CAAC+B,OAAO,iBArBlC,UAAqCoC,GAArC,OAAgDc,SA0BlD,qBAAKjF,MAAO,CAACJ,QAAQ,OAAQe,UAAU,iBC+E3B0O,GAxHiB,SAAC,GAAgD,IAA/CnQ,EAA8C,EAA9CA,gBAAgBoQ,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,cAExDnO,EAAQC,cACd,IAAKkO,EACJ,OACC,qBAAK5O,UAAU,gBAAf,SACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,gBAAgBC,KAAM,kBAAK,+DAN2B,MAY5C1O,mBAAS,IAZmC,mBAYxEmQ,EAZwE,KAY5DC,EAZ4D,OAc7CpQ,mBAAS,IAdoC,mBAcxE6P,EAdwE,KAc5DC,EAd4D,OAejC9P,mBAAS,IAfwB,mBAexEqQ,EAfwE,KAetDC,EAfsD,OAgBjCtQ,mBAAS,MAhBwB,mBAgBxEuQ,EAhBwE,KAgBtDC,EAhBsD,OAiB1CxQ,mBAAS,IAjBiC,mBAiBxEyQ,EAjBwE,KAiB3DC,EAjB2D,KAoB/EzJ,qBAAU,WACT6I,EAAeI,EAAcvK,KAAI,SAAC4G,GAAD,MAAkB,CAAC,CAAChK,KAAKgK,EAAanB,KAAK,KAAKC,KAAK,WACtF+E,EAAe,YAAK,IAAIxE,IAAIsE,OAE5B,CAACA,IAEFjJ,qBAAU,WACTmJ,EAAe,YAAK,IAAIxE,IAAIsE,OAC3B,IAEF,IAAMS,EAAa,uCAAC,kCAAA1P,EAAA,yDACb2P,EAAuB,GAC7Bf,EAAW1E,SAAQ,SAACF,GACnBA,EAAcE,SAAQ,SAACrG,GAAY8L,EAAuB3O,KAAK6C,YAG1DoG,EAAiBF,EAAoB4F,IACtBxK,OAAO,GAPT,gBAQlBsK,EAAgBxF,GAChBrL,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,0EATnB,4BAaduP,EAAuBxK,OAAO,GAbhB,kCAcOE,EAAgBxC,YAAY,CAACgI,UAAU8E,IAd9C,SAcXC,EAdW,SAgBVC,EAAerK,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,iBAC5DF,OAAOC,aAAaG,QAAQ,eAAeN,KAAKO,UAAU8J,EAAavL,OAAOsL,KAC9EZ,EAAYxJ,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBACnDhH,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,kCACvCU,EAAQE,KAAK,MAGbpC,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,4BAvBrB,wBA2BjBxB,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,oDA3BpB,4CAAD,qDAyEnB,OACC,sBAAKC,UAAU,gBAAf,UACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,gBAAgBC,KA5C7B,kBACV,cADgB,CAChB,sBACEyB,EAAYxK,KAAI,SAACoL,EAAWnL,GAAZ,OAChB,cADqC,CACrC,OAAKtE,UAAU,sBAAsBX,MAAO,CAC3CmC,gBAAgB2N,EAAaxL,SAAS8L,GACnC,OACA,SAHJ,UAKC,mBAAGzP,UAAU,iBAAiBqB,QAAS,WAAK6N,EAAoBO,IAAhE,SAA+EA,IAC/E,mBAAGpQ,MAAO,CAAC+B,OAAO,WACjBC,QAAS,WACR2N,EAAoBD,EAAiB9K,OAAOwL,IAC5CL,EAAgBD,EAAa5K,QAAO,SAACf,GAAD,OAAYA,GAAUiM,MAC1DjB,EAAcD,EAAWhK,QAAO,SAACoF,GAAD,OAAkBA,EAAc,GAAG1I,OAAOwO,MAC1EX,EAAeD,EAAYtK,QAAO,SAACtD,GAAD,OAASwO,IAAaxO,OAL1D,SAOC,cAAC,IAAD,CAAiB5B,MAAO,CAAC0B,WAAW,OAAOC,YAAY,cAbzD,UAIYyO,GAJZ,OAIyBnL,OAcxByK,EAAiBjK,OAAO,GACzB,oBAAIzF,MAAO,CAAC4G,UAAU,OAAO+C,UAAU,UAAvC,qBACC+F,EAAiB1K,KAAI,SAACb,GACvB,OACC,qBAAKxD,UAAU,8BAAf,SACC,mBAAkBA,UAAU,iBAC3BqB,QAAS,WACR2N,EAAoBD,EAAiBxK,QAAO,SAACtD,GAAD,OAASA,GAAMuC,MAC3DgL,EAAcD,EAAWtK,OAAO,CAAC,CAAC,CAAChD,KAAKuC,EAASsG,KAAK,KAAKC,KAAK,KAAK+B,OAAO,UAC5EgD,EAAeD,EAAY5K,OAAQT,KAJrC,SAMEA,GANMA,IADyCA,MAYpD,wBAAQxD,UAAU,YAAWX,MAAO,CAAC4G,UAAU,QAAS5E,QAAS,kBAChEgO,EAAcd,IADf,0BASCA,EAAWlK,KAAI,SAACsF,EAAcrF,GAC9B,GAAIqF,EAAc,GAAG1I,OAAOgO,EAC5B,OACC,qBAAKjP,UAAU,oBAAf,SACC,cAAC,GAAD,CAAc2J,cAAeA,EAAe4E,WAAYA,EAAYC,cAAeA,EAAekB,aAAcpL,KADzEA,UC1G9B,IAACqL,eAVI,uCAAG,WAAMC,GAAN,eAAAjQ,EAAA,+EAEEyC,IAAMW,MAJf,sBAI8B6M,GAFvB,cAEftN,EAFe,yBAGdA,EAASC,MAHK,0DAMd,GANc,yDAAH,uDCgILsN,GA3HK,SAAC,GAAyE,IAAvEtR,EAAsE,EAAtEA,gBAAgB+E,EAAsD,EAAtDA,gBAAgBC,EAAsC,EAAtCA,mBAAoB1D,EAAkB,EAAlBA,KAAKpB,EAAa,EAAbA,QAAa,EAGrEC,mBAAS,IAH4D,mBAGrFoR,EAHqF,KAGhFC,EAHgF,OAI/CrR,mBAAS,IAJsC,mBAIrFsR,EAJqF,KAIrEC,EAJqE,OAMvDvR,mBAAS,IAN8C,mBAMrFwR,EANqF,KAMzEC,EANyE,OAO/DzR,mBAAS,IAPsD,mBAOrF0R,EAPqF,KAO7EC,EAP6E,OAQ7C3R,mBAAS,IARoC,mBAQrFwJ,EARqF,KAQpEoI,EARoE,KAStF7P,EAAUC,cAEhB,OACC,sBAAKV,UAAU,gBAAf,eACC,cAAC,GAAD,CAAWoG,SAAU,YAAMvG,EAAK0Q,WAAahN,EAAmB4B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,sBAElG4H,OAAQ,iBAAI,cAAaC,KAAM,kBACnC,sCACIvN,EAAK0Q,WACT,qCACC,mBAAGvQ,UAAU,oBAAmBqB,QAAS,WAAK0O,EAAQ,UAAtD,mCAIA,mBAAI/P,UAAU,oBAAmBqB,QAAS,WAAK0O,EAAQ,SAAvD,qCAMA,oBAAG/P,UAAU,oBAAoBqB,QAAS,WAAK0O,EAAQ,SAAvD,gCAIA,oBAAG/P,UAAU,oBAAoBqB,QAAS,WAAK0O,EAAQ,aAAvD,0CAODD,GACA,sBAAK9P,UAAU,qBAAqBX,MAAO,CAACE,QAAQ,QAApD,UACS,UAAPuQ,GACA,sBAAKzQ,MAAO,CAACE,QAAQ,OAAQ2E,cAAc,SAAS1E,WAAW,SAASyG,UAAU,QAAlF,UACC,sFACA,qBAAI5G,MAAO,CAAC4G,UAAU,QAAtB,qFACC,uBADD,kGAIA,wBAAQjG,UAAU,YAAYX,MAAO,CAACL,MAAM,OAAOiH,UAAU,QAAQ5E,QAAO,sBAAG,4BAAA1B,EAAA,sEACpDqF,EAAgBrC,gBADoC,OACxE6N,EADwE,OAE9ElL,aAAaG,QAAQ,kBAAmBN,KAAKO,UAAU8K,EAAYlN,kBACnE7E,EAAQ+R,GACR/P,EAAQE,KAAK,KAJiE,2CAA/E,oBAOM,SAAPmP,GACA,cAAC,EAAD,CAAejQ,KAAMA,EAAMpB,QAASA,EACnC6E,gBAAiBA,EAAiBC,mBAAoBA,IAEhD,SAAPuM,GACA,uBACCrQ,SAAQ,uCAAE,WAAMC,GAAN,eAAAC,EAAA,6DACTD,EAAME,iBADG,SAEiBqJ,EAAYP,WAAW,CAACzH,KAAKmP,IAF9C,QAEHI,EAFG,SAIR/R,EAAQ+R,GACRjS,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,gCAAD,OAAiCyQ,EAAYvP,KAA7C,OACtCoP,EAAW,KAGX9R,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,kCAT7B,2CAAF,sDAaRV,MAAO,CAAC4G,UAAU,QAdnB,UAeC,kDACA,uBAAOhG,MAAOmQ,EAASjQ,SAAU,SAACT,GAAS2Q,EAAW3Q,EAAMU,OAAOH,UACnE,wBAAQD,UAAU,YAAYK,KAAK,SAAShB,MAAO,CAAC0B,WAAW,OAA/D,wBAGM,aAAP+O,GACA,uBACCzQ,MAAO,CAAC4G,UAAU,OAAOzG,WAAW,SAASR,MAAM,OAAOO,QAAQ,OAAO2E,cAAc,UACvFzE,SAAQ,uCAAE,WAAMC,GAAN,eAAAC,EAAA,yDACTD,EAAME,iBACFsQ,IAAchI,EAFT,gCAGkBuI,GACxBd,eAAe,CAAChR,SAASkB,EAAKlB,SAASqR,kBAAgBE,gBAJjD,QAGFM,EAHE,SAMP/R,EAAQ+R,GACRjS,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,mCAGvCxB,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,0CAV9B,2CAAF,sDAFT,UAgBC,gCACC,kDACA,uBAAOV,MAAO,CAACH,aAAa,QAAQmB,KAAK,WAAWJ,MAAO+P,EAAiB7P,SAAU,SAACT,GACtFuQ,EAAmBvQ,EAAMU,OAAOH,QAAQC,YAAY,wBAEtD,gCACC,8CACA,uBAAOb,MAAO,CAACH,aAAa,QAAQmB,KAAK,WAAWJ,MAAOiI,EAAkB/H,SAAU,SAACT,GACvF4Q,EAAoB5Q,EAAMU,OAAOH,QAAQC,YAAY,oBAEvD,gCACC,qDACA,uBAAOb,MAAO,CAACH,aAAa,QAAQmB,KAAK,WAAWJ,MAAOiQ,EAAa/P,SAAU,SAACT,GAClFyQ,EAAezQ,EAAMU,OAAOH,QAAQC,YAAY,uBAElD,wBAAQF,UAAU,YAAWX,MAAO,CAAC4G,UAAU,QAAS5F,KAAK,SAA7D,0C,wFClEQqQ,GApDI,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAExBC,EACY,GAAjBF,EAAS7L,OAER,mCACC,eAACgM,GAAA,EAAD,CACC9R,MAAO,IACPsB,OAAQ,IACRiC,KAAMoO,EACNxM,OAAQ,CAAE4M,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,IAC/CC,QAAS,GALV,UAOC,cAACC,GAAA,EAAD,CAAOR,QAAQ,QAAQS,MAAM,QAAQpS,QAAS,CAAEgS,KAAM,GAAID,MAAO,MACjE,cAACM,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAKb,QAASA,EAAShK,OAAO,SAASD,KAAK,UAAU+K,WAAY,CAAE/K,KAAM,eAI5E,mCACC,eAACgL,GAAA,EAAD,CACC3S,MAAO,IACPsB,OAAQ,IACRiC,KAAMoO,EACNxM,OAAQ,CAAE4M,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,IAJhD,UAMC,cAACM,GAAA,EAAD,IACA,cAACJ,GAAA,EAAD,CAAOR,QAAQ,iBACf,cAACU,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACK,GAAA,EAAD,CACCvR,KAAK,UACLuQ,QAASA,EACThK,OAAO,UACPD,KAAK,iBAOV,OAAGgK,EAEDE,EAIK,MC4COgB,GAxFO,SAAC,GAAc,IAAbxH,EAAY,EAAZA,SAGjByH,EAAkBzH,GAAYD,EAA0BC,GAH3B,EAKA3L,mBAAS,IALT,mBAK5BqT,EAL4B,KAKhBC,EALgB,OAMJtT,mBAAS,MANL,mBAM5BuT,EAN4B,KAMlBC,EANkB,OAOExT,mBAAS,MAPX,mBAO5ByT,EAP4B,KAOfC,EAPe,OASE1T,mBAAS,MATX,mBAS5B2T,EAT4B,KASfC,EATe,OAUM5T,mBAAS,MAVf,mBAU5B6T,EAV4B,KAUbC,EAVa,KA+BnC,GAnBA7M,qBAAU,WACT,GAAG0E,EACF,OAAO8H,GACP,IAAK,QACJK,EAAkBxH,EAAcX,EAAS4H,GAAWF,EAAY,GAAG,QAAQ,WAC3EO,EAAgBtH,EAAcX,EAAS4H,GAAWF,EAAY,GAAG,QAAQ,SACzE,MACD,IAAK,UACJS,EAAkBxH,EAAcX,EAAS4H,GAAWF,EAAY,GAAG,UAAU,WAC7EO,EAAgBtH,EAAcX,EAAS4H,GAAWF,EAAY,GAAG,UAAU,SAC3E,MACD,QACCS,EAAkBxG,EAAgB3B,EAAS4H,GAAWF,EAAY,GAAG,WACrEO,EAAgBtG,EAAgB3B,EAAS4H,GAAWF,EAAY,GAAG,YAIpE,CAACE,EAAWE,IAEV9H,GAA8B,IAAlBA,EAASvF,OAAY,OACpC,qBAAK9E,UAAU,gBAAf,SACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,YAAYC,KAAM,kBACvC,wFAmCH,OACC,sBAAKpN,UAAU,gBAAf,UACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,WAAWC,KA9BxB,kBACV,qCACC,gCACC,cAAC,IAAD,CAAU/N,MAAO,CAAC2B,YAAY,SAC9B,uBAAOhB,UAAU,SAASE,YAAY,sBAAsBC,SAAU,SAACT,GACtEsS,EAAeF,EAAkBvN,QAAO,SAACtD,GAAD,OACvCA,EAAK2J,cAAcjH,SAASjE,EAAMU,OAAOH,MAAM2K,yBAGjDmH,EAAYjN,OAAO,EAChB,qBAAI9E,UAAU,iBAAd,UAAgC+R,EAAY1N,KAAI,SAACoO,EAAWpK,GAAZ,OACjD,sBAAKrI,UAAU,mBAAf,UACA,6BAAKyS,IACL,eAACC,GAAA,EAAD,WACC,cAACA,GAAA,EAASC,OAAV,sBAGA,eAACD,GAAA,EAASE,KAAV,WACC,cAACF,GAAA,EAASG,KAAV,CAAexR,QAAS,WAAK+Q,EAAgB,SAASF,EAAaH,EAAY1J,KAA/E,oBACA,cAACqK,GAAA,EAASG,KAAV,CAAexR,QAAS,WAAK+Q,EAAgB,WAAWF,EAAaH,EAAY1J,KAAjF,sBACA,cAACqK,GAAA,EAASG,KAAV,CAAexR,QAAS,WAAK+Q,EAAgB,YAAYF,EAAaH,EAAY1J,KAAlF,4BAPF,UAAmBA,EAAnB,aAFuCA,MADtC,OAeA,qEAMFgK,GAAgBJ,GAChB,sBAAKjS,UAAU,sBAAf,UACC,oBAAIX,MAAO,CAACH,aAAa,QAAzB,SAAmCiT,IACnC,mDACA,cAAC,GAAD,CAAcxB,SAAU0B,EAAczB,QAAQ,UAC5C2B,GACD,qCACC,qDACA,cAAC,GAAD,CAAc5B,SAAU4B,EAAgB3B,QAAQ,oBCXzCkC,GApEW,SAAC,GAAqC,IAAnCjT,EAAkC,EAAlCA,KAAMpB,EAA4B,EAA5BA,QAAQF,EAAoB,EAApBA,gBAAoB,EACpBG,mBAAS,IADW,mBACvDkQ,EADuD,KACxCmE,EADwC,OAEhBrU,mBAAS,IAFO,mBAEvD4E,EAFuD,KAEtCC,EAFsC,OAG9B7E,mBAAS,MAHqB,mBAGvD2L,EAHuD,KAG7CsE,EAH6C,KAIxDlO,EAAQC,cAed,OAbAiF,qBAAU,WACN9F,IACF8O,EAAYxJ,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBACnDhC,EAAoB4B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,wBAE3D,CAAC1F,IAEH8F,qBAAU,WACN9F,GACFkT,EAAiB/I,EAAmB1G,MAEpC,CAACA,IAGF,eAAC,IAAD,WACC,cAAC,IAAD,CAAOiE,KAAK,WAAZ,SACC,cAAC,GAAD,CAAchJ,gBAAiBA,EAAiB+E,gBAAiBA,EAAiBC,mBAAoBA,EACrG1D,KAAMA,EAAKpB,QAASA,MAEtB,cAAC,IAAD,CAAO8I,KAAK,mBAAZ,SACC,cAAC,GAAD,CAA2BhJ,gBAAiBA,EAAiBoQ,YAAaA,EACzEC,cAAeA,MAEjB,cAAC,IAAD,CAAOrH,KAAK,WAAZ,SACC,cAAC,GAAD,CAAgB8C,SAAUA,MAE3B,cAAC,IAAD,CAAO9C,KAAK,YAAYlI,MAAS,CAAEiB,OAAO,QAA1C,SACC,cAAC0S,GAAD,CAAY3I,SAAUA,MAEvB,eAAC,IAAD,CAAO9C,KAAK,IAAZ,UACC,qBAAKvH,UAAU,gBAAf,SACC,sBAAKA,UAAU,WAAf,UACC,qBAAKA,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,qBAArD,SACC,oCACC,kCAAI,cAAC,IAAD,IAAJ,2BAGF,qBAAKX,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,aAArD,SACC,6BACC,kCAAI,cAAC,IAAD,IAAJ,4BAGF,qBAAKX,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,cAArD,SACC,6BACC,kCAAI,cAAC,IAAD,IAAJ,8BAGF,qBAAKX,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,aAArD,SACC,6BACC,kCAAI,cAAC,IAAD,IAAJ,yBAKH0J,GAAYA,EAASvF,OAAO,EAC1B,oBAAI9E,UAAU,eAAd,0BACA,oBAAIA,UAAU,eAAd,6BClDQiT,GAlBQ,SAAC,GAAiD,IAAhDjL,EAA+C,EAA/CA,QAASkL,EAAsC,EAAtCA,eAAeC,EAAuB,EAAvBA,kBAEhD,OACC,eAACT,GAAA,EAAD,CAAUrT,MAAO,CAACH,aAAa,QAA/B,UACC,cAACwT,GAAA,EAASC,OAAV,UACEO,GAAkBA,EAAejS,MAAQ,oBAE3C,cAACyR,GAAA,EAASE,KAAV,UACE5K,GAAWA,EAAQ3D,KAAI,SAACoD,GAAD,OACvB,eAACiL,GAAA,EAASG,KAAV,CAAiCxR,QAAS,WAAK8R,EAAkB1L,IAAjE,cACKA,EAAOxG,OADQwG,EAAOxG,eCgGjBmS,GAnGO,SAAC,GAAa,IAAZpL,EAAW,EAAXA,QAAW,EAGetJ,mBAAS,MAHxB,mBAG3BoT,EAH2B,KAGTuB,EAHS,OAIO3U,qBAJP,mBAI3BwU,EAJ2B,KAIZC,EAJY,OAMCzU,mBAAS,IANV,mBAM3B4U,EAN2B,KAMfC,EANe,OAOC7U,mBAAS,IAPV,mBAO3BqT,EAP2B,KAOfC,EAPe,OAQHtT,mBAAS,MARN,mBAQ3BuT,EAR2B,KAQjBC,EARiB,OAUGxT,mBAAS,MAVZ,mBAU3ByT,EAV2B,KAUdC,EAVc,OAYG1T,mBAAS,MAZZ,mBAY3B2T,EAZ2B,KAYdC,EAZc,OAaO5T,mBAAS,MAbhB,mBAa3B6T,EAb2B,KAaZC,EAbY,KAmBlC7M,qBAAU,WACTuN,GACAG,EAAqBH,EAAeM,MAAQpJ,EAA0B8I,EAAeM,MACnFjP,QAAO,SAACtD,EAAKoH,GAAN,OACP+B,EAA0B8I,EAAeM,MAAMC,QAAQxS,KAAQoH,QAChE,CAAC6K,IAEHvN,qBAAU,WACTmM,GAAqBwB,GACrBtB,EAAeF,EAAkBvN,QAAO,SAACtD,GAAD,OACvCA,EAAK2J,cAAcjH,SAAS2P,EAAY1I,qBACxC,CAACkH,EAAkBwB,IAErB3N,qBAAU,WACT,GAAIuN,EACH,OAAOf,GACP,IAAK,QACJK,EAAkBxH,EAAckI,EAAeM,KAAKvB,GAAWF,EAAY,GAAG,QAAQ,WACtFO,EAAgBtH,EAAckI,EAAeM,KAAKvB,GAAWF,EAAY,GAAG,QAAQ,SACpF,MACD,IAAK,UACJS,EAAkBxH,EAAckI,EAAeM,KAAKvB,GAAWF,EAAY,GAAG,UAAU,WACxFO,EAAgBtH,EAAckI,EAAeM,KAAKvB,GAAWF,EAAY,GAAG,UAAU,SACtF,MACD,QACCS,EAAkBxG,EAAgBkH,EAAeM,KAAKvB,GAAWF,EAAY,GAAG,WAChFO,EAAgBtG,EAAgBkH,EAAeM,KAAKvB,GAAWF,EAAY,GAAG,YAG/E,CAACmB,EAAejB,EAAWE,IAgC7B,OACC,sBAAKnS,UAAU,gBAAf,UACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,YAAYC,KAhCzB,kBACV,qCACC,cAAC,GAAD,CAAgBpF,QAASA,EAASkL,eAAgBA,EAAiBC,kBAAmBA,IACtF,gCACC,cAAC,IAAD,CAAU9T,MAAO,CAAC2B,YAAY,SAC9B,uBAAOhB,UAAU,SAASE,YAAY,sBACrCD,MAAOqT,EACPnT,SAAU,SAACT,GACV6T,EAAe7T,EAAMU,OAAOH,aAG9B8R,EAAYjN,OAAO,EAChB,qBAAI9E,UAAU,iBAAd,UAAgC+R,EAAY1N,KAAI,SAACoO,EAAWpK,GAAZ,OACjD,sBAAKrI,UAAU,mBAAf,UACA,6BAAKyS,IACL,eAACC,GAAA,EAAD,WACC,cAACA,GAAA,EAASC,OAAV,sBAGA,eAACD,GAAA,EAASE,KAAV,WACC,cAACF,GAAA,EAASG,KAAV,CAAexR,QAAS,WAAK+Q,EAAgB,SAASF,EAAaH,EAAY1J,KAA/E,oBACA,cAACqK,GAAA,EAASG,KAAV,CAAexR,QAAS,WAAK+Q,EAAgB,WAAWF,EAAaH,EAAY1J,KAAjF,sBACA,cAACqK,GAAA,EAASG,KAAV,CAAexR,QAAS,WAAK+Q,EAAgB,YAAYF,EAAaH,EAAY1J,KAAlF,4BAPF,UAAmBA,EAAnB,aAFuCA,MADtC,OAeA,qEAMFgK,GAAgBJ,GAChB,sBAAKjS,UAAU,sBAAf,UACC,oBAAIX,MAAO,CAACH,aAAa,QAAzB,SAAmCiT,IACjCI,GACD,qCACC,qDACA,cAAC,GAAD,CAAc5B,SAAU4B,EAAgB3B,QAAQ,aAElD,mDACA,cAAC,GAAD,CAAcD,SAAU0B,EAAczB,QAAQ,iBCZrC8C,GAhFM,SAAC,GAAa,IAAZ1L,EAAW,EAAXA,QAAW,EAGQtJ,qBAHR,mBAG1BwU,EAH0B,KAGXC,EAHW,OAIKzU,mBAAS,IAJd,mBAI1B4O,EAJ0B,KAIbC,EAJa,OAKN7O,oBAAS,GALH,mBAK1B8O,EAL0B,KAKlBC,EALkB,OAMF/O,mBAAS,IAAIuL,MANX,mBAM1B2C,EAN0B,KAMhBC,EANgB,OAQYnO,mBAAS,MARrB,mBAQ1BkN,EAR0B,KAQT8B,EARS,KAU3BC,EAAa,SAACtD,EAASuC,GAC5B,GAAGY,EAAQ,CACV,IAAMI,EAAQ,GACd/C,EAAqBR,EAASuC,GAAW/C,SAAQ,SAACY,GAC7CE,EAAsBF,EAAQD,UAAU8C,GAAaxI,OAAO,GAC/D8I,EAAQjN,KAAK8J,MAEfiD,EAAoBE,KAGtBjI,qBAAU,WACLuN,IACC1F,EACHG,EAAauF,EAAeM,KAAK5G,GAGjCc,EACCwF,EAAeM,KAAKnP,KAAI,SAACoG,GAExB,GAAmB,IADNE,EAAsBF,EAAQD,UAAU8C,GAC3CxI,OAAY,OAAO2F,KAE5BlG,QAAO,SAACtE,GAAD,YAAgB4N,GAAP5N,SAEpB,CAACqN,EAAYE,EAAQ0F,IAwBvB,OACC,mCACC,sBAAKlT,UAAU,gBAAf,UACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,WAAWC,KAzBzB,kBACV,sBAAK/N,MAAO,CAACiB,OAAO,OAAOf,QAAQ,OAAO2E,cAAc,UAAxD,UACC,cAAC,GAAD,CAAgB8D,QAASA,EAASkL,eAAgBA,EAAgBC,kBAAmBA,IACrF,gCACC,yDACA,sBAAK9T,MAAO,CAACE,QAAQ,QAArB,UACC,cAAC,IAAD,CAAUF,MAAO,CAAC2B,YAAY,SAC9B,uBAAO3B,MAAO,CAACH,aAAa,QAAQc,UAAU,SAASE,YAAY,sBAClEC,SAAU,SAACT,GAAU6N,EAAe7N,EAAMU,OAAOH,gBAIpD,qBAAKZ,MAAO,CAACoJ,UAAU,aAAaxC,UAAU,OAAO/G,aAAa,QAAlE,SACC,sBAAKG,MAAO,CAACE,QAAQ,OAAQ2E,cAAc,SAAS1E,WAAW,SAASP,QAAQ,MAAMkF,OAAO,OAA7F,UACC,mBAAG9E,MAAO,CAAC8E,OAAO,MAAM5E,QAAQ,SAAhC,4BACA,cAAC,EAAD,CAAU6G,SAAU,WAAKqH,GAAYD,IAAWvN,MAAOuN,SAGzD,cAAC,GAAD,CAAgBZ,UAAWA,EAAWC,aAAcA,EAAcxC,SAAU6I,GAAkBA,EAAeM,KAAMpN,SAAUuH,UAQ1H/B,GAAoBA,EAAiB9G,OAAO,GAC9C,qBAAKzF,MAAO,CAACkK,UAAU,UAAUvJ,UAAU,qBAA3C,SACC,qBAAKX,MAAO,CAACE,QAAQ,SAArB,SACC,oBAAIS,UAAU,gBACbX,MAAO,CAACE,QAAQ,OAAO2E,cAAc,iBAAiB4J,cAAc,QADrE,SAEElC,EAAiBvH,KAAI,SAACoG,EAAQpC,GAAT,OACrB,6BACC,cAAC,EAAD,CAAgBoC,QAASA,KADjBpC,kBCyDFsL,GA3HiB,SAAC,GAA0C,IAAzC3L,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,WAAY1J,EAAmB,EAAnBA,gBAEhDkC,EAAQC,cAF2D,EAItChC,mBAAS,IAJ6B,mBAIlEmQ,EAJkE,KAItDC,EAJsD,OAKvCpQ,mBAAS,IAL8B,mBAKlE6P,EALkE,KAKtDC,EALsD,OAM3B9P,mBAAS,IANkB,mBAMlEqQ,EANkE,KAMhDC,EANgD,OAO3BtQ,mBAAS,MAPkB,mBAOlEuQ,EAPkE,KAOhDC,EAPgD,OAQ7BxQ,mBAAS,MARoB,mBAQlEwU,EARkE,KAQlDC,EARkD,OASnCzU,mBAAS,IAT0B,mBASlEyQ,EATkE,KASpDC,EAToD,KAYzEzJ,qBAAU,WAET,GADAyJ,EAAgB,IACb8D,EAAe,CACjB,IAAMU,EAAO5J,EAAmBkJ,EAAe5P,iBAC5CsQ,GACF9E,EAAe8E,GACfpF,EAAcoF,EAAOvP,KAAI,SAAC4G,GAAD,MAAoB,CAAC,CAAChK,KAAKgK,EAAanB,KAAK,KAAKC,KAAK,aAGhF+E,EAAe,IACfI,EAAoB,UAEnB,CAACgE,IAEL,IAAM7D,EAAa,uCAAC,oCAAA1P,EAAA,yDACb2P,EAAuB,GAC7Bf,EAAW1E,SAAQ,SAACF,GACnBA,EAAcE,SAAQ,SAACrG,GAAY8L,EAAuB3O,KAAK6C,YAG1DoG,EAAiBF,EAAoB4F,IACtBxK,OAAO,GAPT,gBAQlBsK,EAAgBxF,GAChBrL,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,0EATnB,4BAaduP,EAAuBxK,OAAO,GAbhB,kCAcOE,EAAgBxC,YAAY,CAACgI,UAAU8E,EAAuBuE,IAAIX,EAAeW,MAdxF,SAcXtE,EAdW,SAgBVuE,EADQ,2BACUZ,GADV,IACyBM,KAAKN,EAAeM,KAAKvP,OAAOsL,KACjEwE,EAAe/L,EAAQzD,QAAO,SAACkD,GAAD,OAAUA,EAAOoM,MAAMX,EAAeW,OAAK5P,OAAO6P,GACtFzO,OAAOC,aAAaG,QAAQ,UAAUN,KAAKO,UAAUqO,IACrD9L,EAAW8L,GACXxV,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,kCACvCU,EAAQE,KAAK,MAGbpC,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,4BAxBrB,wBA4BjBxB,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,oDA5BpB,4CAAD,qDAgFnB,OACC,sBAAKC,UAAU,gBAAf,UACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,aAAaC,KAlD1B,kBACV,cADgB,CAChB,sBACC,cAAC,GAAD,CAAgBpF,QAASA,EAASkL,eAAgBA,EAAgBC,kBAAmBA,IACpFtE,GACJ,mCACEA,EAAYxK,KAAI,SAACoL,EAAWnL,GAAZ,OAChB,cADqC,CACrC,OAAKtE,UAAU,sBAAsBX,MAAO,CAC3CmC,gBAAgB2N,EAAaxL,SAAS8L,GACnC,OACA,SAHJ,UAMC,mBAAGzP,UAAU,iBAAiBqB,QAAS,WAAK6N,EAAoBO,IAAhE,SAA+EA,IAC/E,mBAAGpQ,MAAO,CAAC+B,OAAO,WACjBC,QAAS,WACR+N,EAAgBD,EAAa5K,QAAO,SAACf,GAAD,OAAYiM,IAAajM,MAC7DwL,EAAoBD,EAAiB9K,OAAOwL,IAC5CjB,EAAcD,EAAWhK,QAAO,SAACoF,GAAD,OAAkBA,EAAc,GAAG1I,OAAOwO,MAC1EX,EAAeD,EAAYtK,QAAO,SAACtD,GAAD,OAASwO,IAAaxO,OAL1D,SAOC,cAAC,IAAD,CAAiB5B,MAAO,CAAC0B,WAAW,OAAOC,YAAY,cAdzD,UAKQyO,GALR,OAKqBnL,SAgBlByK,EAAiBjK,OAAO,GACzB,oBAAIzF,MAAO,CAAC4G,UAAU,OAAO+C,UAAU,UAAvC,qBACC+F,EAAiB1K,KAAI,SAACb,GACvB,OACC,qBAAKxD,UAAU,8BAAf,SACC,mBAAkBA,UAAU,iBAC3BqB,QAAS,WACR2N,EAAoBD,EAAiBxK,QAAO,SAACtD,GAAD,OAASA,GAAMuC,MAC3DgL,EAAcD,EAAWtK,OAAO,CAAC,CAAC,CAAChD,KAAKuC,EAASsG,KAAK,KAAKC,KAAK,KAAK+B,OAAO,UAC5EgD,EAAeD,EAAY5K,OAAQT,KAJrC,SAMEA,GANMA,IADyCA,MAYpD,wBAAQxD,UAAU,YAAYX,MAAO,CAAC4G,UAAU,QAAS5E,QAAS,kBACjEgO,EAAcd,IADf,0BASCA,EAAWlK,KAAI,SAACsF,EAAcrF,GAC9B,GAAIqF,EAAc,GAAG1I,OAAOgO,EAC5B,OACC,qBAAajP,UAAU,oBAAvB,SACC,cAAC,GAAD,CAAc2J,cAAeA,EAAe4E,WAAYA,EAAYC,cAAeA,EAAekB,aAAcpL,KADvGA,UC3DA0P,GA7DC,SAAC,GAAgC,IAA/BzV,EAA8B,EAA9BA,gBAAgB0J,EAAc,EAAdA,WAG3BgM,EAAY,uCAAC,4BAAAtU,EAAA,2DACdwI,EAAclH,MACdkH,EAAcxJ,UACdwJ,EAActJ,UACbsJ,EAActJ,WAAWsJ,EAAcD,kBAJ1B,gCAKUI,EAAcd,UAAUW,GALlC,QAKXI,EALW,SAOhBlD,OAAOC,aAAaG,QAAQ,UAAUN,KAAKO,UAAU6C,EAAeP,UACpEC,EAAWM,EAAeP,SAC1BI,EAAiB,CAACnH,KAAK,GAAGtC,SAAS,GAAIE,SAAS,GAAGqJ,iBAAiB,KACpE3J,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,gCAGvCxB,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,mDAbrB,2CAAD,qDAH6B,EAuB/CrB,mBAAS,CAACuC,KAAK,GAAGtC,SAAS,GAAIE,SAAS,GAAGqJ,iBAAiB,KAvBb,mBAsBxCC,EAtBwC,KAsB1BC,EAtB0B,KAyB/C,OACC,uBAAMpI,UAAU,aAAaX,MAAO,CAACE,QAAQ,OAAQ2E,cAAc,SAAS1E,WAAW,UACtFC,SAAU,SAACC,GAASA,EAAME,iBAAkBqU,EAAa9L,IAD1D,UAGC,+CACA,sBAAK9I,MAAO,CAAC4G,UAAU,OAAO1G,QAAQ,OAAQ2E,cAAc,SAAS1E,WAAW,UAAhF,UAEC,sBAAKH,MAAO,CAACE,QAAQ,OAAO2E,cAAc,UAA1C,UACC,0CACA,uBAAO/D,SAAU,SAACT,GAAU0I,EAAiB,2BAAID,GAAL,IAAmBlH,KAAKvB,EAAMU,OAAOH,UAChFC,YAAaiI,EAAclH,MAAQ,cACnChB,MAAOkI,EAAclH,OACtB,uBAAOd,SAAU,SAACT,GAAU0I,EAAiB,2BAAID,GAAL,IAAmBxJ,SAASe,EAAMU,OAAOH,UACpFC,YAAaiI,EAAcxJ,UAAY,kBACvCsB,MAAOkI,EAAcxJ,cAGvB,sBAAKU,MAAO,CAAC4G,UAAU,OAAO1G,QAAQ,OAAO2E,cAAc,UAA3D,UACC,0CACA,uBAAO/D,SAAU,SAACT,GAAS0I,EAAiB,2BAAID,GAAL,IAAmBtJ,SAASa,EAAMU,OAAOH,UACnFC,YAAaiI,EAActJ,UAAY,kBACvCoB,MAAOkI,EAActJ,WAEtB,uBAAOsB,SAAU,SAACT,GAAU0I,EAAiB,2BAAID,GAAL,IAAmBD,iBAAiBxI,EAAMU,OAAOH,UAC5FC,YAAaiI,EAAcD,kBAAoB,yBAC/CjI,MAAOkI,EAAcD,sBAEvB,wBAAQ7H,KAAK,SACZL,UAAU,YAAYX,MAAO,CAAC4G,UAAU,OAAOjH,MAAM,OAAQsB,OAAO,QADrE,wBCtBW4T,GA/BO,SAAC,GAAyC,IAAvCpU,EAAsC,EAAtCA,MAAMqU,EAAgC,EAAhCA,KAAKC,EAA2B,EAA3BA,OAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAC1CC,EAAYC,iBAAO,MA2BzB,OATA7O,qBAAU,WACT,IAjBa8O,EAkBPC,EADSH,EAAUI,QACFC,WAAW,MAClCF,EAAQG,OAAO7V,MAAMmV,EACrBO,EAAQG,OAAOvU,OAAO6T,GApBTM,EAqBRC,GApBDI,UAAU,EAAG,EAAIL,EAAII,OAAOvU,OAAOmU,EAAII,OAAO7V,OAClDyV,EAAIM,UAAY,UAChBN,EAAIJ,KAAKA,EACTI,EAAIzL,UAAY,SAChByL,EAAIO,aAAe,SACnBP,EAAIQ,YACJR,EAAIM,UAAUjV,EACd2U,EAAIS,IAAIT,EAAII,OAAO7V,MAAM,EAAGyV,EAAII,OAAOvU,OAAO,EAAG8T,EAAQ,EAAG,EAAEe,KAAKC,IACnEX,EAAI9N,OAEJ8N,EAAIQ,YACJR,EAAIM,UAAU,QACdN,EAAIY,SAASf,EAAUG,EAAII,OAAO7V,MAAM,EAAGyV,EAAII,OAAOvU,OAAO,MAYvD,wBAASgV,IAAKf,KC2CPgB,GApEO,SAAC,GAAsG,IAArGlS,EAAoG,EAApGA,IAAIF,EAAgG,EAAhGA,SAASqS,EAAuF,EAAvFA,WAAWtC,EAA4E,EAA5EA,eAAeC,EAA6D,EAA7DA,kBAAkBsC,EAA2C,EAA3CA,YAAYC,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,eAAkB,EAEzFjX,oBAAS,GAFgF,mBAEpHkX,EAFoH,KAExGC,EAFwG,KAI3H,OACC,sBAAK7V,UAAU,WAAWX,MAAO,CAAC4G,UAAU,OAAO/G,aAAa,OAAOK,QAAQ,QAAQN,QAAQ,OAA/F,UACC,sBAAMe,UAAU,SACfX,MAAO,CAAC+B,OAAO,UAAUlC,aAAa,OAAO+G,UAAU,OAAO1G,QAAQ,OAAO4E,OAAO,OADrF,UAEC,oBAAG9C,QAAS,kBAAIwU,GAAeD,IAC9BvW,MAAO,CAAEE,QAAQ,OAAOP,MAAM,QAD/B,UAEC,6BACEqE,EAAI,KAELuS,EACE,cAAC,IAAD,CAAevW,MAAO,CAAC0B,WAAW,UAClC,cAAC,IAAD,CAAa1B,MAAO,CAAC0B,WAAW,aAEnCyU,GAAcI,GACf,yCACC,wBAAQvU,QAAS,WAAKoU,EAAYpS,IACjCrD,UAAU,YAAWX,MAAO,CAAC0B,WAAW,OAAOxB,QAAQ,UADxD,iBAIC4D,GAAYA,EAAS2B,OAAO,GAC7B,eAAC4N,GAAA,EAAD,CAAUrT,MAAO,CAAC0B,WAAW,QAA7B,UACC,cAAC2R,GAAA,EAASC,OAAV,6BAGA,cAACD,GAAA,EAASE,KAAV,UACEzP,EAASkB,KAAI,SAACpB,EAAQqB,GAAT,OACb,eAACoO,GAAA,EAASG,KAAV,CAAqCxR,QAAS,WAC7C8R,EAAkB,2BAAID,GAAL,IAAoB5P,gBAAgB,2BAAI4P,EAAe5P,iBAApB,kBAClDD,EAAI,GAAIJ,EAAQuH,gBAFnB,cAGSvH,EAAQhC,OAHjB,UAAuBgC,GAAvB,OAAiCqB,kBAYtC,oBAAKjF,MAAO,CAACyW,UAAU,QAAvB,SACEzS,EAAI,GAAGgB,KAAI,SAACb,EAASc,GAAV,OACXkR,EAEC,qBAA6BnW,MAAO,CAAC8E,OAAO,MAAO5E,QAAQ,QAA3D,SACEqW,GACD,qCACC,uBAAOvW,MAAO,CAACE,QAAQ,SACtBwW,WAAW,EACXC,OAAQ,SAACtW,GAASgW,EAAarS,EAAIiB,EAAE5E,EAAMU,OAAOH,MAAMyD,SACxDvD,SAAU,SAACT,GAAD,OAASgW,EAAarS,EAAIiB,EAAE5E,EAAMU,OAAOH,QACnDA,MAAOuD,IACR,wBAAQxD,UAAU,YAAYX,MAAO,CAAC0B,WAAW,QAAQM,QAAS,WAAKsU,EAAetS,EAAIiB,IAA1F,wBARF,UAAad,GAAb,OAAwBc,IAaxB,8BACEsR,GAAc,oBAAI5V,UAAU,SAAd,SAAwBwD,KADxC,UAAaA,GAAb,OAAwBc,aC5Bf2R,GAlCU,SAAC,GAAsC,IAArClW,EAAoC,EAApCA,QAASmW,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,WAE/C,OACC,sBAAKnW,UAAU,SAASX,MAAO,CAC9B+W,OAAO,IACPC,UAAU,kCACV9W,QAAQ,OACR2E,cAAc,SACd3C,eAAe,SACf/B,WAAW,SACXuR,IAAK,MACLE,KAAM,MACNjS,MAAO,OACPsB,OAAQ,OACR2F,UAAW,OACXlF,WAAY,QACZyI,aAAa,MACbrK,OAAQ,iBACRqC,gBAAiB,UACjBV,SAAU,QACV7B,QAAQ,QAjBT,UAqBC,oBAAII,MAAO,CAAC2J,UAAU,UAAtB,SAAkCjJ,IAClC,gCACC,wBAAQV,MAAO,CAAC2B,YAAY,OAAOhC,MAAM,QAAQqC,QAAS,WAAK6U,KAAgBlW,UAAU,YAAzF,iBACA,wBAAQX,MAAO,CAACL,MAAM,QAAQqC,QAAS,WAAK8U,KAAenW,UAAU,YAArE,uB,oBC2KWsW,GA7LI,SAAC,GAAiI,IAA/HxW,EAA8H,EAA9HA,MAAMwU,EAAwH,EAAxHA,SAASiC,EAA+G,EAA/GA,OAAOC,EAAwG,EAAxGA,UAAUC,EAA8F,EAA9FA,YAAYzO,EAAkF,EAAlFA,QAAQC,EAA0E,EAA1EA,WAAW1J,EAA+D,EAA/DA,gBAAgB4U,EAA+C,EAA/CA,kBAAkBhQ,EAA6B,EAA7BA,SAAS+P,EAAoB,EAApBA,eAAoB,EAGlHxU,oBAAS,GAHyG,mBAG5I8W,EAH4I,KAGjIkB,EAHiI,KAKnJ/Q,qBAAU,WACTqC,GAAuB,GAAZwN,GACXtC,IAAiBlL,EAAQyO,IAAgBtD,EAAkBnL,EAAQyO,MAClE,CAACjB,IAEH7P,qBAAU,WACT+Q,GAAc,KACb,CAACxD,GAAkBA,EAAevU,WAEpC,IAOM+W,EAAa,SAACrS,EAAIgF,EAAMsO,GAC7BnB,GACArC,EAAkB,2BAAID,GAAL,IAAoB5P,gBAAgB,2BAAI4P,EAAe5P,iBAApB,kBAClDD,EAAI,GAAIA,EAAI,GAAGgB,KAAI,SAACuS,EAAgBtS,GAAjB,OACnBA,GAAG+D,EACCsO,EAAY/S,OAAO,GAAGC,cACzB8S,EAAY7S,MAAM,GAChB8S,WAGAnB,EAAY,SAACpS,GAClBmS,GACArC,EAAkB,2BAAID,GAAL,IAAoB5P,gBAAgB,2BAAI4P,EAAe5P,iBAApB,kBAClDD,EAAI,GAAIA,EAAI,GAAGY,OAAO,UAEnB0R,EAAe,SAACtS,EAAIgF,GACzB,GAAImN,EAAW,CACd,IAAMqB,EAAW3D,EAAe5P,gBAAgBD,EAAI,IAAIkB,QAAO,SAACuS,EAAExS,GAAH,OAAO+D,IAAQ/D,KACvD,IAApBuS,EAAW/R,OAEbqO,EAAkB,2BAAID,GAAL,IAAoB5P,gBAAgB,2BAAI4P,EAAe5P,iBAApB,kBAAsCD,EAAI,GAAI,UAGlG8P,EAAkB,2BAAID,GAAL,IAAoB5P,gBAAgB,2BAAI4P,EAAe5P,iBAApB,kBAAsCD,EAAI,GAAIwT,SAG/FlP,EAAY,uCAAG,8BAAAhI,EAAA,sEACO2I,EAAcX,aAAa,CAACC,GAAGsL,EAAeW,MADrD,eAGnB5L,EAAWD,EAAQzD,QAAO,SAACkD,GAAD,OAAUA,EAAOoM,KAAMX,EAAeW,QAC1DkD,EAAc5R,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,YACrDwO,EAAegD,EAAcxS,QAAO,SAACkD,GAAD,OAAUA,EAAOoM,KAAKX,EAAeW,OAC/ExO,OAAOC,aAAaG,QAAQ,UAAUN,KAAKO,UAAUqO,IACrDxV,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,sDACvCoT,EAAkB,OAGlB5U,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,kCAXlB,2CAAH,qDAeZkU,EAAY,uCAAC,kCAAAtU,EAAA,yDACdqX,GAAkB,EAChBlU,EAAS8C,OAAOC,QAAQqN,EAAe5P,iBAC3Ce,KAAI,SAAChB,GACL,IAAGA,EAAI,IAAM,IAAIiH,IAAIjH,EAAI,IAAI8Q,MAAQ9Q,EAAI,GAAGyB,OAGxC,CACH,GAAGzB,EAAI,GAAG,CACT,IAAMmH,EAAYnH,EAAI,GAAGkB,QAAO,SAACf,GAAD,OAAaA,EAASE,UACtD,MAAO,CAACL,EAAI,GAAuB,IAAnBmH,EAAU1F,OACvB,KACA0F,GAGH,MAAO,CAACnH,EAAI,GAAG,MAVhB2T,GAAkB,MAcjBA,EAnBc,gBAoBjBzY,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,0EApBpB,uCAwBhBoT,EAAkB,2BAAID,GAAL,IAAoB5P,gBAAgBsC,OAAOqR,YAAYnU,MAxBxD,UAyBUwF,EAAcZ,aAAd,2BAA+BwL,GAA/B,IAA8C5P,gBAAgBsC,OAAOqR,YAAYnU,MAzB3F,QAyBVgR,EAzBU,OA0BVC,EAAe/L,EAAQzD,QAAO,SAACkD,GAAD,OAAUA,EAAOoM,MAAMC,EAAcD,OAAK5P,OAAO6P,GACrFzO,OAAOC,aAAaG,QAAQ,UAAUN,KAAKO,UAAUqO,IACrD9L,EAAW8L,GACX2C,GAAc,GACdnY,EAAgB,CAACuB,MAAM,QAAQC,QAAQ,gCA9BvB,kDAiChBxB,EAAgB,CAACuB,MAAM,MAAMC,QAAQ,4BAjCrB,0DAAD,qDAsClB,OACC,sBAAKV,MAAO,CACXE,QAAQ,OAAO2E,cAAc,UAAYlE,UAAU,wBADpD,UAEEuW,GACD,cAAC,GAAD,CACCxW,QAAO,0CAAqCmT,EAAejS,KAApD,2BACPiV,YAAa,WAAKvO,IAAe6O,GAAU,IAC3CL,WAAY,WAAKK,GAAU,MAI5B,sBAAKxW,UAAU,iBACdX,MAAO,CACN6X,UAAU,QACV/S,OAAO,OAAO3E,WAAW,SAASR,MAAM,OACxCI,aAAa,sBACbF,aAAa,MACbD,QAAQ,OAAOiC,YAAY,MAAM3B,QAAQ,QAN3C,UAOC,cAAC,GAAD,CAAgBO,MAAOA,EAAOuU,KAAM,aAAcD,OAAQ,GAAID,KAAM,IAAKG,SAAUA,IACnF,sBAAKtU,UAAU,kBAAkBX,MAAO,CAAC0B,WAAW,OAAOoW,SAAS,IAAInW,YAAY,OAAOzB,QAAQ,OAAO2E,cAAc,UAAxH,UACC,mBAAG7E,MAAO,CAACE,QAAQ,UAAnB,oBACA,qBAAIF,MAAO,CAACE,QAAQ,UAApB,cAAiC2T,EAAejS,WAIjD,sBAAKjB,UAAU,kBAAkBX,MAAO,CAAC8X,SAAS,IAAInW,YAAY,OAAOzB,QAAQ,OAAO2E,cAAc,UAAtG,UACC,mBAAG7E,MAAO,CAACE,QAAQ,UAAnB,wBACA,qBAAIF,MAAO,CAACE,QAAQ,UAApB,cAAiC2T,EAAevU,eAGjD,sBAAKU,MAAO,CAACE,QAAQ,OAAQ2E,cAAc,UAA3C,UAEC,wBAAQlE,UAAWwV,EAChB,YACA,YACHnW,MAAQ,CAACH,aAAa,OAAOuJ,UAAU,QAAQe,aAAa,MAAMxK,MAAM,OAAOsB,OAAO,OAAOS,WAAW,OAAOC,YAAY,QAC3HK,QAAS,WAAKqV,GAAelB,IAJ7B,SAKEA,EACE,cAAC,KAAD,CAAUrB,KAAK,SACf,cAAC,KAAD,CAAcA,KAAK,WAGvB,wBAAQnU,UAAU,YAAYX,MAAO,CAACmC,gBAAgB,QAAQ1B,MAAM,UACnEuW,UAAW,kCACXrX,MAAM,OAAOsB,OAAO,OAAOkJ,aAAa,MAAMzI,WAAW,QAASM,QAAS,WAAMmV,GAAU,IAF5F,SAGC,cAAC,IAAD,CAAiBrC,KAAK,iBAKzB,qBAAK9U,MAAO,CAACL,MAAM,QAAnB,SACC,qBAAKgB,UAAU,WAAf,SACG4F,OAAOC,QAAQqN,EAAe5P,iBAC9Be,KAAI,SAAChB,GAEL,IAAMpD,EAAMoD,EAAI,IAAI,GACpB,OACC,sBAAkBhE,MAAO,CAACE,QAAQ,OAAO2E,cAAc,SAASlF,MAAM,QAAtE,cACC,sBAAKK,MAAO,CAACE,QAAQ,OAAO2E,cAAc,SAAS1E,WAAW,SAAS2E,OAAO,OAA9E,UACC,mCAAMd,EAAI,GAAV,OACA,cAAC,EAAD,CAAU+C,SAAU,YAlJb,SAAC/C,GAChBmS,IACCnS,EAAI,GACF8P,EAAkB,2BAAID,GAAL,IAAoB5P,gBAAgB,2BAAI4P,EAAe5P,iBAApB,kBAAqCD,EAAI,GAAI,UACjG8P,EAAkB,2BAAID,GAAL,IAAoB5P,gBAAgB,2BAAI4P,EAAe5P,iBAApB,kBAAqCD,EAAI,GAAI,CAAC,UA8IpE+T,CAAU/T,IAAOpD,MAAOA,SAHzCoD,EAAI,WASnB,qBAAKhE,MAAQ,CAACL,MAAM,QAApB,SACG4G,OAAOC,QAAQqN,EAAe5P,iBAC9Be,KAAI,SAAChB,GAAD,OACJA,EAAI,IACF,cAAC,GAAD,CACC8P,kBAAmBA,EACnBD,eAAgBA,EAChB7P,IAAKA,EACLmS,WAAYA,EACZC,YAAaA,EAAaC,aAAcA,EACxCC,eAAgBA,EAAgBxS,SAAUA,GANrBE,EAAI,SAS9BmS,GACD,qBAAKnW,MAAO,CAACL,MAAM,OAAOO,QAAQ,QAAlC,SACC,wBAAQF,MAAO,CAAC8E,OAAO,OAAOpD,WAAW,OAAO/B,MAAM,QAAQgB,UAAU,YACvEqB,QAAS,WAAM4S,KADhB,wBC/EWoD,GAzGG,SAAC,GAAkD,IAAjDrP,EAAgD,EAAhDA,QAAQC,EAAwC,EAAxCA,WAAW9E,EAA6B,EAA7BA,SAAS5E,EAAoB,EAApBA,gBAAoB,EAG1BG,mBAAS,MAHiB,mBAG5DwU,EAH4D,KAG7CC,EAH6C,OAIhCzU,mBAAS,MAJuB,mBAI5D+X,EAJ4D,KAIhDa,EAJgD,OAM1C5Y,oBAAS,GANiC,mBAM5D6X,EAN4D,KAMrDC,EANqD,OAQtC9X,mBAAS,IAR6B,mBAQ5D4V,EAR4D,KAQnDiD,EARmD,OAS5B7Y,mBAAS,IATmB,mBAS5D8Y,EAT4D,KAS9CC,EAT8C,KAwClE,OAfD9R,qBAAU,WACLqC,IACHuP,EAAYvP,EAAQ3D,KAAI,SAACoD,GAAD,OAAUA,EAAOxG,KAAKyW,MAAM,KAAKrT,KAAI,SAACpD,GAAD,OAAQA,EAAK,MAAI0W,KAAK,QACnFF,EAAiBzP,EAAQ3D,KACxB,SAACoD,GAAD,OAlBoB,SAASmQ,GAE/B,IADA,IAAIC,EAAO,EACFvT,EAAI,EAAGA,EAAIsT,EAAI9S,OAAQR,IAC/BuT,EAAOD,EAAIE,WAAWxT,KAAOuT,GAAQ,GAAKA,GAG3C,IADA,IAAIE,EAAS,IACJC,EAAI,EAAGA,EAAI,EAAGA,IAEtBD,IAAW,MADEF,GAAa,EAAJG,EAAU,KACRC,SAAS,KAAKC,QAAQ,GAE/C,OAAOH,EAQMI,CAAe1Q,EAAOxG,aAElC,CAAC+G,IAIHrC,qBAAU,WACT6Q,GAAaA,GAAU,KACtB,CAACtD,IAGElL,EAEJ,sBAAKhI,UAAU,gBAAf,UACC,cAAC,GAAD,CAAUmN,OAAQ,kBACjB,qBAAK9N,MAAO,CAACE,QAAQ,cAAc2E,cAAc,SAASkU,aAAa,UAAvE,SACC,gCACC,mBAAG/Y,MAAO,CAACE,QAAQ,SAASN,QAAQ,MAAMkF,OAAO,OAAjD,wBACA,mBAAG9E,MAAO,CAAC0B,WAAW,QACrBM,QAAS,WACR8R,EAAkB,CAACxU,SAAS,GAAG2E,gBAAgB,CAAC+U,IAAI,KAAKC,IAAI,KAAKC,IAAI,KAAKC,IAAI,KAAKC,IAAI,KAAKC,IAAI,KAAKC,IAAI,SAF5G,SAIC,cAAE,KAAF,CAAiBtZ,MAAO,CACvB+B,OAAO,UAAUtB,MAAM,SAASd,MAAM,OAAOsB,OAAO,kBAMzD8M,KACC,kBACC,qBAAK/N,MAAO,CAACuZ,SAAS,OAAOrZ,QAAQ,QAArC,SAEEyI,EAAQ3D,KAAI,SAACoD,EAAOnD,GAAR,OACZ,aAD2B,CAC3B,KACCjD,QAAS,WACR8R,EAAkB1L,GAClB6P,EAAehT,IAHjB,SAOC,sBAAKjF,MAAO,CACX8E,OAAO,OACP6E,UAAU,SACVqN,UAAW,kCAAmC7M,aAAc,MAC5DpI,OAAO,UAAU7B,QAAQ,OAAO2E,cAAc,SAAU1E,WAAW,SACnEc,OAAO,QAAStB,MAAM,SALvB,UAMC,cAAC,GAAD,CAAgBc,MAAO0X,EAAclT,GAAI6P,KAAM,IAAKC,OAAQ,GAAGC,KAAM,aAAcC,SAAUA,EAAShQ,KACtG,6BACEmD,EAAOxG,WAfHqD,WAwBX4O,GAAkBA,EAAevU,SAEjC,cAAC,GAAD,CACC2V,SAAUA,EAASmC,GACnB3W,MAAO0X,EAAcf,GACrBF,OAAQA,EACRC,UAAWA,EACXC,YAAaA,EACbvD,eAAgBA,EAAgBC,kBAAmBA,EACnDnL,QAASA,EAASC,WAAYA,EAC9B9E,SAAUA,EACV5E,gBAAiBA,IAElB,cAAC,GAAD,CAAW0J,WAAYA,EAAY1J,gBAAiBA,OA5DjC,8CCqGRsa,GA9IK,SAAC,GAA6B,IAA5B1V,EAA2B,EAA3BA,SAASD,EAAkB,EAAlBA,YAAkB,EAETxE,mBAASyE,GAAYgC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAFnD,mBAEzCuT,EAFyC,KAE3BC,EAF2B,OAGLra,mBAAS,MAHJ,mBAGzCsa,EAHyC,KAGzBC,EAHyB,OAIXva,mBAAS,MAJE,mBAIzCwa,EAJyC,KAI5BC,EAJ4B,OAKfza,oBAAS,GALM,mBAKzC8W,EALyC,KAK9BkB,EAL8B,KAO1C0C,EAAY,SAAC/Q,EAAM7E,GACxBgS,GACAyD,EAAmB,2BAAID,GAAL,IAAqBxO,UACtCwO,EAAgBxO,UAAUnG,KAAI,SAACpD,EAAKqD,GAAN,OAC7BA,IAAI+D,EACD7E,EAASI,OAAO,GAAGC,cAAcL,EAASM,MAAM,GAChD7C,SAOAoY,EAAa,uCAAG,WAAMhR,GAAN,iBAAA1I,EAAA,6DACf2Z,EAAgBR,EAAcvU,QAAO,SAACuS,EAAExS,GAAH,OAAO+D,GAAO/D,KADpC,SAESU,EAAgB9B,YAAYoW,GAFrC,OAEfC,EAFe,OAGrBR,EAAiBQ,GACjBrW,EAAYqW,GACZlU,OAAOC,aAAaG,QAAQ,WAAWN,KAAKO,UAAU6T,IACtDlR,IAAQ6Q,GAAgBD,EAAmB,MANtB,2CAAH,sDAabO,EAAY,uCAAE,8BAAA7Z,EAAA,6DACnB+W,GAAc,GACR4C,EAAgBR,EAAczU,KAAI,SAACpB,EAAQqB,GAAT,OACvCA,IAAI4U,EAAJ,2BACOF,GADP,IAEExO,UAAUwO,EAAgBxO,UAAUjG,QAAO,SAACf,GAAD,OAAYA,GAAYA,OAClEP,KANe,SAOW+B,EAAgB9B,YAAYoW,GAPvC,OAObC,EAPa,OAQnBrW,EAAYqW,GACZR,EAAiBQ,GACjBlU,OAAOC,aAAaG,QAAQ,WAAWN,KAAKO,UAAU6T,IACtDN,EAAmBM,EAAkBL,IAXlB,2CAAF,qDAmBlB,OALAvT,qBAAU,WACTmT,GAA6B,GAAZtD,GACjBwD,IAAkBF,EAAcI,IAAiBD,EAAmBH,EAAcI,MACjF,CAAC1D,IAGF,sBAAKxV,UAAU,gBAAf,UACC,cAAC,GAAD,CAAUmN,OAAQ,iBAAI,eAAeC,KAAO,kBAE3C,qCACC,wBAAQ/N,MAAO,CAACH,aAAa,QAASc,UAAU,YAAYqB,QAAS,WAxCxE0X,EAAiBD,EAAc7U,OAAO,CAAChD,KAAK,cAAeuJ,UAAU,CAAC,QAwCnE,0BACCsO,GAAiBA,EAAczU,KAAI,SAACpB,EAAQoF,GAAT,OACnC,sBAAqCrI,UAAU,sBAA/C,UACC,mBAAIqB,QAAS,WAAK4X,EAAmBhW,GAAUkW,EAAgB9Q,GAAOqO,GAAe,IACpF1W,UAAU,iBADX,SAEGiD,EAAQhC,OAGX,mBAAG5B,MAAO,CAAC+B,OAAO,WACjBC,QAAS,WACRgY,EAAchR,IAFhB,SAIC,cAAC,IAAD,CAAiBhJ,MAAO,CAAC0B,WAAW,OAAOC,YAAY,cAVzD,UAAaiC,EAAQhC,MAArB,OAA4BoH,aAiB9B2Q,GACC,qBAAK3Z,MAAO,CAAE4G,UAAU,QAAxB,SACC,sBAAKjG,UAAU,kBAAf,UACEwV,EAEA,qCACC,sBAAKnW,MAAO,CAACoa,aAAa,YAAYrB,aAAa,YAAY7W,eAAe,YAAY/B,WAAW,YAAYD,QAAQ,QAAzH,UACC,sBAAKF,MAAO,CAACE,QAAQ,cAAe2E,cAAc,UAAlD,UACC,8CACA,uBACC7E,MAAO,CAACH,aAAa,QACrBiB,SAAU,SAACT,GAASuZ,EAAmB,2BAAID,GAAL,IAAqB/X,KAAKvB,EAAMU,OAAOH,UAASA,MAAO+Y,EAAgB/X,MAAQ,QAEvH,qBAAK5B,MAAO,CAAC0B,WAAW,QAAxB,SACC,wBAASf,UAAU,YAAYX,MAAO,CAACmK,aAAa,OACnDnI,QAAS,WAAKqV,GAAelB,IAD9B,SAEC,cAAC,KAAD,CAAUrB,KAAK,gBAIlB,oBAAI9U,MAAO,CAACH,aAAa,OAAzB,+BACA,qBAAKG,MAAO,CAACE,QAAQ,QAArB,SACC,wBAAQS,UAAU,YAAWX,MAAO,CAAC0B,WAAW,QAC/CM,QAAS,WAAK4X,EAAmB,2BAAID,GAAL,IAAqBxO,UAAUwO,EAAgBxO,UAAUvG,OAAO,QADjG,mBAIA+U,GAAmBA,EAAgBxO,UAAUnG,KAAI,SAACb,EAAS6E,GAAV,OAChD,sBAAKhJ,MAAO,CAACH,aAAa,OAA1B,UACC,uBACC6W,WAAW,EACXC,OAAQ,SAACtW,GAAS0Z,EAAY/Q,EAAM3I,EAAMU,OAAOH,MAAMyD,SACvDvD,SAAU,SAACT,GAAS0Z,EAAY/Q,EAAM3I,EAAMU,OAAOH,QAAQA,MAAOuD,IACnE,wBAAQxD,UAAU,YAAWX,MAAO,CAAC0B,WAAW,QAAQM,QAAS,YA/ElD,SAACmC,GAC1ByV,EAAmB,2BAAID,GAAL,IAAsBxO,UAAUwO,EAAgBxO,UAAUjG,QAAO,SAACtD,GAAD,OAAQA,GAAMuC,QA8EjBkW,CAAkBlW,IAAxF,sBALqC6E,SAWzC,qCACC,sBAAKhJ,MAAO,CAACH,aAAa,OAAOK,QAAQ,QAAzC,UACC,oBAAIF,MAAO,CAACH,aAAa,OAAzB,SAAoC8Z,EAAgB/X,OACpD,wBAASjB,UAAU,YAAYX,MAAO,CAACmK,aAAa,MAAMzI,WAAW,OAAOxB,QAAQ,UAAW8B,QAAS,WAAKqV,GAAelB,IAA5H,SACC,cAAC,KAAD,CAAcrB,KAAK,cAIpB6E,GAAmBA,EAAgBxO,UAAUnG,KAAI,SAACb,EAASc,GAAV,OAChD,6BACEd,GADQc,SAOd,qBAAKjF,MAAO,CAACL,MAAM,OAAOO,QAAQ,QAAlC,SACEiW,GAAc,wBAAQnW,MAAO,CAAC4G,UAAU,OAAOlF,WAAW,OAAOC,YAAY,MAAMzB,QAAQ,UAAUS,UAAU,YAC/GqB,QAAS,WAAKmY,KADA,oBAGhB,qBAAMna,MAAO,CAACL,MAAM,OAAOI,aAAa,sBAAsBH,QAAQ,OAAOM,QAAQ,mBCtD7Eoa,GA5EW,SAAC,GAAmC,IAAlC9Z,EAAiC,EAAjCA,KAAKpB,EAA4B,EAA5BA,QAAQF,EAAoB,EAApBA,gBAClCkC,EAAQC,cAD8C,EAG9BhC,mBAAS,MAHqB,mBAGrDsJ,EAHqD,KAG5CC,EAH4C,OAI5BvJ,mBAAS,MAJmB,mBAIrDyE,EAJqD,KAI3CD,EAJ2C,KAc5D,OARAyC,qBAAU,WACT,GAAG9F,GAAQA,EAAK0Q,UAAU,CACzB,IAAMwG,EAAc5R,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,YAC3DwR,GAAiB9O,EAAW8O,GAC5B7T,EAAYiC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,iBAEnD,CAAC1F,IAGF,eAAC,IAAD,WACC,cAAC,IAAD,CAAO0H,KAAK,mBAAZ,SACC,cAACqS,GAAD,CAAsB5R,QAASA,EAASC,WAAYA,EACnD1J,gBAAiBA,MAEnB,cAAC,IAAD,CAAOgJ,KAAK,WAAZ,SACC,cAACsS,GAAD,CAAW7R,QAASA,EAASC,WAAYA,MAE1C,cAAC,IAAD,CAAOV,KAAK,WAAZ,SACC,cAAC,GAAD,CAAa1H,KAAMA,EAAKpB,QAASA,EAASuJ,QAASA,EAClDC,WAAYA,EAAY9E,SAAUA,EAAU5E,gBAAiBA,MAE/D,cAAC,IAAD,CAAOgJ,KAAK,YAAZ,SACC,cAACuS,GAAD,CAAY9R,QAASA,MAEtB,cAAC,IAAD,CAAOT,KAAK,YAAZ,SACC,cAAC,GAAD,CAAa1H,KAAMA,EAAKpB,QAASA,EAAS0E,SAAUA,EAAUD,YAAaA,MAE5E,cAAC,IAAD,CAAOqE,KAAK,WAAZ,SACC,cAAC,GAAD,CAAahJ,gBAAiBA,EAAiBsB,KAAMA,EAAKpB,QAASA,EAAS0E,SAAUA,EAAUD,YAAaA,MAE9G,cAAC,IAAD,CAAOqE,KAAK,IAAZ,SACC,qBAAKvH,UAAU,gBAAf,SACC,sBAAKA,UAAU,WAAf,UACC,qBAAKA,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,aAArD,SACC,oCACC,kCAAI,cAAC,IAAD,IAAJ,qBAGF,qBAAKX,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,qBAArD,SACC,oCACC,kCAAI,cAAC,IAAD,IAAJ,6BAGF,qBAAKX,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,cAArD,SACC,6BACC,kCAAI,cAAC,IAAD,IAAJ,kBAGF,qBAAKX,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,aAArD,SACC,6BACC,kCAAI,cAAC,IAAD,IAAJ,iBAGF,qBAAKX,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,cAArD,SACC,6BACC,kCAAI,cAAC,IAAD,IAAJ,sBAGF,qBAAKX,UAAU,WAAWqB,QAAS,WAAKZ,EAAQE,KAAK,aAArD,SACC,6BACC,kCAAI,cAAC,IAAD,IAAJ,+BCjEOoZ,GAVM,SAAC,GAAqB,IAApBha,EAAmB,EAAnBA,QAAQD,EAAW,EAAXA,MAC9B,OAAGC,EAED,qBAAKV,MAAO,CAAC2J,UAAU,SAASoN,OAAO,IAAIpX,MAAM,QAAQ8B,SAAS,WAAYiQ,IAAI,IAAIvP,gBAAgB1B,GAAtG,SACC,6BAAKC,MAID,MCGO,IAACia,SAVF,uCAAG,WAAMpK,GAAN,eAAAjQ,EAAA,+EAEQyC,IAAMM,KAJf,aAI6BkN,GAF5B,cAETtN,EAFS,yBAGRA,EAASC,MAHD,0DAMR,GANQ,yDAAH,uDCUC,IAAE0X,MAVN,uCAAG,WAAMrK,GAAN,eAAAjQ,EAAA,+EAEWyC,IAAMM,KAJf,aAI6BkN,GAF/B,cAENtN,EAFM,yBAGLA,EAASC,MAHJ,0DAML,GANK,yDAAH,uDCAE0X,GAAK,uCAAG,WAAMtb,EAAUE,GAAhB,eAAAc,EAAA,sEACDua,GAAaD,MAAMtb,EAAUE,GAD5B,cACdgB,EADc,OAEpBsC,EAAsBtC,EAAK+B,OAEvB/B,EAAK0Q,WACRlL,OAAOC,aAAaG,QAAQ,UAAUN,KAAKO,UAAU7F,EAAKmI,UAC1D3C,OAAOC,aAAaG,QAAQ,aAAaN,KAAKO,UAAU,CAAC6K,UAAU1Q,EAAK0Q,UAAU3O,MAAM/B,EAAK+B,MAAOjD,SAASkB,EAAKlB,SAASsC,KAAKpB,EAAKoB,QACrIoE,OAAOC,aAAaG,QAAQ,WAAWN,KAAKO,UAAU7F,EAAKsD,aAG3DkC,OAAOC,aAAaG,QAAQ,aAAaN,KAAKO,UAAU,CAAC9D,MAAM/B,EAAK+B,MAAOjD,SAASkB,EAAKlB,SAASsC,KAAKpB,EAAKoB,KAAMuE,SAAS3F,EAAK2F,YAChIH,OAAOC,aAAaG,QAAQ,eAAeN,KAAKO,UAAU7F,EAAK2T,OAC/DnO,OAAOC,aAAaG,QAAQ,kBAAkBN,KAAKO,UAAU7F,EAAKyD,mBAZ/C,kBAcbzD,GAda,2CAAH,wDAiBLgB,GAAS,SAACpC,GACtB4G,OAAOC,aAAakD,WAAW,cAC/BnD,OAAOC,aAAakD,WAAW,gBAC/BnD,OAAOC,aAAakD,WAAW,mBAC/BnD,OAAOC,aAAakD,WAAW,WAC/BnD,OAAOC,aAAakD,WAAW,YAC/B/J,EAAQ,OCuFM0b,OA9Ff,WAAe,IAAD,EACgCzb,mBAAS,+BADzC,mBACN0b,EADM,KACUC,EADV,OAE0B3b,mBAAS,MAFnC,mBAEN4b,EAFM,KAEO/b,EAFP,OAKWG,mBAAS,MALpB,mBAKNmB,EALM,KAKApB,EALA,KAoCb,OAtBAkH,qBAAU,WACN2U,GACFC,YAAW,WACVhc,EAAgB,QACd,OAEH,CAAC+b,IAEH3U,qBAAU,WACT,IAAM9F,EAAOsF,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eACjD1F,IACFpB,EAAQoB,GACRsC,EAAsBtC,EAAK+B,UAE5B,IAED+D,qBAAU,WACE0U,EAAPxa,EAA0B,kCACJ,iCAE1B,CAACA,IAGD,sBAAKG,UAAU,MAAMX,MAAO,CAACiB,OAAO,QAAS8Z,gBAAgB,OAAD,OAAQA,EAAR,KAA2BI,eAAe,SAAtG,UACEF,GAAgB,cAAC,GAAD,CAAcxa,MAAOwa,EAAaxa,MAAOC,QAASua,EAAava,UAE/EF,EACA,mCACEA,EAAK0Q,UACJ,qCACA,cAAC,EAAD,CAAQ1Q,KAAMA,EAAMgB,OAAQ,WAAKA,GAAOpC,MACxC,cAACgc,GAAD,CAAgB5a,KAAMA,EAAMpB,QAASA,EAASF,gBAAiBA,OAGhE,mCACEsB,EAAK2F,SAEL,qCACC,cAAC,EAAD,CAAQ3F,KAAMA,EAAMgB,OAAQ,WAAKA,GAAOpC,MACxC,cAACic,GAAD,CAAiB7a,KAAMA,EAAMpB,QAASA,EAASF,gBAAiBA,OAGjE,cAAC,EAAD,CAAcsB,KAAMA,EAAMpB,QAASA,EAASF,gBAAiBA,QAMjE,qBAAKc,MAAO,CAACiB,OAAO,OAAOf,QAAQ,OAAS6Y,aAAa,cAAzD,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAO7Q,KAAK,YAAZ,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACC,cAAC,EAAD,CAAchJ,gBAAiBA,EAAiBC,kBAAmBmc,GAAgBX,aAEpF,eAAC,IAAD,CAAOzS,KAAK,IAAZ,UACC,cAAC,EAAD,CAAWhJ,gBAAiBA,EAAiBC,kBAAmByb,GAAOxb,QAASA,IAChF,qBAAKY,MAAO,CAAEJ,QAAQ,OAAOgH,UAAU,OAAOlF,WAAW,OAAO7B,aAAa,OAE5EsK,aAAa,oBACbjK,QAAQ,OAAOC,WAAW,SAASgC,gBAAgB,SAHpD,SAIC,gCACC,oBAAInC,MAAO,CAACH,aAAa,QAAzB,4BACA,oBAAIG,MAAO,CAACH,aAAa,QAAzB,sBACA,oBAAIG,MAAO,CAACH,aAAa,QAAzB,0BACA,oBAAIG,MAAO,CAACH,aAAa,QAAzB,0BACA,0CACA,gDACA,6D,cC7FT0b,IAASC,OACR,cAAC,IAAD,UACC,cAAC,GAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.85f39f75.chunk.js","sourcesContent":["import React,{useState} from \"react\" \nimport {Link } from \"react-router-dom\"\n\nconst LoginForm=({setNotification,submitCredentials, setUser})=>{ \n\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\")\n\n\tconst inputStyle={width:\"400px\",padding:\"0\",marginBottom:\"55px\", border:\"none\", borderBottom:\"1px solid black\"}\n\n\treturn ( \n\t\t<form  style={{paddingTop:\"40px\",display:\"flex\", alignItems:\"center\"}}\n\t\t\tonSubmit={async (event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tconst user=await submitCredentials({username,password})\n\t\t\t\tif(user){\n\t\t\t\t\tsetUser(user) \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Wrong username or password :(\"}) \n\t\t\t\t}\n\t\t\t}}> \n\t\t\t<div className=\"credentialBox\" >\n\t\t\t\t<div className=\"credentialBox__inputContainer\">\n\t\t\t\t\t<h1 style ={{marginBottom:\"80px\"}} className=\"HomeRoute a-routeFadeIn\">Log in</h1>\n\t\t\t\t\t<input style={inputStyle} value={username} placeholder=\"Username\" \n\t\t\t\t\t\tonChange={(event)=>{setUsername(event.target.value) }}/>\n\t\t\t\t\t<input type=\"password\"style={inputStyle} value={password} placeholder=\"Password\" \n\t\t\t\t\t\tonChange={(event)=>{setPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div className=\"credentialBox__submission\" >\n\t\t\t\t\t<button className=\"themed--1\" style={{width:\"400px\",height:\"40px\"}}>Log in</button>\n\t\t\t\t\t<p> Don&apos;t have an account? <Link style={{color:\"#ff8933\"}} to=\"/register\"> Sign up </Link></p>\n\t\t\t\t\t<p> Want a quick <Link style={{color:\"#ff8933\"}} to=\"/tutorial\">tutorial </Link>?</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\t\n\t)\n} \n\nexport default LoginForm\n","import React,{useState} from \"react\" \nimport {useHistory,Link} from \"react-router-dom\"\n\nconst RegisterForm=({setNotification, submitCredentials})=>{ \n\tconst history=useHistory()\n\tconst [username, setUsername]=useState(\"\")\n\tconst [password, setPassword]=useState(\"\") \n\n\treturn ( \n\t\t<form style={{paddingTop:\"40px\",display:\"flex\", alignItems:\"center\"}}\n\t\t\tonSubmit={async (event)=>{\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif(!username || !password){\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Please fill out both fields\"})\n\n\t\t\t\t}\n\t\t\t\telse if( await\tsubmitCredentials({username,password})){ //Account creation succeeded\n\t\t\t\t\thistory.push(\"/\")\n\t\t\t\t\tsetNotification({color:\"white\",message:\"User created!\"})\n\t\t\t\t}\n\t\t\t\telse{setNotification({color:\"red\",message:\"Username already exists\"})}\n\t\t\t}}> \n\t\t\t<div className=\"credentialBox\">\n\t\t\t\t<div className=\"credentialBox__inputContainer\">\n\t\t\t\t\t<h1 style ={{marginBottom:\"80px\"}} className=\"HomeRoute a-routeFadeIn\"> Register</h1>\n\t\t\t\t\t<input className=\"credentialBox__input\" value={username} placeholder=\"Username\" \n\t\t\t\t\t\tonChange={(event)=>{setUsername(event.target.value) }}/>\n\t\t\t\t\t<input type=\"password\"className=\"credentialBox__input\" value={password} placeholder=\"Password\" \n\t\t\t\t\t\tonChange={(event)=>{setPassword(event.target.value) }}/> \n\t\t\t\t</div>\n\t\t\t\t<div className=\"credentialBox__submission\">\n\t\t\t\t\t<button className=\"themed--1\" style={{width:\"400px\",height:\"40px\"}}>Register</button> \n\t\t\t\t\t<p> Have an account? <Link style={{color:\"#ff8933\"}} to=\"/\"> Log in </Link></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\t\n\t)\n} \n\n\nexport default RegisterForm\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Navbar from \"react-bootstrap/Navbar\"\n\nconst Banner=({user,logout})=>{ \n\tconst history = useHistory()\n\tconst logoStyle={width:100}\n\t// Because clicking on a link in navbar would leave it expanded\n\treturn user\n\t\t? (\n\t\t\t<div style={{position:\"fixed\",display:\"flex\", alignItems:\"center\",height:\"80px\",width:\"100%\"}}> \n\t\t\t\t<h3 style={{marginLeft:\"80px\",marginRight:\"22px\",color:\"white\"}}>{user.name}</h3>\n\t\t\t\t<h3 style={{paddingLeft:\"22px\",color:\"white\",borderLeft:\"1px solid white\",cursor:\"pointer\"}}\n\t\t\t\t\tonClick={()=>{logout();history.push(\"/\")}}><a>Sign out</a></h3> \n\t\t\t</div>\n\t\t\n\t\t)\n\t\t:(\n\t\t\t<Navbar style={{display:\"flex\", justifyContent:\"center\",backgroundColor:\"#eeeeee\", color:\"black\"}}>\n\t\t\t\t<Navbar.Brand><img style={logoStyle} src=\"https://svgsilh.com/svg_v2/1539614.svg\"/></Navbar.Brand>\n\t\t\t\t<Navbar.Text><h2 style={{display:\"inline\"}} >Welcome to </h2><h2 style={{color:\"#ff8933\",display:\"inline\"}}>Fitness Express</h2></Navbar.Text>\n\t\t\t</Navbar>\n\t\t)\n}\n\n\nexport default Banner\n","let token = null \n\nconst setToken = newToken=> {\n\ttoken = `bearer ${newToken}`\n}\n\nconst getToken=()=>token \n\nexport default {setToken,getToken}","import axios from \"axios\"\nimport tokenService from \"./token\"\nconst baseUrl = \"/api/workout\"\n\nconst getUserWorkouts=async()=>{\n\tconst config ={\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\tconst response = await axios.get(baseUrl, config)\n\treturn response.data\n}\n\nconst sendWorkout=async(workoutData)=> {  //if trainer, {exercises: {}, _id:}, if athlete just {exercises:}\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\n\ttry{\n\t\tconst response = await axios.post(baseUrl, workoutData, config)\n\t\treturn response.data \n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nconst resetRegiment=async()=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken(),\n\t\t}}\n\tconst response = await axios.put(`${baseUrl}/regiment`, null, config)\n\treturn response.data\n}\n\nconst setRegiment=async(regiment)=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken(),\n\t\t}}\n\tconst response = await axios.patch(`${baseUrl}/regiment`, regiment, config)\n\treturn response.data\n}\n\nconst addRoutine = async(routine)=>{ \n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken(),\n\t\t}}\n\tconst response = await axios.post(`${baseUrl}/routines`, routine, config)\n\treturn response.data \n}\n\nconst setRoutines=async(routines)=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken(),\n\t\t}}\n\tconst response = await axios.put(`${baseUrl}/routines`, routines, config)\n\treturn response.data\n}\n\n\nexport default {resetRegiment,sendWorkout,getUserWorkouts,setRegiment,addRoutine,setRoutines}\n","import React,{useState} from \"react\"\n\nconst DayGrid=({day,currentRegiment,setCurrentRegiment})=>{ \n\t/*Title and input portion of each day in regimentForm */\n\n\tconst [exercise,setExercise] = useState(\"\") //individual exercise to control input\n\n\treturn( \n\n\t\t<form className=\"regimentForm__dayGrid\" onSubmit={(event)=>{event.preventDefault()\n\t\t\t{/*Append submitted exercise to one of day arrays in currentRegiment*/}\n\t\t\tif(exercise.trim()){ //no empty strings\n\t\t\t\tif(currentRegiment[day].includes( //no same exercise in day\n\t\t\t\t\t(exercise.charAt(0).toUpperCase()+ // compare formatted entry\n\t\t\t\t\texercise.slice(1)).trim())){\n\t\t\t\t\tconsole.log(\"(TODO notification) you're already doing that today\")} \n\n\t\t\t\telse{ //format and update state\n\t\t\t\t\tsetCurrentRegiment({...currentRegiment, [day]:currentRegiment[day].concat(\n\t\t\t\t\t\t(exercise.charAt(0).toUpperCase()+exercise.slice(1)).trim()) }) //Capitalise first letter, and trim whitespace off ends\n\t\t\t\t\tsetExercise(\"\")\n\t\t\t\t}}\n\t\t}}> \n\n\t\t\t<div style={{alignItems:\"center\", display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t\t<h2>{day}</h2> \n\t\t\t\t<input style={{width:\"120px\"}}value={exercise} name={day} placeholder=\"exercise\" onChange={(event)=>{\n\t\t\t\t\tif(event.target.value!==\" \"){\n\t\t\t\t\t\tsetExercise(event.target.value)\n\t\t\t\t\t}}}/>\n\t\t\t\t<button className=\"themed--1\" style={{margin:\"5px\",padding:\"0px\",width:\"57px\"}} type=\"submit\">\n\t\t\t\t\tadd\n\t\t\t\t</button>\n\t\t\t</div> \n\n\t\t</form> \n\t)\n\n}\n\nexport default DayGrid\n","import React from \"react\"\n\nconst DaySubmissions=({currentRegiment,setCurrentRegiment, day})=>{\n\t/*used in Athlete RegimentForm,to show declared exercises of each day */\n\n\treturn(\n\t\t<div className=\"pageContainer\"key={day} >\n\t\t\t<ul>\n\t\t\t\t{currentRegiment[day].map((exercise,i)=>( \n\t\t\t\t\t<div key={`${exercise}${i}`} style={{padding:\"2px\"}}> \n\t\t\t\t\t\t<div style={{display:\"flex\",alignItems:\"center\", justifyContent:\"center\",}}>\n\t\t\t\t\t\t\t<p style={{margin:\"0\",marginRight:\"6px\"}}>\n\t\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t\t</p> \n\t\t\t\t\t\t\t{/*remove exercise*/}\n\t\t\t\t\t\t\t<button className=\"themed--2\" style={{marginLeft:\"auto\"}} type=\"button\" onClick={()=>\n\t\t\t\t\t\t\t\tsetCurrentRegiment( \n\t\t\t\t\t\t\t\t\t{...currentRegiment, \n\t\t\t\t\t\t\t\t\t\t[day]:currentRegiment[day].filter((name)=>(\n\t\t\t\t\t\t\t\t\t\t\tname!=exercise)\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t)}>remove\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)) }\n\t\t\t</ul>\n\n\t\t</div>\n\t\t\t\t\t\t\n\t)\n\n}\n\n\nexport default DaySubmissions","import React,{useState,useEffect} from \"react\"\nimport exerciseService from \"../../Services/exercises\"\nimport {useHistory} from \"react-router-dom\"\nimport DayGrid from \"./DayGrid\"\nimport DaySubmissions from \"./DaySubmissions\"\nimport Container from \"react-bootstrap/Container\" \n\nconst RegimentForm=({backButton,user,setUser,currentRegiment, setCurrentRegiment})=>{ \n\t/*lists each active day declared by athlete ,and allows appending exercises to them*/\n\n\tconst [submissionVisibility,setVisibility]=useState(\"hidden\") \n\tconst history = useHistory() \n\n\tconst regimentHasEmptyDay=()=>{  //returns true if any entry is empty\n\t\tfor (const key in currentRegiment){\n\t\t\tif(currentRegiment[key]&&currentRegiment[key].length===0) \n\t\t\t\treturn true \n\t\t}\n\t\treturn false\n\t}\n\t\n\n\tconst finaliseRegiment=async()=>{ //when regiment form has been filled out\n\t\tif (!regimentHasEmptyDay()){ // Don't allow submission unless all active days are filled \n\t\t\tconst returnedRegiment=await exerciseService.setRegiment(currentRegiment) \n\t\t\t//use server's response as data to be set. Also sets regIsSet in server\n\t\t\tconst loggedUser=JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\n\t\t\tsetUser({...user, regIsSet:true}) //update local data\n\t\t\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(returnedRegiment))\n\t\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({...loggedUser,regIsSet:true}))\n\t\t\thistory.push(\"/\")\n\t\t}\n\t}\n\tuseEffect(()=>{\n\t\tif(!Object.entries(currentRegiment).length){ //No days (happens on refresh), redirect back to selection\n\t\t\thistory.push(\"/\") \n\t\t}\n\t},[])\n\n\tuseEffect(()=>{\n\t\tregimentHasEmptyDay() \n\t\t\t? setVisibility(\"hidden\")\n\t\t\t: setVisibility(\"visible\") \n\t},[currentRegiment]) //Make submission button appear only once everything is filled\n\n\treturn(\n\t\t<div className=\"pageContainer\">\n\t\t\t<Container className=\"regimentForm\" >\n\t\t\t\t<div className=\" regimentForm__fadeContainer HomeRoute a-routeFadeIn\"> \n\t\t\t\t\t<h1>Fill out your weekly regiment</h1>\n\t\t\t\t\t<div className=\"regimentForm__weekContainer\"> \n\t\t\t\t\t\t{/*for each  (non-null) day-array in currentRegiment, create a DayGrid to fill in target exercises*/}\n\t\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>{  \n\t\t\t\t\t\t\tif(!currentRegiment[item]){return null}\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<div key={i} className=\"regimentForm__dayContainer\">\n\t\t\t\t\t\t\t\t\t<DayGrid day={item} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>\n\t\t\t\t\t\t\t\t\t<DaySubmissions key={item} day={item} setCurrentRegiment={setCurrentRegiment}currentRegiment={currentRegiment}/> \n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div> \n\t\t\t\t</div>\n\t\t\t\t<div style={{marginBottom:\"5px\",marginTop:\"auto\"}}>\n\t\t\t\t\t<button className=\"themed--1\" \n\t\t\t\t\t\tstyle={{marginRight:\"5px\",width:\"80px\",height:\"50px\",border:\"none\", \n\t\t\t\t\t\t\tvisibility:submissionVisibility}}\n\t\t\t\t\t\tonClick={()=>{finaliseRegiment()}}>\n\t\t\t\t\tSave\n\t\t\t\t\t</button>   \n\n\t\t\t\t\t{backButton &&  //If editing existing regiment from AccountPage, backButton already in MenuCard =>\n\t\t\t\t<button className=\"themed--2\" style={{width:\"80px\",height:\"50px\"}}\n\t\t\t\t\tonClick={()=>{history.push(\"/\")}}>\n\t\t\t\t\tBack\n\t\t\t\t</button>   \n\t\t\t\t\t} \n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\nexport default RegimentForm\n","import React from \"react\"\n\nconst CheckBox = ({callback,value}) =>\n/*custom checkbox component */\n{\n\treturn ( \n\t\t<div className=\"checkContainer\" style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}>\n\t\t\t<label className=\"checkbox\">\n\t\t\t\t<span className=\"checkbox__input\">\n\t\t\t\t\t<input type=\"checkbox\" name=\"checkbox\" readOnly={true} value={value} checked={value} />\n\t\t\t\t\t<span className=\"checkbox__control\" onClick={()=>{callback()}}>\n\t\t\t\t\t\t<svg className=\"checkbox__svg\" xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' aria-hidden=\"true\" focusable=\"false\">\n\t\t\t\t\t\t\t<path fill='none' stroke='currentColor' strokeWidth='3' d='M1.73 12.91l6.37 6.37L22.79 4.59' />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</label>\n\t\t</div>\n\t)\n}\n\n\nexport default CheckBox","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport Banner from \"../../Components/Banner\"\nimport Container from \"react-bootstrap/Container\"\nimport CheckBox from \"../CheckBox\"\n\nconst DayForm=({setNotification,currentRegiment,setCurrentRegiment})=>{\n\t/* used by athlete to set Active/Rest days */\n\tconst history=useHistory()\n\n\tconst toggleRegimentDay=(dayKey)=>{  //toggles a specific day between null/empty array\n\t\tif (currentRegiment[dayKey]){\n\t\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:null})\n\t\t\treturn\n\t\t}\n\t\tsetCurrentRegiment({...currentRegiment, [dayKey]:[]})\n\t} \n\treturn(\n\t\t<div style={{overflow:\"auto\"}}>\n\t\t\t<Banner/>\n\t\t\t<Container>\n\t\t\t\t<form  className=\"dayForm\"> \n\t\t\t\t\t<h1 style={{fontWeight:\"bold\"}}>\n\t\t\t\t\t\tWhich days will you be working out on?</h1>\n\t\t\t\t\t<div className=\"dayForm__dayContainer\">\n\t\t\t\t\t\t{Object.keys(currentRegiment).map((item,i)=>( \n\t\t\t\t\t\t\t<div className=\"dayForm__dayBox\"key={i}>\n\t\t\t\t\t\t\t\t<h2 >{item}</h2>\n\t\t\t\t\t\t\t\t<CheckBox callback={()=>{toggleRegimentDay(item)}} value={currentRegiment[item]||\"\"}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"themed--1\" style={{width:\"50px\",marginTop:\"20px\"}}\n\t\t\t\t\t\tonClick={(event)=>{\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tlet hasAtLeastOne=false\n\t\t\t\t\t\t\tfor (const key in currentRegiment){\n\t\t\t\t\t\t\t\tif(currentRegiment[key]){\n\t\t\t\t\t\t\t\t\thasAtLeastOne=true }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (hasAtLeastOne) {\n\t\t\t\t\t\t\t\thistory.push(\"/athlete/setTargetWorkout\") \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tsetNotification({color:\"red\", message:\"Pick at least one day to exercise!\"})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>Next</button> \n\t\t\t\t</form>\n\t\t\t</Container>\n\t\t</div> \n\t)\n}\n\nexport default DayForm","import React,{useState,useEffect} from \"react\" \nimport {\n\tSwitch,\n\tRoute,\n\tuseLocation\n} from \"react-router-dom\"\n\nimport RegimentForm from \"./RegimentForm\"\nimport DayForm from \"./DayForm\"\n\nconst OnBoardAthlete=({setNotification, user,setUser})=>{ \n\t//Responsible for weekly regiment setup\n\tconst location=useLocation()\n\tconst [currentRegiment, setCurrentRegiment]=useState({})\n\n\tuseEffect(()=>{  \n\t\tconst regiment=JSON.parse(window.localStorage.getItem(\"currentRegiment\"))\n\t\tsetCurrentRegiment(regiment)\n\t},[]) \n\t\n\treturn (  \n\t\t<Switch location={location}>\n\t\t\t<Route path=\"/athlete/setTargetWorkout\"> {/*second page*/}\n\t\t\t\t<RegimentForm backButton={true} user={user} setUser={setUser} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>)\n\t\t\t</Route> \n\t\t\t<Route path=\"/\"> {/*initial page*/}\n\t\t\t\t<DayForm setNotification={setNotification} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/> \n\t\t\t</Route>\n\t\t</Switch>\n\t)\n} \n\nexport default OnBoardAthlete","import axios from \"axios\"\nimport tokenService from \"./token\"\n\nconst baseUrl = \"/api/clients\"\n\nconst addClient=async(client)=> { \n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\ttry{\n\t\tconst response = await axios.post(baseUrl, client, config)\n\t\treturn response.data  //returns whole trainer\n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nconst updateClient=async(client)=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\ttry{\n\t\tconst response = await axios.patch(baseUrl, client, config)\n\t\treturn response.data \n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nconst removeClient=async(id)=> {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\ttry{\n\t\tconst response = await axios.patch(`${baseUrl}/removeClient`, id, config)\n\t\treturn response.data \n\t}\n\tcatch{\n\t\treturn false \n\t}\n}\n\nexport default {addClient,updateClient,removeClient}","import React,{useState,useEffect} from \"react\"\nimport Container from \"react-bootstrap/Container\" \nimport clientService from \"../../Services/clients\" \nimport {useHistory} from \"react-router-dom\"\n\nconst OnBoardTrainer = ({setNotification,setUser}) => {\n\tconst [trainer, setTrainer]=useState(null)  //To hold newly created \"user\" data, until the \"next\" button is pressed\n\n\tconst [clients, setClients]=useState([]) //clients added, but pending registration\n\tconst [currentClient, setCurrentClient]=useState({name:\"\",username:\"\",password:\"\", validatePassword:\"\"})\n\tconst history = useHistory()\n\n\tuseEffect(()=>{\n\t\tif (trainer){\n\t\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(trainer.clients)) \n\t\t}\n\t},[trainer])\n\n\tconst clearClient=()=>{ \n\t\tif( currentClient.name && currentClient.username && currentClient.password &&\n\t\t(currentClient.password===currentClient.validatePassword))\n\t\t{ setClients(clients.concat(currentClient))\n\t\t\tsetCurrentClient({name:\"\",username:\"\",password:\"\", validatePassword:\"\"})}\n\t} \n\n\tconst addClient = async(client,index) => { //register client, ID is appended to trainer.\n\t\tconst updatedTrainer = await clientService.addClient(client)\n\t\tif (!updatedTrainer){\n\t\t\tsetNotification({color:\"red\",message:\"Client couldn't be added. Try a different username!\" })\n\t\t\tsetClients(clients.filter((client,i)=>index!=i)) //remove client from list after successful creation \n\t\t}\n\t\t\n\t\telse{ \n\t\t\twindow.localStorage.removeItem(\"currentRegiment\")\n\t\t\twindow.localStorage.removeItem(\"userWorkouts\")\n\t\t\tsetTrainer(updatedTrainer) \n\t\t\tsetClients(clients.filter((client,i)=>index!=i)) //remove client from list after successful creation \n\t\t\tsetNotification({color:\"green\",message:\"Client added successfully!\" })\n\t\t}\n\t}\n\n\tconst finaliseBoarding=()=> { \n\t\tif (trainer){ //trainer will only be non-null after a client is submitted\n\t\t\tsetUser(trainer)\n\t\t\thistory.push(\"/\")\n\n\t\t}\n\t} \n\n\treturn (\n\t\t<div className=\"pageContainer\" style={{flexDirection:\"column\"}}>\n\t\t\t<Container className=\"regimentForm\" >\n\t\t\t\t<form className=\"regimentForm__fadeContainer HomeRoute a-routeFadeIn\" \n\t\t\t\t\tstyle={{display:\"flex\",}}\n\t\t\t\t\tonSubmit={(event)=>{\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\tclearClient()}} > \n\t\t\t\t\t<h1>Add some clients ?</h1> {/*TODO hoverable info tooltip explaining what each field is*/}\n\t\t\t\t\t<h4>Write down their info so they can access their accounts :)</h4>\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tmarginTop:\"40px\",display:\"flex\", \n\t\t\t\t\t\t\t\n\t\t\t\t\t\tjustifyContent:\"center\",\n\t\t\t\t\t}}>\n\n\t\t\t\t\t\t<div style={{display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t\t\t\t\t<h2>Name</h2>\n\t\t\t\t\t\t\t<input  style={{marginBottom:\"5px\"}}\n\t\t\t\t\t\t\t\tonChange={(event)=>{ setCurrentClient({...currentClient,name:event.target.value}) }} \n\t\t\t\t\t\t\t\tplaceholder={currentClient.name || \"client name\"}\n\t\t\t\t\t\t\t\tvalue={currentClient.name} /> \n\t\t\t\t\t\t\t<h2>Username</h2>\n\t\t\t\t\t\t\t<input style={{marginBottom:\"30px\"}}onChange={(event)=>{ setCurrentClient({...currentClient,username:event.target.value}) }} \n\t\t\t\t\t\t\t\tplaceholder={currentClient.username || \"client username\"}\n\t\t\t\t\t\t\t\tvalue={currentClient.username} /> \n\t\t\t\t\t\t\t<h2>Password</h2>\n\t\t\t\t\t\t\t<input style={{marginBottom:\"5px\"}}\n\t\t\t\t\t\t\t\tonChange={(event)=>{setCurrentClient({...currentClient,password:event.target.value}) }} \n\t\t\t\t\t\t\t\tplaceholder={currentClient.password || \"client password\"}\n\t\t\t\t\t\t\t\tvalue={currentClient.password}/> \n\n\t\t\t\t\t\t\t<h2>Repeat password</h2>\n\t\t\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,validatePassword:event.target.value}) }}\n\t\t\t\t\t\t\t\tplaceholder={currentClient.validatePassword || \"repeat client password\"} \n\t\t\t\t\t\t\t\tvalue={currentClient.validatePassword} /> \n\t\t\t\t\t\t\t<button type=\"submit\" \n\t\t\t\t\t\t\t\tclassName=\"themed--1\" style={{alignSelf:\"center\",display:\"block\",margin:\"20px\",width:\"50px\", height:\"50px\"}}>\n\t\t\t\t\t\t\t\t\t\tadd\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\t\t\n\t\t\t\t\t\t<div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"100px\"}}>\n\t\t\t\t\t\t\t<h1 >Clients pending:</h1> \n\t\t\t\t\t\t\t{clients.map((client,i)=>(\n\t\t\t\t\t\t\t\t<div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}key={i}>\n\t\t\t\t\t\t\t\t\t<h4 style={{marginTop:\"20px\"}}>{client.name}</h4>\n\t\t\t\t\t\t\t\t\t<button className=\"themed--2\" onClick={()=>{addClient(client,i)} } >Register</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))} \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</form>\n\n\t\t\t\t<button className=\"themed--1\" style={{marginBottom:\"40px\",height:\"50px\",width:\"50px\"}}onClick={()=>{ finaliseBoarding() }}>next</button> \n\t\t\t</Container>\n\t\t</div>\n\t) \n}\n \nexport default OnBoardTrainer\n","import axios from \"axios\"\nimport tokenService from \"./token\"\nconst baseurl = \"/api/users/name\"\n\nconst changeName = async name => {\n\tconst config = {\n\t\theaders:{Authorization:tokenService.getToken()}\n\t}\n\ttry{\n\t\tconst response = await axios.post(baseurl, name,config)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default {changeName}","import React,{useState} from \"react\"\nimport OnBoard_A from \"./Athlete/OnBoard_A\"\nimport OnBoard_T from \"./Trainer/OnBoard_T\"\nimport {\n\tSwitch,\n\tRoute,\n\tuseHistory\n} from \"react-router-dom\"\nimport Banner from \"../Components/Banner\" \nimport Container from \"react-bootstrap/Container\"\n\nimport nameService from \"../Services/name\"\n\nconst LandingPage = ({setNotification,  user, setUser}) =>{ \n\tconst [name,setName]=useState(null) \n\tconst history = useHistory()\n\n\treturn(\n\t\t<div style={{overflow:\"auto\",height:\"100%\"}}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/athlete\">\n\t\t\t\t\t<OnBoard_A setNotification={setNotification} user={{...user,name}} setUser={setUser}/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/trainer\">\n\t\t\t\t\t<OnBoard_T setNotification={setNotification} setUser={setUser}/>  \n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\"> \n\t\t\t\t\t<Banner/>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<form className=\"dayForm\"> \n\t\t\t\t\t\t\t<h1 style={{fontWeight:\"bold\"}}>\n\t\t\t\t\tMy name is ...</h1>\n\t\t\t\t\t\t\t<input style={{fontSize:\"20px\",textAlign:\"center\",marginBottom:\"20px\"}} \n\t\t\t\t\t\t\t\tonChange={(event)=>{setName(event.target.value)}}/> \n\t\t\t\t\t\t\t<h1 style={{fontWeight:\"bold\"}}>\n\t\t\t\t\tand I am ...</h1>\n\t\t\t\t\t\t\t<div className=\"dayForm__dayContainer\">\n\t\t\t\t\t\t\t\t<button className=\"themed--1\" style ={{marginRight:\"20px\",height:\"50px\",width:\"150px\"}}\n\t\t\t\t\t\t\t\t\tonClick={(event)=>{\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\t\t\tif(name) {\n\t\t\t\t\t\t\t\t\t\t\tnameService.changeName({name:name})\n\t\t\t\t\t\t\t\t\t\t\thistory.push(\"/trainer\")\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<h3 style={{color:\"white\"}}>A trainer</h3></button>\n\t\t\t\t\t\t\t\t<button className=\"themed--1\" style ={{marginRight:\"20px\",height:\"50px\",width:\"150px\"}}\n\t\t\t\t\t\t\t\t\tonClick={(event)=>{ \n\t\t\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\t\t\tif (name){ \n\t\t\t\t\t\t\t\t\t\t\tnameService.changeName({name:name})\n\t\t\t\t\t\t\t\t\t\t\thistory.push(\"/athlete\")\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<h3 style={{color:\"white\"}}>An athlete</h3></button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Container>\n\t\t\t\t</Route>\n\t\t\t</Switch> \n\t\t</div>\n\t)\n}\nexport default LandingPage\n","import React from \"react\"\nimport {useHistory} from \"react-router-dom\"\nconst TutorialPage=()=>{\n\n\tconst history = useHistory() \n\n\tconst textStyle={margin:\"10px\"}\n\tconst imageStyle={marginTop:\"50px\",marginBottom:\"50px\",maxHeight:\"90%\",maxWidth:\"90%\"}\n\n\treturn(\n\t\t<div className=\"a-fade\"\n\t\t\tstyle={{overflowY:\"scroll\",display:\"flex\", flexDirection:\"column\", alignItems:\"center\",\n\t\t\t\tborderRadius:\"5px\",marginTop:\"20px\",marginLeft:\"200px\", \n\t\t\t\tmarginRight:\"200px\",width:\"100%\", backgroundColor:\"white\"}}>\n\t\t\t<div>\n\t\t\t\t<button onClick={()=>{history.push(\"/\")}} className=\"themed--1\">\n\t\t\t\tBack to login\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<h1 style={{marginTop:\"20px\",marginBottom:\"20px\"}}><strong>Welcome to Fitness Express!</strong></h1> \n\t\t\t<h5 style={textStyle}>\n\t\t\t\tOur goal is to assist personal trainers and athletes alike, \n\t\t\t\tto <strong>monitor athletic progress</strong>, and keep a record of their fitness journey. \n\t\t\t\tThis app provides tools for both types of users in order to accomodate that goal, whilst also making your fitness life more manageable and organised.\n\t\t\t</h5>\n\t\t\t<h2 style={{margin:\"20px\", textAlign:\"center\"}}><strong>For Athletes:</strong></h2> \n\t\t\t<h5 style={textStyle}> \n\t\t\tAs soon as you register and log in to your fresh account, you will be prompted to fill out a form detailing your weekly workout schedule.\n\t\t\t</h5>\n\t\t\t<img style={imageStyle} src={\"../Media/RegimentForm.png\"} />\n\n\t\t\t<h5 style={textStyle}> \n\t\t\tThe one thing to remember is that if you repeat the same exercise on different days, you should write them in the exact same way. \n\t\t\tE.g. <strong>&apos;Pushups&apos;</strong> and <strong>&apos;Push-ups&apos;</strong> will be treated as different exercises!\n\t\t\t</h5>\n\t\t\t<h5 style={textStyle}>\n\t\t\tAfter you submit this form, you&apos;ll be set to start submitting your workouts.\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\tEvery day that you log in to your account, if you have a workout scheduled for that day, the &apos;Exercise Submission&apos; \n\t\t\tpage will allow you to submit any of the scheduled exercises. \n\t\t\t</h5>\n\t\t\t<img style={imageStyle} src={\"../Media/ExerciseSubmission.png\"} />\n\t\t\t<h5 style={textStyle}>\n\t\t\t\tAfter having submitted at least once, you&apos;ll be able to view your workout history, and run analyses on your exercise data.\n\t\t\t\tAs you submit more workouts, the more data we&apos;ll we able to utilise for our analyses, and provide a more detailed picture of your work. \n\t\t\t</h5>\n\t\t\t<img style={imageStyle} src={\"../Media/Analysis.png\"} />\n\n\t\t\t<h2 style={{margin:\"20px\", textAlign:\"center\"}}><strong>For Trainers:</strong></h2> \n\t\t\t<h5 style={textStyle}> \n\t\t\tAfter registering and logging in for the first time, you will be prompted to register accounts for any clients that you are working with.\n\t\t\tYou need to provide a username and password for each client, as well as a name to help you identify them in the app.\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\tKeep a track of the credentials of each client account, so that they can freely access their account and enjoy all the benefits outlined \n\t\t\tin the &apos;For Athletes&apos; section. Don&apos;t worry too much about the strength of their password, as they can change it as soon as they \n\t\t\tlog in.\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\tAs a trainer, you have a page to view all your clients, and edit their weekly regiment. The regiment will comprise the exercises that your client\n\t\t\tmay submit on any given day. You may fill out a regiment day one exercise at a time, or assign a routine.\n\t\t\t</h5>\n\t\t\t<img style={imageStyle} src={\"../Media/Clients.png\"} />\n\t\t\t<h5 style={textStyle}>\n\t\t\tRoutines are pre-made lists of exercises that you frequently assign to clients, in order to avoid typing them out each time.\n\t\t\tYou can access your routines from the relevant menu option, and create as many as you need. \n\t\t\t</h5>\n\t\t\t<img style={imageStyle} src={\"../Media/Routines.png\"} />\n\t\t\t<h5>\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\tUsing routines, the next time you&apos;re setting up a new client,  you can assign a day&apos;s exercises with the click of a button.\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\tFinally, you can view any client&apos;s workout history, and analyse their progress on any exercise.\n\t\t\t</h5>\n\t\t\t<img style={imageStyle} src={\"../Media/History.png\"} /> \n\t\t\t<h1 style={{paddingBottom:\"50px\"}} ><strong>Happy Lifting!</strong></h1>\n\n\t\t</div>\n\n\n\t)\n}\n\nexport default TutorialPage\n","export const getInvalidExercises = (exerciseArray) =>{ //look for mangled fields in exercise submission\n\tconst invalidExercises=[]\n\texerciseArray.forEach((exercise)=>{ //if exercise not filled out properly, populate array\n\t\tif( !exercise.reps||!exercise.sets || exercise.sets==0 || exercise.reps==0){\n\t\t\tinvalidExercises.push(exercise.name) //returns name of exercise\n\t\t}\n\t}) \n\treturn invalidExercises\n}\n\nexport const getTodaysExercises = (currentRegiment) => { \n\t/*Choose todays exercises out of weekly regiment*/ \n\tconst day=(new Date()).getDay() //Sunday starts at 0 with Date() - with currentRegiment at 6.\n\tconst exercisesForToday = day===0\n\t\t? Object.values(currentRegiment)[6] //Sunday\n\t\t: Object.values(currentRegiment)[day-1] //All other days \n\treturn exercisesForToday\n}\n\nexport const exercisesFromWorkouts=(workouts)=>{\n\tconst exerciseArray = [] \n\tworkouts.map((dayObject)=>(dayObject.exercises))\n\t\t.forEach((workout)=>{ \n\t\t\texerciseArray.push(...workout)\n\t\t})\n\treturn exerciseArray \n}\n\n//same as above, but one step further\nexport const exerciseNamesFromWorkouts=(workouts)=>{ //gets unique names of exercises\n\tconst uniqueNames=[...new Set //set gets unique names, and spread to turn into array\n\t(exercisesFromWorkouts(workouts).map((exercise)=>exercise.name))] // for every exercise, return just the name\n\treturn  uniqueNames\n}\n\nexport const filterExercisesByName = (exercises, name) => ( \n\t//Filter exercise array of a workout object\n\texercises.filter((exercise) => (\n\t\texercise.name.toLowerCase().includes(name.toLowerCase())\n\t))\n) \nexport const filterWorkoutsByDate = (workouts, dates) => {  \n\t//Date property is in workout object, not in every individual exercises\n\treturn workouts && workouts.filter((workout)=>(new Date(workout.date)>= dates[0] && new Date(workout.date)<=dates[1]))  //date[0] and [1] are min and max bounds to filter by\n}\n\nexport const getTotalReps = (exercises, name) => { \n\ttry{\n\t\treturn filterExercisesByName(exercises, name) //filter exercises by name \n\t\t\t.map((exercise) => (exercise.reps*exercise.sets) //total reps on exercise\n\t\t\t\t.reduce((sum,currentValue)=>(sum+currentValue)) //sum all\n\t\t\t) }\n\tcatch{\n\t\tconsole.log(\"Provided exercise does not seem to be in the array\") \n\t} \n}\n\nexport const datedAnalysis=(workouts,exerciseName,interval,parameter)=>{\n\t/* Get array of daily or monthly total reps or total weight lifted. \n\tinterval = \"daily\" / \"monthly\"  \n\tparameter=\"reps\"/weight\"*/\n\n\tif(interval!==\"daily\" && interval !== \"monthly\"){\n\t\tconsole.log(\"Interval is invalid\")\n\t\treturn }\n\n\tconst getTime = interval === \"daily\" //To compare time of workouts \n\t\t? (exercise) => (new Date (exercise.date).toDateString()) // Full date \n\t\t: (exercise) => (new Date (exercise.date).toLocaleDateString(\"default\",{month:\"long\",year:\"numeric\"}))  // Month and year \n\n\tconst filteredWorkouts=[] //Array of workouts containing date and analysed exercise\n\tlet accumulate //function to accumulate data (reps / weight) and populate filteredWorkouts\n\n\tswitch(parameter){\n\tcase(\"reps\"):\n\t\taccumulate=(workoutObject)=>(workoutObject.exercise.sets*workoutObject.exercise.reps) // accumulate reps \n\t\tworkouts.forEach((workout)=>{ \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)  // get requested exercise by name\n\t\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})}) //keep only data we care about\n\t\t})\n\t\tbreak\n\tcase(\"weight\"):\n\t\taccumulate=(workoutObject)=>(workoutObject.exercise.weight*workoutObject.exercise.sets*workoutObject.exercise.reps)  //accumulate total weight lifted \n\t\tworkouts.forEach((workout)=>{ \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.weight && exercise.name==exerciseName) // must also contain weight field\n\t\t\tresults.forEach((item)=>{filteredWorkouts.push({date:workout.date,exercise:item})})\n\t\t})\n\t\tbreak\n\tdefault:\n\t\tconsole.log(\"when more options, will make this useful :)\") \n\t} \n\tif(filteredWorkouts.length==0){return null} //if no suitable exercise found, abort\n\n\tlet timeProperty // for storing formatted dates\n\tlet total // accumulator for reps or weight\n\tconst uniqueTimes=[] //array of unique dates or months\n\n\tif (filteredWorkouts.length==1){ // If only one workout, return reps*sets(*weight) and date\n\t\ttotal=accumulate(filteredWorkouts[0])\n\t\ttimeProperty = getTime(filteredWorkouts[0]) \n\t\treturn [{timeProperty, total}]\n\t}\n\n\tfilteredWorkouts.forEach((workout,i)=>{\n\t\tif(i===0){ // if first repetition\n\t\t\ttimeProperty = getTime(workout)  //initialise data\n\t\t\ttotal=accumulate(workout)\n\t\t} \n\t\telse{\n\t\t\tif (timeProperty === getTime(workout)){ // Same date \n\t\t\t\tif (i!==filteredWorkouts.length-1){ // Not end of array, aggregate reps\n\t\t\t\t\ttotal+=accumulate(workout)\n\t\t\t\t}\n\t\t\t\telse{ // End of array, push final entry\n\t\t\t\t\ttotal+=accumulate(workout)\n\t\t\t\t\tuniqueTimes.push({timeProperty,total}) }  \n\t\t\t}\n\n\t\t\telse{ // different date\n\t\t\t\tuniqueTimes.push({timeProperty, total}) //push accumulation so far\n\t\t\t\ttimeProperty=getTime(workout) //set time and accumulator equal to current workout\n\t\t\t\ttotal=accumulate(workout) }\n\t\t} \n\t})\n\treturn uniqueTimes \n} \n\nexport const allTimeAnalysis=(workouts,exerciseName,parameter)=>{ \n\tconst filteredWorkouts=[]\t\n\tlet total=0\n\n\tswitch(parameter){\n\tcase \"reps\":\n\t\tworkouts.forEach((workout)=>{   \n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>exercise.name==exerciseName)   // filter exercises\n\t\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise}) // push data\n\t\t\t}) \n\t\t}) \n\t\tfilteredWorkouts.forEach((workout)=>{  \n\t\t\ttotal+=workout.exercise.reps*workout.exercise.sets \n\t\t})\n\t\tbreak\n\n\tcase \"weight\":\n\t\tworkouts.forEach((workout)=>{\n\t\t\tconst\tresults=workout.exercises.filter((exercise)=>(exercise.weight && exercise.name==exerciseName))\n\t\t\tresults.forEach((exercise)=>{filteredWorkouts.push({date:workout.date,exercise})\n\t\t\t}) \n\t\t})\n\t\tfilteredWorkouts.forEach((workout)=>{\n\t\t\ttotal+=workout.exercise.weight*workout.exercise.reps*workout.exercise.sets \n\t\t}) \n\t\tbreak\n\tdefault:\n\t\tconsole.log(\"For when more options included\")\n\t}\n\n\tif (total===0) return null\n\treturn [{timeProperty:\"total\", total:total||null}]\n}","import React from \"react\"\nimport Table from \"react-bootstrap/Table\"\n\nconst HistoryWorkout = ({workout}) => {\n\t/*Single workout table in History*/\n\n\tif(workout){\n\t\tconst workoutDate=new Date(workout.date)\n\t\tconst workoutMins= workoutDate.getMinutes() < 10\n\t\t\t? \"0\"+workoutDate.getMinutes() // to make double digit\n\t\t\t: workoutDate.getMinutes()\n\t\treturn( \n\t\t\t<>\n\t\t\t\t<h1 style={{backgroundColor:\"\",color:\"black\",padding:\"10px\",borderRadius:\"20px\",\n\t\t\t\t\tmarginTop:\"40px\"}}>{workoutDate.toDateString() +\", \" \n\t\t\t\t\t\t\t\t+ workoutDate.getHours()+ \":\" \n\t\t\t\t\t\t\t\t+ workoutMins}</h1>\n\t\t\t\t<Table striped bordered hover variant=\"dark\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr style={{backgroundColor:\"black\"}}> \n\t\t\t\t\t\t\t<th className=\"col-1\"><h2>Exercise</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2>Repetitions</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2>Sets</h2></th>\n\t\t\t\t\t\t\t<th className=\"col-1\"><h2>Weight</h2></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{workout.exercises.map((exercise,index) => (\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.name}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.reps}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.sets}</h3></td>\n\t\t\t\t\t\t\t\t<td className=\"col-1\"><h3 style={{color:\"white\"}}>{exercise.weight || 0}</h3></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</>\n\t\t)}\n}\nexport default HistoryWorkout","import React from \"react\"\nimport Calendar from \"react-calendar\"\n\nimport \"../Calendar.css\"\n \nconst CalendarPicker = ({dateRange,setDateRange, workouts,callback}) => { \n\n\tconst onDateChange=(newDateRange)=>{\n\t\tsetDateRange(newDateRange) // Update selected range\n\t\tcallback(workouts,newDateRange)  //Filter stuff with selected range\n\t} \n\n\treturn (\n\t\t<Calendar\n\t\t\tonChange={onDateChange}\n\t\t\tvalue={dateRange}\n\t\t\tshowNeighboringMonth={true}\n\t\t\tlocale={\"en-US\"} \n\t\t\tselectRange={true}\n\t\t/>\n\t)\n}\nexport default CalendarPicker","import React from \"react\"\nimport {IoIosArrowBack} from \"react-icons/io\"\nimport {useHistory} from \"react-router-dom\"\n\nconst MenuCard = ({callback, header, body}) => { \n\tconst history=useHistory()\n\treturn(\n\t\t<div className=\"menuCard\" >\n\t\t\t<h1 style={{marginBottom:\"57px\"}}> \n\t\t\t\t<a onClick={()=>{\n\t\t\t\t\thistory.push(\"/\") \n\t\t\t\t\tcallback && callback() //optional callback when going back --used to set currentRegiment after editing\n\t\t\t\t}}>\n\t\t\t\t\t<IoIosArrowBack style={{cursor:\"pointer\"}} /> \n\t\t\t\t</a>\n\t\t\t\t{header()}\n\t\t\t</h1> \n\t\t\t{body()}\n\t\t</div>\n\t)\n}\n\nexport default MenuCard","import React, {useEffect,useState} from \"react\"\nimport {filterExercisesByName,filterWorkoutsByDate} from \"../../Functions/workoutFunctions\"\nimport { BsSearch } from \"react-icons/bs\"\nimport HistoryWorkout from \"../HistoryWorkout\" \nimport CalendarPicker from \"../CalendarPicker\"\nimport MenuCard from \"../MenuCard\"\nimport CheckBox from \"../CheckBox\"\n\n\nconst History=({workouts})=>{ \n\tconst [filterQuery, setFilterQuery] = useState(\"\") //Search term\n\tconst [useDate,setUseDate]=useState(false) // use calendar selection? \n\tconst [dateRange,setDateRange]=useState(new Date()) // when interacted with, will become array  with start and end of selection\n\n\tconst [filteredWorkouts,setFilteredWorkouts]=useState(workouts) \n\t\n\tconst filterByDate=(workouts,dateRange)=>{ \n\t\tif(useDate){ // if check box is ticked\n\t\t\tconst results=[]\n\t\t\tfilterWorkoutsByDate(workouts,dateRange).forEach((workout)=>{ //For each workout within date range\n\t\t\t\tif (filterExercisesByName(workout.exercises,filterQuery).length>0){ // if satisfies search query\n\t\t\t\t\tresults.push(workout)\n\t\t\t\t}})\n\t\t\tsetFilteredWorkouts(results)\n\t\t}}\n\n\tuseEffect(()=>{\n\t\tif (useDate) { // combine date range and search term\n\t\t\tfilterByDate(workouts,dateRange)\n\t\t} \n\t\telse{ // use search term only \n\t\t\tworkouts && \n\t\t\tsetFilteredWorkouts(\n\t\t\t\tworkouts.map((workout)=>{ \n\t\t\t\t\tconst result=filterExercisesByName(workout.exercises,filterQuery)\n\t\t\t\t\tif(result.length!==0){return(workout)}\n\t\t\t\t})\n\t\t\t\t\t.filter((value)=>value!=undefined)) \n\t\t} \n\t},[filterQuery,useDate])  //search box content or checkbox are changed\n\n\tif (workouts && workouts.length ===0) return ( \n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={()=>\"My History\"} body={()=>( \n\t\t\t\t<div>\n\t\t\t\t\t\tIt looks like you&apos;s never submitted an exercise!\n\t\t\t\t</div> \n\t\t\t)}/>\n\n\n\t\t</div> \n\t)\n\n\tconst body=()=>(\n\t\t<div style={{height:\"100%\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t<p>Search by exercise name:</p>\n\t\t\t<div style={{display:\"flex\"}}>\n\t\t\t\t<BsSearch style={{marginRight:\"5px\"}} />\n\t\t\t\t<input className=\"search\" placeholder=\"Exercise to analyse\" onChange={(event)=>{ //filter suggestions\n\t\t\t\t\tsetFilterQuery(event.target.value)}} /> \n\t\t\t</div>\n\t\t\t<div style={{alignSelf:\"flex-start\",marginTop:\"auto\",marginBottom:\"40px\", }}>\n\t\t\t\t<div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\",margin:\"0px\"}}>\n\t\t\t\t\t<p style={{margin:\"0px\",display:\"block\"}}>Filter by date</p>\n\t\t\t\t\t<CheckBox callback={()=>{setUseDate(!useDate)}} value={useDate}/> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CalendarPicker dateRange={dateRange} setDateRange={setDateRange} workouts={workouts} callback={filterByDate} /> \n\t\t</div> \n\t)\n\n\treturn(\n\t\t<>\n\t\t\t<div className=\"pageContainer\">\n\t\t\t\t<MenuCard header={()=>\"My History\"} body={body}/> \n\t\t\t\t{ filteredWorkouts && filteredWorkouts.length>0 && \n\t\t\t\t<div className=\"resultPage history\">\n\t\t\t\t\t<div style={{display:\"block\"}}>{/*Safari needs explicit block display for scroll*/}\n\t\t\t\t\t\t<ul className=\"history__list\" \n\t\t\t\t\t\t\tstyle={{display:\"flex\",flexDirection:\"column-reverse\",listStyleType:\"none\"}}>\n\t\t\t\t\t\t\t{filteredWorkouts.map((workout,index)=>( \n\t\t\t\t\t\t\t\t<li key={index} >\n\t\t\t\t\t\t\t\t\t<HistoryWorkout workout={workout} /> \n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default History","import React from \"react\"\nconst StatRow=({exercise,setExercise})=>{\n\t/*Takes individual exercise instances and renders interactable rows of data- used in Exercise Submission*/\n\tconst weightColor = exercise.weight ? \"#FF8933\" : \"gray\"\n\tconst cellStyle={width:\"80px\",marginLeft:\"25px\"}\n\n\tconst checkInput=(val)=> (/^[0-9]*$/.test(val))   // If contains only digits ( or empty ) \n\t/*inputs get regex instead of \"type=\"number\"\", because this is not a self-contained form -  \n\tit would complain at invalid input, but would allow the characters to be typed  in*/ \n\n\treturn(\n\t\t<div style={{paddingBottom:\"10px\",marginTop:\"10px\",display:\"flex\"}}> \n\t\t\t<button className=\"themed--2\" style={{marginRight:\"0px\", marginBottom:\"auto\",color:weightColor}} \n\t\t\t\tonClick={()=>{setExercise({...exercise, weight:\n\t\t\t\t\t\t\texercise.weight ? null : 1}) }}>KG</button> {/*Toggle weighted*/}\n\t\t\t<div style={cellStyle} > \n\t\t\t\t<h5>Repetitions</h5> \n\t\t\t\t<input className=\"statRow__input\" value = {exercise[\"reps\"]||\"\"} onChange={(event)=>{ \n\t\t\t\t\tcheckInput(event.target.value) && setExercise({...exercise, [\"reps\"]:event.target.value.replace(/^0+/,\"\")})}}/>  {/*Remove leading 0's (e.g. 09 -> 9) */}\n\t\t\t</div>\n\t\t\t<div style={cellStyle}> \n\t\t\t\t<h5>Sets</h5> \n\t\t\t\t<input className=\"statRow__input\" value = {exercise[\"sets\"]||\"\"} onChange={(event)=>{\n\t\t\t\t\tcheckInput(event.target.value) && setExercise({...exercise, [\"sets\"]:event.target.value.replace(/^0+/,\"\")})}}/>\n\t\t\t</div>\n\n\t\t\t{exercise.weight!=null &&( \n\t\t\t\t<div style={cellStyle}> \n\t\t\t\t\t<h5>Weight</h5> \n\t\t\t\t\t<input className=\"statRow__input\" value = {exercise[\"weight\"]|\"\"} onChange={(event)=>{\n\t\t\t\t\t\tcheckInput(event.target.value)&&\n\t\t\t\t\t\tsetExercise({...exercise, [\"weight\"]:event.target.value.replace(/^0+/,\"\")})}}/> {/* if weighted, allow changing weight*/}\n\t\t\t\t</div>\n\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default StatRow","import React from \"react\"\nimport StatRow from \"./StatRow\"\nimport {AiOutlineClose} from \"react-icons/ai\"\n\nconst ExerciseBox=({exerciseArray, newWorkout, setNewWorkout})=>{ \n\t/*Responsible for holding all instances of a specific exercise, e.g. [1 set of 12 reps, 3 sets of 20 reps and 5 weight], etc.\n\tEach exercise of array will be passed to a StatRow to be interactable*/\n\n\tconst exerciseName=exerciseArray[0].name\n\n\treturn(\n\t\t<div className=\"a-fade itemCard\" >\n\t\t\t<h5>Title</h5>\n\t\t\t<div style={{marginBottom:\"0px\",display:\"flex\"}}>\n\t\t\t\t<h3 style={{display:\"inline\",color:\"black\"}}>{exerciseName} </h3>\n\t\t\t\t<button className=\"themed--1\" style={{marginLeft:\"auto\"}} onClick={()=>{setNewWorkout(\n\t\t\t\t\tnewWorkout.map((Array)=>{return exerciseName===Array[0].name \n\t\t\t\t\t\t? Array.concat({name:exerciseName,reps:null,sets:null,weight:null})  //Append new exercise instance to array\n\t\t\t\t\t\t: Array}))}}>\n\t\t\t\tAdd set\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div >\n\t\t\t\t{exerciseArray.map((exercise,i)=>( \n\t\t\t\t\t<div style={{display:\"flex\"}}key={`${exercise}${i}`}> {/* if multiple sets of exercise, allow removal*/}\n\t\t\t\t\t\t<StatRow exercise={exercise} setExercise={(exercise)=>{ \n\t\t\t\t\t\t\tsetNewWorkout(\n\t\t\t\t\t\t\t\tnewWorkout.map((Array)=>{return exerciseName===Array[0].name  //Find correct array\n\t\t\t\t\t\t\t\t\t? exerciseArray.map((item,index)=>{ // if correct array, find correct exercise index\n\t\t\t\t\t\t\t\t\t\tif (i===index) {\n\t\t\t\t\t\t\t\t\t\t\treturn exercise // set equal to current Exercise ( passed as func parameter )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn item // keep all else the same\n\t\t\t\t\t\t\t\t\t}) \n\t\t\t\t\t\t\t\t\t: Array})) //irrelevant array, keep same\n\t\t\t\t\t\t}} />\n\t\t\t\t\t\t{exerciseArray.length>1 &&  \n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tonClick={()=>{setNewWorkout(newWorkout.map((item)=>( \n\t\t\t\t\t\t\t\t\texerciseName === item[0].name \n\t\t\t\t\t\t\t\t\t\t? exerciseArray.filter((item,index)=>(index!=i)) // remove by index\n\t\t\t\t\t\t\t\t\t\t: item\n\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t\t))}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AiOutlineClose style={{cursor:\"pointer\"}}  />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t} \n\t\t\t\t\t</div>\n\t\t\t\t))}</div> \n\t\t\t<div style={{padding:\"5px\"}} className=\"grayLine\"/>\n\t\t</div>\n\t)} \nexport default ExerciseBox\n","import React,{useEffect,useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\n\nimport exerciseService from \"../../Services/exercises\" \nimport ExerciseBox from \"../ExerciseBox\" \nimport MenuCard from \"../MenuCard\" \nimport {getInvalidExercises } from \"../../Functions/workoutFunctions\"\n\nconst AthleteExerciseSubmission=({setNotification,setWorkouts, daysExercises})=>{ \n\t/*allows user to select from today's scheduled exercises and submit his workout */\n\tconst history=useHistory()\n\tif (!daysExercises){\n\t\treturn(\n\t\t\t<div className=\"pageContainer\">\n\t\t\t\t<MenuCard header={()=>\"My Exercises\"} body={()=>(<p>No exercises for today :)</p>)} />\n\t\t\t</div> \n\t\t)}\n\n\t/* Local copy of daysExercises\n\tto let user remove exercises without messing with outter state*/\n\tconst [uniqueNames,setUniqueNames]=useState([])\n\n\tconst [newWorkout, setNewWorkout]=useState([]) \n\tconst [removedExercises, setRemovedExercises]=useState([]) // Keep track of removed exercises\n\tconst [selectedExercise, setSelectedExercise]=useState(null) // to filter which exercises are shown for editing \n\tconst [invalidArray,setInvalidArray]=useState([]) \n\t//On submission, if an exercise is invalid, its name will be stored, to set backgroundcolor of menuItem to red \n\n\tuseEffect(()=>{\n\t\tsetNewWorkout( daysExercises.map((exerciseName)=>( [{name:exerciseName,reps:null,sets:null}]))) \n\t\tsetUniqueNames([... new Set(daysExercises)]) \n\t}\n\t,[daysExercises])\n\n\tuseEffect(()=>{\n\t\tsetUniqueNames([... new Set(daysExercises)]) \n\t},[])\n\n\tconst submitWorkout=async ()=>{  \n\t\tconst exercisesForSubmission=[]\n\t\tnewWorkout.forEach((exerciseArray)=> //retrieve nested exercises\n\t\t{exerciseArray.forEach((exercise)=>{exercisesForSubmission.push(exercise)}) \n\t\t})\n\n\t\tconst invalidExercises=getInvalidExercises(exercisesForSubmission)\n\t\tif (invalidExercises.length>0){\n\t\t\tsetInvalidArray(invalidExercises) //set state so that invalid items get colored\n\t\t\tsetNotification({color:\"red\",message:\"An exercise hasn't been filled out :( please fill it out or remove it\"})\n\t\t}\n\n\t\telse{ //no invalid Entries\n\t\t\tif (exercisesForSubmission.length>0) {   //exercises actually exist\n\t\t\t\tconst sentWorkout=await exerciseService.sendWorkout({exercises:exercisesForSubmission}) //server response to new workout submission \n\t\t\t\tif(sentWorkout){\n\t\t\t\t\tconst userWorkouts = JSON.parse(window.localStorage.getItem(\"userWorkouts\")) //local storage copy of workouts \n\t\t\t\t\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(userWorkouts.concat(sentWorkout))) //update local storage\n\t\t\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))//update state\n\t\t\t\t\tsetNotification({color:\"white\",message:\"Workout uploaded successfully\"})\n\t\t\t\t\thistory.push(\"/\") \n\t\t\t\t}\n\t\t\t\telse{ //server response not valid\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong :(\"}) \n\t\t\t\t}\n\t\t\t} \n\t\t\telse{ //no valid exercises\n\t\t\t\tsetNotification({color:\"red\",message:\"Looks like you haven't submitted any exercises!\"}) \n\t\t\t} \n\t\t}\n\t} \n\tconst body=()=>( //body for menuCard\n\t\t<>\n\t\t\t{uniqueNames.map((uniqueName,i) => (  //selectable box for each unique exercise \n\t\t\t\t<div className=\"menuItem__removable\" style={{\n\t\t\t\t\tbackgroundColor:invalidArray.includes(uniqueName) // if submission attempted, and exercise has an empty field, set to pink\n\t\t\t\t\t\t? \"pink\"\n\t\t\t\t\t\t: \"white\"\n\t\t\t\t} } key={`${uniqueName}${i}`}>  \n\t\t\t\t\t<a className=\"menuItem__text\" onClick={()=>{setSelectedExercise(uniqueName)}}>{uniqueName}</a>\n\t\t\t\t\t<a style={{cursor:\"pointer\"}}\n\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.concat(uniqueName))\n\t\t\t\t\t\t\tsetInvalidArray(invalidArray.filter((exercise)=>exercise!=uniqueName)) //remove from invalid array\n\t\t\t\t\t\t\tsetNewWorkout(newWorkout.filter((exerciseArray)=>(exerciseArray[0].name!==uniqueName))) \n\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.filter((name)=>(uniqueName!==name)))\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<BsFillTrashFill style={{marginLeft:\"auto\",marginRight:\"15px\"}}/>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t))}\n\n\t\t\t{ removedExercises.length>0 && \n\t\t\t\t<h5 style={{marginTop:\"auto\",textAlign:\"center\"}}>Removed</h5> }\n\t\t\t{ removedExercises.map((exercise)=>{ //bring back a removed exercise\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"menuCard__exercise--removed\" key={exercise}> \n\t\t\t\t\t\t<a key={exercise} className=\"menuItem__text\"\n\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.filter((name)=>(name!=exercise)))\n\t\t\t\t\t\t\t\tsetNewWorkout(newWorkout.concat([[{name:exercise,reps:null,sets:null,weight:null}]]))\n\t\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.concat((exercise)))}} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t)})\n\t\t\t}\n\t\t\t<button className=\"themed--2\"style={{marginTop:\"auto\",}}onClick={()=>\n\t\t\t\tsubmitWorkout(newWorkout)}>Submit</button> \n\t\t</> \n\t)\n\t\n\treturn ( \n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={()=>\"My Exercises\"} body={body}/> \n\n\t\t\t{newWorkout.map((exerciseArray,i)=>{ \n\t\t\t\tif (exerciseArray[0].name!==selectedExercise){return} //render only for selected exercise\n\t\t\t\treturn( \n\t\t\t\t\t<div className=\"exerciseContainer\" key={i} > \n\t\t\t\t\t\t<ExerciseBox  exerciseArray={exerciseArray} newWorkout={newWorkout} setNewWorkout={setNewWorkout} indexInArray={i}/> \n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}) \n\t\t\t}\n\t\t</div> \n\t)\n} \n\nexport default AthleteExerciseSubmission\n","import axios from \"axios\"\nconst baseurl = \"/api/users/password\"\n\nconst changePassword = async credentials => {\n\ttry{\n\t\tconst response = await axios.patch(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default {changePassword}","import React,{useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport MenuCard from \"./MenuCard\"\nimport RegimentForm from \"./Athlete/RegimentForm\"\nimport exerciseService from \"../Services/exercises\"\nimport passwordService from \"../Services/password\"\nimport nameService from \"../Services/name\"\n\nconst AccountPage = ({ setNotification,currentRegiment,setCurrentRegiment, user,setUser}) => {\n\t/*Edit Account details */\n\n\tconst [view,setView] = useState(\"\")//\"Reset\"/\"Edit\"/\"Password\" /\"Name\"\n\tconst [currentPassword,setCurrentPassword] = useState(\"\")\n\n\tconst [newPassword,setNewPassword] = useState(\"\") // Let user change password\n\tconst [newName,setNewName] = useState(\"\") // Let user change password\n\tconst [validatePassword,setValidatePassword] = useState(\"\") // If these two passwords match\n\tconst history = useHistory()\n\n\treturn( \n\t\t<div className=\"pageContainer\">  {/*!if athlete, will setCurrentRegiment on going back. Should refactor somewhere better */}\n\t\t\t<MenuCard  callback={()=>{!user.isTrainer && setCurrentRegiment(JSON.parse(window.localStorage.getItem(\"currentRegiment\")) \n\t\t\t//If unsaved changes, revert currentRegiment\n\t\t\t)} } header={()=>\"My Account\"}body={()=> (\n\t\t\t\t<>\n\t\t\t\t\t{ !user.isTrainer && // only if athlete\n\t\t\t\t<>   \n\t\t\t\t\t<a className=\"menuCard__account\"onClick={()=>{setView(\"Reset\")}}>\n\t\t\t\t\t\t\tReset weekly regiment\n\t\t\t\t\t</a>\n \n\t\t\t\t\t<a  className=\"menuCard__account\"onClick={()=>{setView(\"Edit\")}}> \n\t\t\t\t\t\tEdit weekly regiment \n\t\t\t\t\t</a>\n\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t<a className=\"menuCard__account\" onClick={()=>{setView(\"Name\")}}>  {/*for both athlete and trainer */}\n\t\t\t\t\t\tChange name \n\t\t\t\t\t</a>\n\n\t\t\t\t\t<a className=\"menuCard__account\" onClick={()=>{setView(\"Password\")}}>  {/*for both athlete and trainer */}\n\t\t\t\t\t\tChange password \n\t\t\t\t\t</a>\n\n\t\t\t\t</> \n\t\t\t)}/>\n\n\t\t\t{view && \n\t\t\t\t<div className=\"resultPage account\" style={{display:\"flex\"}}>\n\t\t\t\t\t{view===\"Reset\" && ( //reset regiment entirely\n\t\t\t\t\t\t<div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\",marginTop:\"20px\"}}>\n\t\t\t\t\t\t\t<h2>Are you sure you want to reset your weekly regiment?</h2> \n\t\t\t\t\t\t\t<h5 style={{marginTop:\"20px\"}}>You&apos;ll be redirected to fill out all your weekly exercises from scratch. \n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\tAlternatively, you can simply edit your existing regiment\n\t\t\t\t\t\tfrom the other option in the menu.</h5> \n\t\t\t\t\t\t\t<button className=\"themed--2\" style={{width:\"80px\",marginTop:\"50px\"}}onClick ={async()=>{\n\t\t\t\t\t\t\t\tconst updatedUser = await exerciseService.resetRegiment()\n\t\t\t\t\t\t\t\tlocalStorage.setItem(\"currentRegiment\", JSON.stringify(updatedUser.currentRegiment))\n\t\t\t\t\t\t\t\tsetUser(updatedUser)\n\t\t\t\t\t\t\t\thistory.push(\"/\") }}>Yes</button> \n\t\t\t\t\t\t</div> )}\n\n\t\t\t\t\t{view===\"Edit\" && ( //Edit current regiment\n\t\t\t\t\t\t<RegimentForm  user={user} setUser={setUser} \n\t\t\t\t\t\t\tcurrentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment}/>)}\n\n\t\t\t\t\t{view===\"Name\" && ( //reset regiment entirely\n\t\t\t\t\t\t<form \n\t\t\t\t\t\t\tonSubmit={async(event)=>{\n\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\tconst updatedUser = await nameService.changeName({name:newName})\n\t\t\t\t\t\t\t\tif (updatedUser){\n\t\t\t\t\t\t\t\t\tsetUser(updatedUser)\n\t\t\t\t\t\t\t\t\tsetNotification({color:\"green\",message:`Name changed successfully to ${updatedUser.name}!`}) \n\t\t\t\t\t\t\t\t\tsetNewName(\"\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tsetNotification({color:\"red\",message:\"Oops! Something went wrong :(\"}) \n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\tstyle={{marginTop:\"20px\"}}>\n\t\t\t\t\t\t\t<h2>Change your name</h2> \n\t\t\t\t\t\t\t<input value={newName} onChange={(event)=>{setNewName(event.target.value)}}/>\n\t\t\t\t\t\t\t<button className=\"themed--1\" type=\"submit\" style={{marginLeft:\"5px\"}} >Confirm</button> \n\t\t\t\t\t\t</form> )} \n\n\t\t\t\t\t{view===\"Password\" && ( //change password\n\t\t\t\t\t\t<form \n\t\t\t\t\t\t\tstyle={{marginTop:\"40px\",alignItems:\"center\",width:\"100%\",display:\"flex\",flexDirection:\"column\"}}\n\t\t\t\t\t\t\tonSubmit={async(event)=>{\n\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\tif (newPassword===validatePassword ){\n\t\t\t\t\t\t\t\t\tconst updatedUser = await passwordService\n\t\t\t\t\t\t\t\t\t\t.changePassword({username:user.username,currentPassword,newPassword})\n\t\t\t\t\t\t\t\t\tif(updatedUser){\n\t\t\t\t\t\t\t\t\t\tsetUser(updatedUser)\n\t\t\t\t\t\t\t\t\t\tsetNotification({color:\"green\",message:\"Password changed successfully\"}) \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{ \n\t\t\t\t\t\t\t\t\t\tsetNotification({color:\"red\",message:\"Process failed. Wrong password maybe?\"}) \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}  >\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5 >Current password</h5>\n\t\t\t\t\t\t\t\t<input style={{marginBottom:\"20px\"}}type=\"password\" value={currentPassword} onChange={(event)=>{\n\t\t\t\t\t\t\t\t\tsetCurrentPassword(event.target.value)}}placeholder=\"current password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5 >New password</h5>\n\t\t\t\t\t\t\t\t<input style={{marginBottom:\"20px\"}}type=\"password\" value={validatePassword} onChange={(event)=>{\n\t\t\t\t\t\t\t\t\tsetValidatePassword(event.target.value)}}placeholder=\"new password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h5 >Repeat new password</h5>\n\t\t\t\t\t\t\t\t<input style={{marginBottom:\"20px\"}}type=\"password\" value={newPassword} onChange={(event)=>{\n\t\t\t\t\t\t\t\t\tsetNewPassword(event.target.value)}}placeholder=\"repeat password\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"themed--1\"style={{marginTop:\"15px\"}} type=\"submit\">Change my password</button>\n\t\t\t\t\t\t</form>  \n\t\t\t\t\t)}\n\n\t\t\t\t</div> \n\t\t\t} \n\t\t</div> \n\t)\n}\n\nexport default AccountPage","import React from \"react\"\nimport { Bar,BarChart,CartesianGrid,AreaChart, Area, XAxis, YAxis,  Tooltip, } from \"recharts\"\n\nconst AnalysisPlot=({analysis, dataKey})=>{\n\n\tconst dataChart=(\n\t\tanalysis.length==1 //if only one data point (e.g. all-time analysis\n\t\t\t?\n\t\t\t<>\n\t\t\t\t<BarChart\n\t\t\t\t\twidth={500}\n\t\t\t\t\theight={400}\n\t\t\t\t\tdata={analysis}\n\t\t\t\t\tmargin={{ top: 10, right: 30, left: 0, bottom: 20 }}\n\t\t\t\t\tbarSize={20}\n\t\t\t\t>\n\t\t\t\t\t<XAxis dataKey=\"total\" scale=\"point\" padding={{ left: 10, right: 10 }} />\n\t\t\t\t\t<YAxis />\n\t\t\t\t\t<Tooltip />\n\t\t\t\t\t<CartesianGrid />\n\t\t\t\t\t<Bar dataKey={dataKey} stroke=\"ff8933\" fill=\"#8884d8\" background={{ fill: \"#fff\" }} />\n\t\t\t\t</BarChart>\n\t\t\t</>\n\t\t\t:\n\t\t\t<>\n\t\t\t\t<AreaChart\n\t\t\t\t\twidth={600}\n\t\t\t\t\theight={400}\n\t\t\t\t\tdata={analysis}\n\t\t\t\t\tmargin={{ top: 10, right: 30, left: 0, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<CartesianGrid />\n\t\t\t\t\t<XAxis dataKey=\"timeProperty\" />\n\t\t\t\t\t<YAxis />\n\t\t\t\t\t<Tooltip />\n\t\t\t\t\t<Area\n\t\t\t\t\t\ttype=\"natural\"\n\t\t\t\t\t\tdataKey={dataKey}\n\t\t\t\t\t\tstroke='#ff8933'\n\t\t\t\t\t\tfill='#8884d8'\n\t\t\t\t\t/>\n\t\t\t\t</AreaChart> \n\t\t\t</>\n\t)\n\n\n\tif(analysis){\n\t\treturn (\n\t\t\tdataChart\n\t\t)\n\n\t}\n\treturn(null)\n}\n\nexport default AnalysisPlot\n","import React,{useState, useEffect} from \"react\" \nimport {datedAnalysis,allTimeAnalysis,exerciseNamesFromWorkouts} from \"../../Functions/workoutFunctions\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport { BsSearch } from \"react-icons/bs\"\n\nimport AnalysisPlot from \"../AnalysisPlot\"\nimport MenuCard from \"../MenuCard\"\n\nconst AthleteAnalysis=({workouts})=>{\n\t/*Allow athlete to view progress analysis based on time-interval, repetitions, and weight */\n\n\tconst exerciseNameCache=workouts && exerciseNamesFromWorkouts(workouts) //array of unique exerciseNames\n\t\t\n\tconst [suggestions,setSuggestions]=useState([]) \n\tconst [selection,setSelection]=useState(null)  //Selection to be analysed\n\tconst [analysisType,setAnalysisType]=useState(null)  //Daily/Monthly/All-Time\n\n\tconst [repsAnalysis,setRepsAnalysis]=useState(null)  //Data from analysis\n\tconst [weightAnalysis,setWeightAnalysis]=useState(null)  //Data from analysis\n\n\tuseEffect(()=>{\n\t\tif(workouts){\n\t\t\tswitch(analysisType){\n\t\t\tcase \"Daily\": \n\t\t\t\tsetWeightAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"weight\"))\n\t\t\t\tsetRepsAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"daily\",\"reps\"))\n\t\t\t\tbreak\n\t\t\tcase \"Monthly\": \n\t\t\t\tsetWeightAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"monthly\",\"weight\"))\n\t\t\t\tsetRepsAnalysis(datedAnalysis(workouts,selection||suggestions[0],\"monthly\",\"reps\"))\n\t\t\t\tbreak\n\t\t\tdefault: \n\t\t\t\tsetWeightAnalysis(allTimeAnalysis(workouts,selection||suggestions[0],\"weight\"))\n\t\t\t\tsetRepsAnalysis(allTimeAnalysis(workouts,selection||suggestions[0],\"reps\"))\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t},[selection, analysisType])\n\t\n\tif (workouts && workouts.length===0) return (\n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={()=>\"Analysis\"} body={()=>( \n\t\t\t\t<div>\n\t\t\t\t\t\tIt looks like you&apos;s never submitted an exercise!\n\t\t\t\t</div> \n\t\t\t)}/> \n\t\t</div> \n\t)\n\n\tconst body=()=>(\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<BsSearch style={{marginRight:\"5px\"}} />\n\t\t\t\t<input className=\"search\" placeholder=\"Exercise to analyse\" onChange={(event)=>{ //filter suggestions\n\t\t\t\t\tsetSuggestions(exerciseNameCache.filter((name)=>(\n\t\t\t\t\t\tname.toLowerCase().includes(event.target.value.toLowerCase()))))\n\t\t\t\t}}/> \n\t\t\t</div>\n\t\t\t{suggestions.length<5 //if suggestions narrowed down, allow setting the selection for analysis\n\t\t\t\t? (<ul className=\"analysis__list\">{suggestions.map((suggestion,index)=> \n\t\t\t\t\t(<div className=\"analysis__result\" key={index}>\n\t\t\t\t\t\t<h5>{suggestion}</h5> \n\t\t\t\t\t\t<Dropdown key ={`${index}Button`}>\n\t\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAnalyse \n\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Daily\");setSelection(suggestions[index])}}> Daily</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Monthly\");setSelection(suggestions[index])}}> Monthly</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"All-Time\");setSelection(suggestions[index])}}> All-Time</Dropdown.Item>\n\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>)\n\t\t\t\t)} </ul>)  \n\t\t\t\t: (<h6>Too many suggestions to show!</h6>)} \n\t\t</>\n\t) \n\treturn(\n\t\t<div className=\"pageContainer\"> \n\t\t\t<MenuCard header={()=>\"Analyse\"} body={body}/>  \n\t\t\t{ repsAnalysis && selection &&  //Right-side card\n\t\t\t\t\t<div className=\"resultPage analysis\"> \n\t\t\t\t\t\t<h2 style={{marginBottom:\"20px\"}}>{analysisType}</h2>\n\t\t\t\t\t\t<h2>Total repetitions</h2>\n\t\t\t\t\t\t<AnalysisPlot analysis={repsAnalysis} dataKey=\"total\"/>\n\t\t\t\t\t\t{ weightAnalysis && ( \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h2>Total weight lifted</h2>\n\t\t\t\t\t\t\t\t<AnalysisPlot analysis={weightAnalysis} dataKey=\"total\" />\n\t\t\t\t\t\t\t</> )}\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default AthleteAnalysis","import React,{useEffect,useState} from \"react\" \nimport {Switch,Route,useHistory} from \"react-router-dom\"\nimport { GoPlusSmall } from \"react-icons/go\"\nimport AthleteHistory from \"./History_A\"\nimport AthleteExerciseSubmission from \"./ExerciseSubmission_A\"\nimport AccountPage from \"../AccountPage\"\nimport Analysis_A from \"./Analysis_A\"\nimport { getTodaysExercises } from \"../../Functions/workoutFunctions\"\n\nconst AthleteHeadquarters=({ user, setUser,setNotification,})=>{ \n\tconst [daysExercises, setDaysExercises] = useState([]) // today's target exercises\n\tconst [currentRegiment, setCurrentRegiment] = useState({}) // whole week target exercises\n\tconst [workouts, setWorkouts] = useState(null) // whole week target exercises \n\tconst history=useHistory()\n\n\tuseEffect(()=>{ //set athlete's workouts and regiment\n\t\tif(user){ \n\t\t\tsetWorkouts(JSON.parse(window.localStorage.getItem(\"userWorkouts\")))\n\t\t\tsetCurrentRegiment( JSON.parse(window.localStorage.getItem(\"currentRegiment\")) )\n\t\t} \n\t},[user])\n\n\tuseEffect(()=>{\n\t\tif(user){\n\t\t\tsetDaysExercises(getTodaysExercises(currentRegiment)) \n\t\t} \n\t},[currentRegiment])\n\t\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/account\">\n\t\t\t\t<AccountPage  setNotification={setNotification} currentRegiment={currentRegiment} setCurrentRegiment={setCurrentRegiment} \n\t\t\t\t\tuser={user}setUser={setUser}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/dailySubmission\">\n\t\t\t\t<AthleteExerciseSubmission setNotification={setNotification} setWorkouts={setWorkouts} \n\t\t\t\t\tdaysExercises={daysExercises} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/history\"> \n\t\t\t\t<AthleteHistory workouts={workouts}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/analysis\" style = {{ height:\"100%\"}}> \n\t\t\t\t<Analysis_A workouts={workouts}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/\">\n\t\t\t\t<div className=\"pageContainer\">\n\t\t\t\t\t<div className=\"HQ__menu\">\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/dailySubmission\")}}>\n\t\t\t\t\t\t\t<h2>  {/*Everything within HQ__items gets styled in CSS*/}\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>Submit a Workout</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/history\")}} > \n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>My Workout History</a>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/analysis\")}} >\n\t\t\t\t\t\t\t<h2> \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>Performance Analysis</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/account\")}} >\n\t\t\t\t\t\t\t<h2> \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>My Account</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{workouts && workouts.length>0 \n\t\t\t\t\t?(<h1 className=\"HQ__greeting\">Welcome Back</h1>) \n\t\t\t\t\t: <h1 className=\"HQ__greeting\">Welcome!</h1>\n\t\t\t\t}</Route>\n\t\t</Switch>\n\t)\n}\n\nexport default AthleteHeadquarters\n","import React from \"react\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nconst DropdownClient = ({clients, selectedClient,setSelectedClient}) => { \n\t/*Dropdown list to select from trainer's clients */\n\treturn (\n\t\t<Dropdown style={{marginBottom:\"20px\"}}>\n\t\t\t<Dropdown.Toggle>\n\t\t\t\t{selectedClient && selectedClient.name || \"Select a client\"} \n\t\t\t</Dropdown.Toggle>\n\t\t\t<Dropdown.Menu>\n\t\t\t\t{clients && clients.map((client)=>( \n\t\t\t\t\t<Dropdown.Item key={client.name} onClick={()=>{setSelectedClient(client)\n\t\t\t\t\t}}> {client.name}</Dropdown.Item>\n\t\t\t\t))}\n\t\t\t</Dropdown.Menu>\n\t\t</Dropdown> \n\n\t)\n}\n\nexport default DropdownClient","import React,{useState, useEffect} from \"react\" \nimport {datedAnalysis,allTimeAnalysis,exerciseNamesFromWorkouts} from \"../../Functions/workoutFunctions\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport DropdownClient from \"./DropdownClient\"\nimport { BsSearch } from \"react-icons/bs\"\n\nimport AnalysisPlot from \"../AnalysisPlot\"\nimport MenuCard from \"../MenuCard\"\n\nconst TrainerAnalysis=({clients})=>{\n\t/*For trainer to select any client, and view their workout progress */\n\n\tconst [exerciseNameCache,setExerciseNameCache] = useState(null) \n\tconst [selectedClient,setSelectedClient]=useState() //workouts will depend on selectedClient\n\n\tconst [searchQuery,setSearchQuery]=useState(\"\") \n\tconst [suggestions,setSuggestions]=useState([]) \n\tconst [selection,setSelection]=useState(null)  //Selection to be analysed\n\n\tconst [analysisType,setAnalysisType]=useState(null)  //Daily/Monthly/All-Time\n\n\tconst [repsAnalysis,setRepsAnalysis]=useState(null)  //Data from analysis\n\tconst [weightAnalysis,setWeightAnalysis]=useState(null)  //Data from analysis\n\n\t/*indexOf returns index of first matching element\n\t\t\tif repetition of element in array, it will not equal the index of the first\n\t\t\telement, thus being discarded */\n\t\t\n\tuseEffect(()=>{ \n\t\tselectedClient &&\n\t\tsetExerciseNameCache(selectedClient.days && exerciseNamesFromWorkouts(selectedClient.days)\n\t\t\t.filter((name,index)=>( //keep only 1 instance of each name\n\t\t\t\texerciseNamesFromWorkouts(selectedClient.days).indexOf(name)===index)))\n\t},[selectedClient]) //when client changes, update selection ( if username has an exercise of the same name)\n\n\tuseEffect(()=>{\n\t\texerciseNameCache && searchQuery && \n\t\tsetSuggestions(exerciseNameCache.filter((name)=>(\n\t\t\tname.toLowerCase().includes(searchQuery.toLowerCase())))) \n\t},[exerciseNameCache,searchQuery,])\n\n\tuseEffect(()=>{\n\t\tif (selectedClient){\n\t\t\tswitch(analysisType){\n\t\t\tcase \"Daily\": \n\t\t\t\tsetWeightAnalysis(datedAnalysis(selectedClient.days,selection||suggestions[0],\"daily\",\"weight\"))\n\t\t\t\tsetRepsAnalysis(datedAnalysis(selectedClient.days,selection||suggestions[0],\"daily\",\"reps\"))\n\t\t\t\tbreak\n\t\t\tcase \"Monthly\": \n\t\t\t\tsetWeightAnalysis(datedAnalysis(selectedClient.days,selection||suggestions[0],\"monthly\",\"weight\"))\n\t\t\t\tsetRepsAnalysis(datedAnalysis(selectedClient.days,selection||suggestions[0],\"monthly\",\"reps\"))\n\t\t\t\tbreak\n\t\t\tdefault: \n\t\t\t\tsetWeightAnalysis(allTimeAnalysis(selectedClient.days,selection||suggestions[0],\"weight\"))\n\t\t\t\tsetRepsAnalysis(allTimeAnalysis(selectedClient.days,selection||suggestions[0],\"reps\"))\n\t\t\t\tbreak\n\t\t\t}}\n\t},[selectedClient,selection, analysisType])\n\t\n\tconst body=()=>(\n\t\t<>\n\t\t\t<DropdownClient clients={clients} selectedClient={selectedClient}  setSelectedClient={setSelectedClient}/> \n\t\t\t<div>\n\t\t\t\t<BsSearch style={{marginRight:\"5px\"}} />\n\t\t\t\t<input className=\"search\" placeholder=\"Exercise to analyse\" \n\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\tonChange={(event)=>{ //filter suggestions\n\t\t\t\t\t\tsetSearchQuery(event.target.value)\n\t\t\t\t\t}}/> \n\t\t\t</div>\n\t\t\t{suggestions.length<5 //if suggestions narrowed down, allow setting the selection for analysis\n\t\t\t\t? (<ul className=\"analysis__list\">{suggestions.map((suggestion,index)=> \n\t\t\t\t\t(<div className=\"analysis__result\" key={index}>\n\t\t\t\t\t\t<h5>{suggestion}</h5> \n\t\t\t\t\t\t<Dropdown key ={`${index}Button`}>\n\t\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAnalyse \n\t\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Daily\");setSelection(suggestions[index])}}> Daily</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"Monthly\");setSelection(suggestions[index])}}> Monthly</Dropdown.Item>\n\t\t\t\t\t\t\t\t<Dropdown.Item onClick={()=>{setAnalysisType(\"All-Time\");setSelection(suggestions[index])}}> All-Time</Dropdown.Item>\n\t\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t</div>)\n\t\t\t\t)} </ul>)  \n\t\t\t\t: (<h6>Too many suggestions to show!</h6>)} \n\t\t</>\n\t) \n\treturn(\n\t\t<div className=\"pageContainer\"> \n\t\t\t<MenuCard header={()=>\"Analysis\"} body={body}/>\n\t\t\t{ repsAnalysis && selection &&  //Right-side card\n\t\t\t\t\t<div className=\"resultPage analysis\"> \n\t\t\t\t\t\t<h1 style={{marginBottom:\"20px\"}}>{analysisType}</h1>\n\t\t\t\t\t\t{ weightAnalysis && ( \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h2>Total weight lifted</h2>\n\t\t\t\t\t\t\t\t<AnalysisPlot analysis={weightAnalysis} dataKey=\"total\" />\n\t\t\t\t\t\t\t</> )}\n\t\t\t\t\t\t<h2>Total repetitions</h2>\n\t\t\t\t\t\t<AnalysisPlot analysis={repsAnalysis} dataKey=\"total\"/>\n\t\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default TrainerAnalysis","import React, {useEffect,useState} from \"react\"\nimport {filterExercisesByName,filterWorkoutsByDate} from \"../../Functions/workoutFunctions\"\nimport HistoryWorkout from \"../HistoryWorkout\" \nimport CalendarPicker from \"../CalendarPicker\"\nimport MenuCard from \"../MenuCard\" \nimport DropdownClient from \"./DropdownClient\" \nimport CheckBox from \"../CheckBox\"\nimport { BsSearch } from \"react-icons/bs\"\n\nconst TrainerHistory=({clients})=>{ \n\t/* view workout history of any client */\n\n\tconst [selectedClient,setSelectedClient]=useState()\n\tconst [filterQuery, setFilterQuery] = useState(\"\") //Search term\n\tconst [useDate,setUseDate]=useState(false) // use calendar selection? \n\tconst [dateRange,setDateRange]=useState(new Date()) // when interacted with, will become array  with start and end of selection\n\n\tconst [filteredWorkouts,setFilteredWorkouts]=useState(null) \n\t\n\tconst filterByDate=(workouts,dateRange)=>{ \n\t\tif(useDate){ // if check box is ticked\n\t\t\tconst results=[]\n\t\t\tfilterWorkoutsByDate(workouts,dateRange).forEach((workout)=>{ //For each workout within date range\n\t\t\t\tif (filterExercisesByName(workout.exercises,filterQuery).length>0){ // if satisfies search query\n\t\t\t\t\tresults.push(workout)\n\t\t\t\t}})\n\t\t\tsetFilteredWorkouts(results)\n\t\t}}\n\n\tuseEffect(()=>{\n\t\tif (selectedClient){\n\t\t\tif (useDate) { // combine date range and search term\n\t\t\t\tfilterByDate(selectedClient.days,dateRange)\n\t\t\t} \n\t\t\telse{ // use search term only \n\t\t\t\tsetFilteredWorkouts(\n\t\t\t\t\tselectedClient.days.map((workout)=>{ \n\t\t\t\t\t\tconst result=filterExercisesByName(workout.exercises,filterQuery)\n\t\t\t\t\t\tif(result.length!==0){return(workout)}\n\t\t\t\t\t})\n\t\t\t\t\t\t.filter((value)=>value!=undefined)) \n\t\t\t} }\n\t},[filterQuery,useDate,selectedClient])  //search box content or checkbox are changed\n\n\tconst body=()=>(\n\t\t<div style={{height:\"100%\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t<DropdownClient clients={clients} selectedClient={selectedClient} setSelectedClient={setSelectedClient}/>\n\t\t\t<div>\n\t\t\t\t<p>Search by exercise name:</p>\n\t\t\t\t<div style={{display:\"flex\"}}>\n\t\t\t\t\t<BsSearch style={{marginRight:\"5px\"}} />\n\t\t\t\t\t<input style={{marginBottom:\"40px\"}}className=\"search\" placeholder=\"Exercise to analyse\" \n\t\t\t\t\t\tonChange={(event) =>{setFilterQuery(event.target.value)}}//filter suggestions\n\t\t\t\t\t/> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style={{alignSelf:\"flex-start\",marginTop:\"auto\",marginBottom:\"40px\", }}>\n\t\t\t\t<div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\",padding:\"0px\",margin:\"0px\"}}>\n\t\t\t\t\t<p style={{margin:\"0px\",display:\"block\"}}>Filter by date</p>\n\t\t\t\t\t<CheckBox callback={()=>{setUseDate(!useDate)}} value={useDate}/> \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<CalendarPicker dateRange={dateRange} setDateRange={setDateRange} workouts={selectedClient && selectedClient.days} callback={filterByDate} /> \n\t\t</div> \n\t)\n\n\treturn(\n\t\t<>\n\t\t\t<div className=\"pageContainer\">\n\t\t\t\t<MenuCard header={()=>\"History\"} body={body}/> \n\t\t\t\t{ filteredWorkouts && filteredWorkouts.length>0 && \n\t\t\t\t<div style={{overflowY:\"scroll\"}}className=\"resultPage history\"> \n\t\t\t\t\t<div style={{display:\"block\"}}>{/*Safari needs explicit block display for scroll*/}\n\t\t\t\t\t\t<ul className=\"history__list\" \n\t\t\t\t\t\t\tstyle={{display:\"flex\",flexDirection:\"column-reverse\",listStyleType:\"none\"}}>\n\t\t\t\t\t\t\t{filteredWorkouts.map((workout,index)=>( \n\t\t\t\t\t\t\t\t<li key={index} >\n\t\t\t\t\t\t\t\t\t<HistoryWorkout workout={workout} /> \n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default TrainerHistory","import React,{useEffect, useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\n\nimport exerciseService from \"../../Services/exercises\" \nimport ExerciseBox from \"../ExerciseBox\" \nimport MenuCard from \"../MenuCard\"\nimport DropdownClient from \"./DropdownClient\"\nimport {getTodaysExercises,getInvalidExercises } from \"../../Functions/workoutFunctions\"\n\nconst TrainerExerciseSubmission=({clients, setClients, setNotification})=>{ \n/*Trainer can submit workouts on behalf of a client */\n\tconst history=useHistory()\n\t\n\tconst [uniqueNames,setUniqueNames]=useState([])  //to store name of each exercise TODO NEEDS A USEEFFECT?\n\tconst [newWorkout, setNewWorkout]=useState([]) \n\tconst [removedExercises, setRemovedExercises]=useState([]) // Keep track of removed exercises\n\tconst [selectedExercise, setSelectedExercise]=useState(null) // to filter which exercises are shown for editing \n\tconst [selectedClient, setSelectedClient] = useState(null)\n\tconst [invalidArray, setInvalidArray]=useState([]) \n\t//On submission, if an exercise is invalid, its name will be stored, to set backgroundcolor of menuItem to red \n\n\tuseEffect(()=>{\n\t\tsetInvalidArray([])\n\t\tif(selectedClient){\n\t\t\tconst unique=getTodaysExercises(selectedClient.currentRegiment)  //todays exercises\n\t\t\tif(unique){ //has exercises for today\n\t\t\t\tsetUniqueNames(unique)\n\t\t\t\tsetNewWorkout(unique.map((exerciseName)=>(   [{name:exerciseName,reps:null,sets:null}] ) ))\n\t\t\t}\n\t\t\telse{ //if client has no workouts for today, reset\n\t\t\t\tsetUniqueNames([])\n\t\t\t\tsetSelectedExercise(null) \n\t\t\t}\n\t\t}},[selectedClient])\n\n\tconst submitWorkout=async ()=>{  \n\t\tconst exercisesForSubmission=[]\n\t\tnewWorkout.forEach((exerciseArray)=> //retrieve nested exercises\n\t\t{exerciseArray.forEach((exercise)=>{exercisesForSubmission.push(exercise)}) \n\t\t})\n\n\t\tconst invalidExercises=getInvalidExercises(exercisesForSubmission)\n\t\tif (invalidExercises.length>0){ //no invalid entries\n\t\t\tsetInvalidArray(invalidExercises) //set state so that invalid items get colored\n\t\t\tsetNotification({color:\"red\",message:\"An exercise hasn't been filled out :( please fill it out or remove it\"})\n\t\t}\n\n\t\telse{ // no invalid entries \n\t\t\tif (exercisesForSubmission.length>0) {  \n\t\t\t\tconst sentWorkout=await exerciseService.sendWorkout({exercises:exercisesForSubmission,_id:selectedClient._id}) \n\t\t\t\tif(sentWorkout){\n\t\t\t\t\tconst updatedClient={...selectedClient,days:selectedClient.days.concat(sentWorkout)}\n\t\t\t\t\tconst updatedClients=clients.filter((client)=>client._id!==selectedClient._id).concat(updatedClient)\n\t\t\t\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(updatedClients)) //update local storage\n\t\t\t\t\tsetClients(updatedClients)\n\t\t\t\t\tsetNotification({color:\"white\",message:\"Workout uploaded successfully\"}) \n\t\t\t\t\thistory.push(\"/\") \n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong :(\"}) \n\t\t\t\t}\n\t\t\t} \n\t\t\telse{\n\t\t\t\tsetNotification({color:\"red\",message:\"Looks like you haven't submitted any exercises!\"}) \n\t\t\t} \n\t\t} \n\t}\n\tconst body=()=>( //body for menuCard\n\t\t<> \n\t\t\t<DropdownClient clients={clients} selectedClient={selectedClient} setSelectedClient={setSelectedClient}/>\n\t\t\t{uniqueNames &&  //if exercises\n<>\n\t{uniqueNames.map((uniqueName,i) => (  //selectable box for each unique exercise\n\t\t<div className=\"menuItem__removable\" style={{\n\t\t\tbackgroundColor:invalidArray.includes(uniqueName) // if submission attempted, and exercise has an empty field, set to pink\n\t\t\t\t? \"pink\"\n\t\t\t\t: \"white\" \n\t\t}}\n\t\tkey={`${uniqueName}${i}`}>  \n\t\t\t<a className=\"menuItem__text\" onClick={()=>{setSelectedExercise(uniqueName)}}>{uniqueName}</a>\n\t\t\t<a style={{cursor:\"pointer\"}}\n\t\t\t\tonClick={()=>{\n\t\t\t\t\tsetInvalidArray(invalidArray.filter((exercise)=>uniqueName!==exercise))\n\t\t\t\t\tsetRemovedExercises(removedExercises.concat(uniqueName))\n\t\t\t\t\tsetNewWorkout(newWorkout.filter((exerciseArray)=>(exerciseArray[0].name!==uniqueName))) \n\t\t\t\t\tsetUniqueNames(uniqueNames.filter((name)=>(uniqueName!==name)))\n\t\t\t\t}}>\n\t\t\t\t<BsFillTrashFill style={{marginLeft:\"auto\",marginRight:\"15px\"}}/>\n\t\t\t</a>\n\t\t</div>\n\t))}\n</>\n\t\t\t}\n\n\t\t\t{ removedExercises.length>0 && \n\t\t\t\t<h5 style={{marginTop:\"auto\",textAlign:\"center\"}}>Removed</h5> }\n\t\t\t{ removedExercises.map((exercise)=>{ //bring back a removed exercise\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"menuCard__exercise--removed\" key={exercise}> \n\t\t\t\t\t\t<a key={exercise} className=\"menuItem__text\"\n\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\tsetRemovedExercises(removedExercises.filter((name)=>(name!=exercise)))\n\t\t\t\t\t\t\t\tsetNewWorkout(newWorkout.concat([[{name:exercise,reps:null,sets:null,weight:null}]]))\n\t\t\t\t\t\t\t\tsetUniqueNames(uniqueNames.concat((exercise)))}} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{exercise}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t)})\n\t\t\t}\n\t\t\t<button className=\"themed--2\" style={{marginTop:\"auto\",}}onClick={()=>\n\t\t\t\tsubmitWorkout(newWorkout)}>Submit</button> \n\t\t</> \n\t)\n\t\n\treturn ( \n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={()=>\"Exercises\"} body={body}/> \n\n\t\t\t{newWorkout.map((exerciseArray,i)=>{ \n\t\t\t\tif (exerciseArray[0].name!==selectedExercise){return} //render only for selected exercise\n\t\t\t\treturn( \n\t\t\t\t\t<div key={i} className=\"exerciseContainer\" > \n\t\t\t\t\t\t<ExerciseBox  exerciseArray={exerciseArray} newWorkout={newWorkout} setNewWorkout={setNewWorkout} indexInArray={i}/> \n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}) \n\t\t\t}\n\t\t</div> \n\t)\n} \n\nexport default TrainerExerciseSubmission ","import React,{useState} from \"react\"\nimport clientService from \"../../Services/clients\" \n\nconst AddClient=({setNotification,setClients})=>{  \n\t/*form for trainer to add a new client after on Boarding*/\n\n\tconst submitClient=async ()=>{\n\t\tif (currentClient.name  //all fields filled in\n\t\t\t&& currentClient.username \n\t\t\t&& currentClient.password \n\t\t\t&& (currentClient.password===currentClient.validatePassword)){ //password typed correctly twice\n\t\t\tconst updatedTrainer=await clientService.addClient(currentClient)\n\t\t\tif (updatedTrainer){ \n\t\t\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(updatedTrainer.clients))\n\t\t\t\tsetClients(updatedTrainer.clients)\n\t\t\t\tsetCurrentClient({name:\"\",username:\"\", password:\"\",validatePassword:\"\"})\n\t\t\t\tsetNotification({color:\"green\",message:\"Client added successfully!\"}) \n\t\t\t}\n\t\t\telse{\n\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong. Try a different username\"}) \n\t\t\t}\n\n\t\t}\n\t} \n\n\tconst [currentClient,setCurrentClient]=\n\tuseState({name:\"\",username:\"\", password:\"\",validatePassword:\"\"})\n\n\treturn(\n\t\t<form className=\"resultPage\" style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}\n\t\t\tonSubmit={(event)=>{event.preventDefault(); submitClient(currentClient)}\n\t\t\t}> \n\t\t\t<h1>Add a client </h1>\n\t\t\t<div style={{marginTop:\"40px\",display:\"flex\", flexDirection:\"column\",alignItems:\"center\",}}>\n\n\t\t\t\t<div style={{display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t\t<h1>Username</h1>\n\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,name:event.target.value}) }} \n\t\t\t\t\t\tplaceholder={currentClient.name || \"client name\"} \n\t\t\t\t\t\tvalue={currentClient.name} /> \n\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,username:event.target.value}) }} \n\t\t\t\t\t\tplaceholder={currentClient.username || \"client username\"}\n\t\t\t\t\t\tvalue={currentClient.username} /> \n\n\t\t\t\t</div>\n\t\t\t\t<div style={{marginTop:\"20px\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t\t<h1>Password</h1>\n\t\t\t\t\t<input onChange={(event)=>{setCurrentClient({...currentClient,password:event.target.value}) }} \n\t\t\t\t\t\tplaceholder={currentClient.password || \"client password\"}\n\t\t\t\t\t\tvalue={currentClient.password}/> \n\n\t\t\t\t\t<input onChange={(event)=>{ setCurrentClient({...currentClient,validatePassword:event.target.value}) }}\n\t\t\t\t\t\tplaceholder={currentClient.validatePassword || \"repeat client password\"} \n\t\t\t\t\t\tvalue={currentClient.validatePassword} /> \n\t\t\t\t</div>\t\t\n\t\t\t\t<button type=\"submit\"  \n\t\t\t\t\tclassName=\"themed--1\" style={{marginTop:\"60px\",width:\"60px\", height:\"40px\"}}>\n\t\t\t\t\t\t\t\t\t\tadd\n\t\t\t\t</button>\n\t\t\t</div> \n\t\t</form>\n\n\t)\n}\nexport default AddClient","import React,{useEffect,useRef} from \"react\" \n\nconst ProfilePicture =({ color,size,radius,font, initials}) => {\n\tconst canvasRef = useRef(null)\n  \n\tconst draw = (ctx) => {\n\t\tctx.clearRect(0, 0,  ctx.canvas.height,ctx.canvas.width,)\n\t\tctx.fillStyle = \"#000000\"\n\t\tctx.font=font\n\t\tctx.textAlign = \"center\"\n\t\tctx.textBaseline = \"middle\"\n\t\tctx.beginPath()\n\t\tctx.fillStyle=color\n\t\tctx.arc(ctx.canvas.width/2, ctx.canvas.height/2, radius, 0, 2*Math.PI)\n\t\tctx.fill()\n\n\t\tctx.beginPath()\n\t\tctx.fillStyle=\"white\"\n\t\tctx.fillText(initials, ctx.canvas.width/2, ctx.canvas.height/2) \n\t}\n  \n\tuseEffect(() => { \n\t\tconst canvas = canvasRef.current\n\t\tconst context = canvas.getContext(\"2d\") \n\t\tcontext.canvas.width=size // outter div dimensions. Can't figure out how to do it programatically \n\t\tcontext.canvas.height=size\n\t\tdraw(context) \n\t})\n\n\n\treturn <canvas  ref={canvasRef} />\n\n}\nexport default ProfilePicture","import React,{useState} from \"react\"\nimport {BsChevronUp} from \"react-icons/bs\"\nimport {BsChevronDown} from \"react-icons/bs\" \nimport Dropdown from \"react-bootstrap/Dropdown\"\n\nconst CollapsableList=({day,routines,isEditable,selectedClient,setSelectedClient,addExercise,editExercise,removeExercise})=>{\n\t/*collapsable list component used in trainer clientPage */\n\tconst [isExpanded, setIsExpanded]=useState(false)\n\t\n\treturn (\t\n\t\t<div className=\"grayLine\" style={{marginTop:\"10px\",marginBottom:\"10px\",display:\"block\",padding:\"2px\"}}>\n\t\t\t<div  className=\"a-fade\"\n\t\t\t\tstyle={{cursor:\"pointer\",marginBottom:\"10px\",marginTop:\"10px\",display:\"flex\",margin:\"0px\"}} >\n\t\t\t\t<a onClick={()=>setIsExpanded(!isExpanded)}\n\t\t\t\t\tstyle={{ display:\"flex\",width:\"100%\"}}>\n\t\t\t\t\t<h5 >\t\n\t\t\t\t\t\t{day[0]} \n\t\t\t\t\t</h5>\n\t\t\t\t\t{isExpanded\n\t\t\t\t\t\t? <BsChevronDown style={{marginLeft:\"auto\"}}/> \n\t\t\t\t\t\t: <BsChevronUp style={{marginLeft:\"auto\"}}/>}\n\t\t\t\t</a>\n\t\t\t\t{isEditable && isExpanded &&  \n\t\t\t\t<> {/*User pressed \"edit\" and has expanded the day list */}\n\t\t\t\t\t<button onClick={()=>{addExercise(day)}}\n\t\t\t\t\t\tclassName=\"themed--1\"style={{marginLeft:\"15px\",display:\"inline\"}}>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t</button>\n\t\t\t\t\t{routines && routines.length>0 &&\n\t\t\t\t\t<Dropdown style={{marginLeft:\"15px\"}}>{/* dropdown menu to overwrite exercises with a routine*/}\n\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\tAssign routine\n\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t{routines.map((routine,i)=>( \n\t\t\t\t\t\t\t\t<Dropdown.Item key={`${routine}${i}`}onClick={()=>{ \n\t\t\t\t\t\t\t\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,\n\t\t\t\t\t\t\t\t\t\t[day[0]]:routine.exercises\n\t\t\t\t\t\t\t\t\t}})}}> {routine.name}</Dropdown.Item>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<ul  style={{listStyle:\"none\"}}>\n\t\t\t\t{day[1].map((exercise,i)=>\n\t\t\t\t\tisEditable\n\t\t\t\t\t\t? //if editable -> allow render entries as inputs\n\t\t\t\t\t\t<div key={`${exercise}${i}`} style={{margin:\"5px\", display:\"flex\"}}>\n\t\t\t\t\t\t\t{isExpanded && \n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<input style={{display:\"block\"}} \n\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\tonBlur={(event)=>{editExercise(day,i,event.target.value.trim())} } //on unfocus, remove trailing whitespace\n\t\t\t\t\t\t\t\t\tonChange={(event)=>editExercise(day,i,event.target.value)}\n\t\t\t\t\t\t\t\t\tvalue={exercise}/>\n\t\t\t\t\t\t\t\t<button className=\"themed--2\" style={{marginLeft:\"10px\"}}onClick={()=>{removeExercise(day,i)}}>remove</button> \n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:  //else render as plain text\n\t\t\t\t\t\t<div key={`${exercise}${i}`}>\n\t\t\t\t\t\t\t{isExpanded && <li className=\"a-fade\">{exercise}</li> }\n\t\t\t\t\t\t</div>\n\t\t\t\t)} \n\t\t\t</ul> \n\t\t</div>\n\t)\n\t\n}\nexport default CollapsableList","import React from \"react\"\n\nconst NotificationChoice=({message, yesCallback,noCallback })=>{\n\t//give user a choice \n\treturn(\n\t\t<div className=\"a-fade\" style={{ \n\t\t\tzIndex:\"1\",\n\t\t\tboxShadow:\"1px 1px 2px rgba(0, 0, 0, 0.45)\",\n\t\t\tdisplay:\"flex\",\n\t\t\tflexDirection:\"column\",\n\t\t\tjustifyContent:\"center\",\n\t\t\talignItems:\"center\",\n\t\t\ttop: \"50%\",\n\t\t\tleft: \"50%\",\n\t\t\twidth: \"30em\",\n\t\t\theight: \"18em\",\n\t\t\tmarginTop: \"-9em\",\n\t\t\tmarginLeft: \"-15em\",\n\t\t\tborderRadius:\"5px\",\n\t\t\tborder: \"1px solid #666\",\n\t\t\tbackgroundColor: \"#FFFFFF\",\n\t\t\tposition: \"fixed\" ,\n\t\t\tpadding:\"40px\"\n\t\t}}>\n\n\n\t\t\t<h2 style={{textAlign:\"center\"}}>{message}</h2>\n\t\t\t<div>\n\t\t\t\t<button style={{marginRight:\"10px\",width:\"90px\"}}onClick={()=>{yesCallback()}} className=\"themed--1\">Yes</button> \n\t\t\t\t<button style={{width:\"90px\"}}onClick={()=>{noCallback()}} className=\"themed--2\">No</button>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n\nexport default NotificationChoice","import React,{useState,useEffect} from \"react\"\nimport CollapsableList from \"./CollapsableList\"\nimport clientService from \"../../Services/clients\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\nimport NotificationChoice from \"../NotificationChoice\"\nimport ProfilePicture from \"../ProfilePicture\"\nimport { RiPencilLine} from \"react-icons/ri\"\nimport {GiCancel} from \"react-icons/gi\"\nimport CheckBox from \"../CheckBox\"\n\n\nconst ClientCard = ({ color,initials,choice,setChoice,clientIndex,clients,setClients,setNotification,setSelectedClient,routines,selectedClient}) => {\n/* Card summarising client info for trainer  */\n\n\tconst [isEditable,setIsEditable]=useState(false) // if client info can be edited\n\n\tuseEffect(()=>{\n\t\tclients && isEditable==false &&  // On cancel\n\t\tselectedClient!==clients[clientIndex] && setSelectedClient(clients[clientIndex])  //If differences, revert state to original\n\t},[isEditable])\n\n\tuseEffect(()=>{ \n\t\tsetIsEditable(false)\n\t},[selectedClient && selectedClient.username]) //everytime client changes (not just edited), set isEditable to false\n\n\tconst toggleDay=(day)=>{ // set active day or rest day\n\t\tisEditable && \n\t\t(day[1]\n\t\t\t? setSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,[day[0]]:null}})\n\t\t\t: setSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,[day[0]]:[\"\"]}})\n\t\t)} \n\n\tconst editExercise=(day,index,newExercise)=>{ \n\t\tisEditable && \n\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,\n\t\t\t[day[0]]:day[1].map((currentExercise,i)=>( \n\t\t\t\ti==index\n\t\t\t\t\t? (newExercise.charAt(0).toUpperCase()+ // compare formatted entry\n\t\t\t\t\tnewExercise.slice(1))\n\t\t\t\t\t: currentExercise\n\t\t\t))}})} \n\n\tconst addExercise=(day)=>{ \n\t\tisEditable && \n\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment,\n\t\t\t[day[0]]:day[1].concat(\"\")}})}\n\n\tconst removeExercise=(day,index)=>{ \n\t\tif (isEditable){ \n\t\t\tconst updatedDay=selectedClient.currentRegiment[day[0]].filter((_,i)=>index!==i)\n\t\t\tif(updatedDay.length===0)\n\t\t\t{  //set day to null\n\t\t\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment, [day[0]]:null}})\n\t\t\t} \n\t\t\telse{ //set day to filtered array\n\t\t\t\tsetSelectedClient({...selectedClient,currentRegiment:{...selectedClient.currentRegiment, [day[0]]:updatedDay}})}} \n\t} \n\n\tconst removeClient = async() =>{\n\t\tconst updatedTrainer=await clientService.removeClient({id:selectedClient._id})\n\t\tif(updatedTrainer){ //if operation successful\n\t\t\tsetClients(clients.filter((client)=>client._id !=selectedClient._id))\n\t\t\tconst storedClients=JSON.parse(window.localStorage.getItem(\"clients\")) \n\t\t\tconst updatedClients=storedClients.filter((client)=>client._id!=selectedClient._id)\n\t\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(updatedClients))\n\t\t\tsetNotification({color:\"green\",message:\"Client was removed from your account successfully\"})\n\t\t\tsetSelectedClient(null)\n\t\t}\n\t\telse{\n\t\t\tsetNotification({color:\"red\",message:\"Oops! Something went wrong :(\"})\n\t\t} \n\t}\n\t\n\tconst submitClient=async()=>{ \n\t\tlet containsDuplicate=false\n\t\tconst regiment=Object.entries(selectedClient.currentRegiment) \n\t\t\t.map((day)=>{\n\t\t\t\tif(day[1] && new Set(day[1]).size != day[1].length){ //If duplicate exercise on same day\n\t\t\t\t\tcontainsDuplicate=true  //set Notification\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(day[1]){ //filter whitespace entries\n\t\t\t\t\t\tconst exercises = day[1].filter((exercise)=>(exercise.trim()))\n\t\t\t\t\t\treturn [day[0], exercises.length===0 \n\t\t\t\t\t\t\t? null // no valid entries?\n\t\t\t\t\t\t\t: exercises ] //exercise array \n\t\t\t\t\t}\n\t\t\t\t\telse{ //rest day\n\t\t\t\t\t\treturn [day[0],null]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tif (containsDuplicate){\n\t\t\tsetNotification({color:\"red\",message:\"Looks like you've assigned the same exercise twice in the same day :)\"})\n\t\t}\n\t\telse{  //submit\n\t\t\ttry{ \n\t\t\t\tsetSelectedClient({...selectedClient,currentRegiment:Object.fromEntries(regiment)})\n\t\t\t\tconst updatedClient=await clientService.updateClient({...selectedClient,currentRegiment:Object.fromEntries(regiment)}) \n\t\t\t\tconst updatedClients=clients.filter((client)=>client._id!==updatedClient._id).concat(updatedClient)\n\t\t\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(updatedClients))\n\t\t\t\tsetClients(updatedClients) \n\t\t\t\tsetIsEditable(false)\n\t\t\t\tsetNotification({color:\"green\",message:\"Client updated successfully\"})\n\t\t\t}\n\t\t\tcatch{ \n\t\t\t\tsetNotification({color:\"red\",message:\"Something went wrong :(\"})\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div style={{ \n\t\t\tdisplay:\"flex\",flexDirection:\"column\",}} className=\"resultPage clientView\" > \n\t\t\t{choice && \n\t\t\t<NotificationChoice \n\t\t\t\tmessage={`Are you sure you want to remove ${selectedClient.name} from your supervision?`} \n\t\t\t\tyesCallback={()=>{removeClient();setChoice(false)}} \n\t\t\t\tnoCallback={()=>{setChoice(false)}}\n\t\t\t/>\n\t\t\t}\n\n\t\t\t<div className=\"client__header\"\n\t\t\t\tstyle={{ \n\t\t\t\t\tminHeight:\"230px\", \n\t\t\t\t\tmargin:\"20px\",alignItems:\"center\",width:\"100%\",\n\t\t\t\t\tborderBottom:\"0.5px solid #CECECE\",\n\t\t\t\t\tmarginBottom:\"0px\",\n\t\t\t\t\tpadding:\"40px\",paddingLeft:\"0px\",display:\"flex\",}} > \n\t\t\t\t<ProfilePicture color={color} font={\"30px Arial\"} radius={70} size={150} initials={initials}/>\n\t\t\t\t<div className=\"client__details\" style={{marginLeft:\"30px\",flexGrow:\"1\",marginRight:\"25px\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t\t<p style={{display:\"inline\"}}> Name </p>\n\t\t\t\t\t<h5 style={{display:\"inline\"}}> {selectedClient.name}</h5>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className=\"client__details\" style={{flexGrow:\"1\",marginRight:\"25px\",display:\"flex\",flexDirection:\"column\"}}>\n\t\t\t\t\t<p style={{display:\"inline\"}}> Username </p>\n\t\t\t\t\t<h5 style={{display:\"inline\"}}> {selectedClient.username}</h5>\n\t\t\t\t</div>\n\n\t\t\t\t<div style={{display:\"flex\", flexDirection:\"column\",}}>\n\n\t\t\t\t\t<button className={isEditable\n\t\t\t\t\t\t? \"themed--2\"  \n\t\t\t\t\t\t: \"themed--1\"}\n\t\t\t\t\tstyle ={{marginBottom:\"40px\",alignSelf:\"start\",borderRadius:\"50%\",width:\"40px\",height:\"40px\",marginLeft:\"40px\",marginRight:\"10px\"}} \n\t\t\t\t\tonClick={()=>{setIsEditable(!isEditable)}}> \n\t\t\t\t\t\t{isEditable \n\t\t\t\t\t\t\t? <GiCancel size=\"30px\"/>\n\t\t\t\t\t\t\t: <RiPencilLine size=\"30px\"/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</button>  \n\t\t\t\t\t<button className=\"themed--2\" style={{backgroundColor:\"white\",color:\"#ff8933\",\n\t\t\t\t\t\tboxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.25)\",\n\t\t\t\t\t\twidth:\"40px\",height:\"40px\",borderRadius:\"50%\",marginLeft:\"40px\"}} onClick={()=>{ setChoice(true) }} >\n\t\t\t\t\t\t<BsFillTrashFill size=\"20px\"/>\n\t\t\t\t\t</button>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style={{width:\"100%\"}}>{/*two divs because safari makes life unbearable*/}\n\t\t\t\t<div className=\"grayLine\" > \n\t\t\t\t\t{ Object.entries(selectedClient.currentRegiment)\n\t\t\t\t\t\t.map((day)=>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst value=day[1]||\"\"\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={day[0]} style={{display:\"flex\",flexDirection:\"column\",width:\"100%\"}} > {/*safari...*/}\n\t\t\t\t\t\t\t\t\t<div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",margin:\"0px\"}}>\n\t\t\t\t\t\t\t\t\t\t<h5> {day[0]} </h5> \n\t\t\t\t\t\t\t\t\t\t<CheckBox callback={()=>{toggleDay(day)}} value={value}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>)}) \n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style ={{width:\"100%\"}}>\n\t\t\t\t{ Object.entries(selectedClient.currentRegiment)\n\t\t\t\t\t.map((day)=>\n\t\t\t\t\t\tday[1] &&  //if day has entries, render list\n\t\t\t\t\t\t\t\t<CollapsableList key={day[0]} \n\t\t\t\t\t\t\t\t\tsetSelectedClient={setSelectedClient}\n\t\t\t\t\t\t\t\t\tselectedClient={selectedClient}\n\t\t\t\t\t\t\t\t\tday={day} \n\t\t\t\t\t\t\t\t\tisEditable={isEditable} \n\t\t\t\t\t\t\t\t\taddExercise={addExercise} editExercise={editExercise} \n\t\t\t\t\t\t\t\t\tremoveExercise={removeExercise} routines={routines}/>\n\t\t\t\t\t)} \n\t\t\t</div> \n\t\t\t{isEditable && \n\t\t\t<div style={{width:\"100%\",display:\"flex\"}}>\n\t\t\t\t<button style={{margin:\"20px\",marginLeft:\"auto\",width:\"60px\"}}className=\"themed--1\" \n\t\t\t\t\tonClick={()=>{ submitClient() }} >Save</button>\n\t\t\t</div>\n\t\t\t}\n\t\t</div> \n\t) \n}\n\nexport default ClientCard\n","import React,{useEffect,useState} from \"react\"\nimport MenuCard from \"../MenuCard\"\nimport AddClient from \"./AddClient\"\nimport ProfilePicture from \"../ProfilePicture\"\nimport ClientCard from \"./ClientCard\"\nimport {IoIosAddCircle} from \"react-icons/io\"\n\n\nconst ClientsPage=({clients,setClients,routines,setNotification })=>{ \n\t/*For trainer to view and edit his clients workout details */ \n\n\tconst [selectedClient,setSelectedClient]=useState(null) //current client, including any edits\n\tconst [clientIndex,setClientIndex]=useState(null)  //Keep track of selectedClient index in clients state \n\n\tconst [choice,setChoice]=useState(false) //message for interactive yes or no notification - false if none,otherwise message string\n\n\tconst [initials,setInitials]=useState([]) // Each client's initials\n\tconst [profileColors,setProfileColors]=useState([]) // Each client's profile colors\n\n\tconst stringToColour = function(str) { // Turn client name into hex code ( for profile picture colors )\n\t\tvar hash = 0\n\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\thash = str.charCodeAt(i) + ((hash << 5) - hash)\n\t\t}\n\t\tvar colour = \"#\"\n\t\tfor (var j = 0; j < 3; j++) {\n\t\t\tvar value = (hash >> (j * 8)) & 0xFF\n\t\t\tcolour += (\"00\" + value.toString(16)).substr(-2)\n\t\t}\n\t\treturn colour\n\t} \n\n\n\tuseEffect(()=>{\n\t\tif (clients){\n\t\t\tsetInitials(clients.map((client)=>client.name.split(\" \").map((name)=>name[0]).join(\"\"))) \n\t\t\tsetProfileColors(clients.map(\n\t\t\t\t(client)=>\tstringToColour(client.name) ))\n\t\t}\n\t},[clients])\n\n\n\t\n\tuseEffect(()=>{ \n\t\tsetChoice && setChoice(false)  // if notification is active when client switched - disable \n\t},[selectedClient])\n\t\n\t\n\t{if(!clients){return (<div>No clients</div>)}}\n\treturn(\n\t\t<div className=\"pageContainer\"> \n\t\t\t<MenuCard header={()=> \n\t\t\t\t<div style={{display:\"inline-flex\",flexDirection:\"column\",justifyItems:\"center\"}}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p style={{display:\"inline\",padding:\"0px\",margin:\"0px\"}}>My Clients</p> \n\t\t\t\t\t\t<a style={{marginLeft:\"70px\"}}\n\t\t\t\t\t\t\tonClick={()=>{  \n\t\t\t\t\t\t\t\tsetSelectedClient({username:\"\",currentRegiment:{Mon:null,Tue:null,Wed:null,Thu:null,Fri:null,Sat:null,Sun:null}})}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t< IoIosAddCircle\tstyle={{ \n\t\t\t\t\t\t\t\tcursor:\"pointer\",color:\"orange\",width:\"60px\",height:\"60px\"}}\n\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t} \n\t\t\tbody={ \n\t\t\t\t()=>\n\t\t\t\t\t<div style={{flexWrap:\"wrap\",display:\"flex\"}}> \n\n\t\t\t\t\t\t{clients.map((client,i)=>(  // cards for existing clients\n\t\t\t\t\t\t\t<a key={i} \n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tsetSelectedClient(client)\n\t\t\t\t\t\t\t\t\tsetClientIndex(i) \n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\tmargin:\"10px\",\n\t\t\t\t\t\t\t\t\ttextAlign:\"center\",\n\t\t\t\t\t\t\t\t\tboxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.45)\", borderRadius: \"5px\",\n\t\t\t\t\t\t\t\t\tcursor:\"pointer\",display:\"flex\",flexDirection:\"column\", alignItems:\"center\",\n\t\t\t\t\t\t\t\t\theight:\"200px\", width:\"155px\", }}>\n\t\t\t\t\t\t\t\t\t<ProfilePicture color={profileColors[i]} size={105} radius={40}font={\"30px Arial\"} initials={initials[i]}/>\n\t\t\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t\t\t{client.name }\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t)) \n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t}/> \n\n\t\t\t{selectedClient && selectedClient.username\n\t\t\t\t? //edit existing client\n\t\t\t\t<ClientCard  \n\t\t\t\t\tinitials={initials[clientIndex]}\n\t\t\t\t\tcolor={profileColors[clientIndex]}\n\t\t\t\t\tchoice={choice}\n\t\t\t\t\tsetChoice={setChoice}\n\t\t\t\t\tclientIndex={clientIndex}\n\t\t\t\t\tselectedClient={selectedClient} setSelectedClient={setSelectedClient} \n\t\t\t\t\tclients={clients} setClients={setClients} \n\t\t\t\t\troutines={routines} \n\t\t\t\t\tsetNotification={setNotification} /> \n\t\t\t\t: //new client\n\t\t\t\t<AddClient setClients={setClients} setNotification={setNotification} />\n\t\t\t}\n\t\t</div> \n\t)\n}\nexport default ClientsPage","import React,{useState,useEffect} from \"react\"\nimport MenuCard from \"../MenuCard\"\nimport exerciseService from \"../../Services/exercises\"\nimport {BsFillTrashFill} from \"react-icons/bs\"\nimport { RiPencilLine} from \"react-icons/ri\"\nimport {GiCancel} from \"react-icons/gi\"\n\nconst RoutinePage = ({routines,setRoutines }) => {\n\t/*Trainer can create/edit/remove routines - Workouts frequently assigned to clients , e.g. \"Backday-basic\" */\n\tconst [localRoutines,setLocalRoutines]=useState(routines || JSON.parse(window.localStorage.getItem(\"routines\"))) // To modify temporarily without changes to outside state until save\n\tconst [selectedRoutine,setSelectedRoutine]=useState(null)\n\tconst [routineIndex,setRoutineIndex]=useState(null) //index of selectedRoutine in routines array\n\tconst [isEditable,setIsEditable]=useState(false) \n\n\tconst editRoutine=(index,exercise)=>{ //edit a routine exercise\n\t\tisEditable && \n\t\tsetSelectedRoutine({...selectedRoutine,exercises: \n\t\t\tselectedRoutine.exercises.map((name,i)=>\n\t\t\t\ti===index \n\t\t\t\t\t? exercise.charAt(0).toUpperCase()+exercise.slice(1)\n\t\t\t\t\t: name\n\t\t\t)})} \n\n\tconst addRoutine = ()=>{  //brand new routine \n\t\tsetLocalRoutines(localRoutines.concat({name:\"New Routine\", exercises:[\"\"]}))\n\t} \n\n\tconst removeRoutine = async(index)=>{  \n\t\tconst updatedRoutines=localRoutines.filter((_,i)=>index!=i)\n\t\tconst validatedRoutines=await exerciseService.setRoutines(updatedRoutines)\n\t\tsetLocalRoutines(validatedRoutines)\n\t\tsetRoutines(validatedRoutines)\n\t\twindow.localStorage.setItem(\"routines\",JSON.stringify(validatedRoutines))\n\t\tindex===routineIndex && setSelectedRoutine(null) //if removing currently viewed routine, set view to null\n\t} \n\n\tconst removeFromRoutine = (exercise)=>{ //remove exerise from routine\n\t\tsetSelectedRoutine({...selectedRoutine, exercises:selectedRoutine.exercises.filter((name)=>name!=exercise)})\n\t} \n\n\tconst saveRoutines= async() =>{\n\t\tsetIsEditable(false)\n\t\tconst updatedRoutines=localRoutines.map((routine,i)=>\n\t\t\ti===routineIndex  // find currently edited routine\n\t\t\t\t? {...selectedRoutine,\n\t\t\t\t\texercises:selectedRoutine.exercises.filter((exercise)=>exercise && exercise)} //filter empty exercises\n\t\t\t\t: routine)\n\t\tconst validatedRoutines=await exerciseService.setRoutines(updatedRoutines) //\n\t\tsetRoutines(validatedRoutines)\n\t\tsetLocalRoutines(validatedRoutines)\n\t\twindow.localStorage.setItem(\"routines\",JSON.stringify(validatedRoutines))\n\t\tsetSelectedRoutine(validatedRoutines[routineIndex])\n\t} \n\n\tuseEffect(()=>{\n\t\tlocalRoutines && isEditable==false &&  // On cancel\n\t\tselectedRoutine!==localRoutines[routineIndex] && setSelectedRoutine(localRoutines[routineIndex])  //If differences, revert state to original\n\t},[isEditable]) \n\n\treturn ( \n\t\t<div className=\"pageContainer\">\n\t\t\t<MenuCard header={()=>\"My Routines\"} body ={()=>\n\n\t\t\t\t<>\n\t\t\t\t\t<button style={{marginBottom:\"30px\",}}className=\"themed--2\" onClick={()=>{addRoutine()}}>Add routine </button>\n\t\t\t\t\t{localRoutines && localRoutines.map((routine,index)=>\n\t\t\t\t\t\t<div key={`${routine.name}${index}`} className=\"menuItem__removable\">\n\t\t\t\t\t\t\t<a  onClick={()=>{setSelectedRoutine(routine); setRoutineIndex(index);setIsEditable( false )}}\n\t\t\t\t\t\t\t\tclassName=\"menuItem__text\">  \n\t\t\t\t\t\t\t\t{ routine.name }\n\t\t\t\t\t\t\t</a> \n\n\t\t\t\t\t\t\t<a style={{cursor:\"pointer\"}}\n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tremoveRoutine(index)\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<BsFillTrashFill style={{marginLeft:\"auto\",marginRight:\"15px\"}}/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</> \n\t\t\t}/>\n\n\t\t\t{selectedRoutine &&  \n\t\t\t\t\t<div style={{ marginTop:\"80px\"}}>  \n\t\t\t\t\t\t<div className=\"a-fade itemCard\">  \n\t\t\t\t\t\t\t{isEditable \n\t\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div style={{alignContent:\"flexStart\",justifyItems:\"flexStart\",justifyContent:\"flexStart\",alignItems:\"flexStart\",display:\"flex\",}}>\n\t\t\t\t\t\t\t\t\t\t<div style={{display:\"flex-inline\", flexDirection:\"column\"}}>\n\t\t\t\t\t\t\t\t\t\t\t<h2>Routine name</h2>\n\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{marginBottom:\"30px\"}}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>{setSelectedRoutine({...selectedRoutine,name:event.target.value})}}value={selectedRoutine.name || \"\"} /> \n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div style={{marginLeft:\"auto\"}}>\n\t\t\t\t\t\t\t\t\t\t\t<button  className=\"themed--2\" style={{borderRadius:\"50%\"}}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={()=>{setIsEditable(!isEditable)}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<GiCancel size=\"30px\"/>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<h2 style={{marginBottom:\"0px\"}}>Routine exercises</h2>\n\t\t\t\t\t\t\t\t\t<div style={{display:\"flex\"}}>\n\t\t\t\t\t\t\t\t\t\t<button className=\"themed--1\"style={{marginLeft:\"auto\"}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={()=>{setSelectedRoutine({...selectedRoutine,exercises:selectedRoutine.exercises.concat(\"\")})}}>Add</button> \n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tselectedRoutine && selectedRoutine.exercises.map((exercise,index)=> \n\t\t\t\t\t\t\t\t\t\t\t<div style={{marginBottom:\"2px\"}}key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event)=>{editRoutine(index,event.target.value.trim())}} //Trim white space when input loses focus\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event)=>{editRoutine(index,event.target.value)}}value={exercise} /> \n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"themed--2\"style={{marginLeft:\"10px\"}}onClick={()=>{removeFromRoutine(exercise)}}>Remove</button>\n\t\t\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div style={{marginBottom:\"10px\",display:\"flex\"}}>\n\t\t\t\t\t\t\t\t\t\t<h2 style={{marginBottom:\"0px\",}} >{selectedRoutine.name}</h2>\n\t\t\t\t\t\t\t\t\t\t<button  className=\"themed--1\" style={{borderRadius:\"50%\",marginLeft:\"auto\",display:\"inline\"}} onClick={()=>{setIsEditable(!isEditable)}}>\n\t\t\t\t\t\t\t\t\t\t\t<RiPencilLine size=\"30px\"/>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tselectedRoutine && selectedRoutine.exercises.map((exercise,i)=> \n\t\t\t\t\t\t\t\t\t\t\t<h5  key={i}> \n\t\t\t\t\t\t\t\t\t\t\t\t{exercise }\n\t\t\t\t\t\t\t\t\t\t\t</h5> \n\t\t\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<div style={{width:\"100%\",display:\"flex\"}}>\n\t\t\t\t\t\t\t\t{isEditable && <button style={{marginTop:\"15px\",marginLeft:\"auto\",marginRight:\"2px\",display:\"inline\"}}className=\"themed--1\" \n\t\t\t\t\t\t\t\t\tonClick={()=>{saveRoutines() }}>Save</button> }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div  style={{width:\"100%\",borderBottom:\"0.5px solid #CECECE\",padding:\"30px\",display:\"flex\"}}></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t} \n\t\t</div> \n\t) \n}\n\nexport default RoutinePage","import React,{useEffect,useState} from \"react\" \nimport {Switch,Route,useHistory} from \"react-router-dom\"\nimport { GoPlusSmall } from \"react-icons/go\"\n\nimport Analysis_T from \"./Analysis_T.js\"\nimport History_T from \"./History_T.js\"\nimport ExerciseSubmission_T from \"./ExerciseSubmission_T\"\nimport ClientsPage from \"./ClientsPage\"\nimport RoutinePage from \"./RoutinePage.js\"\nimport AccountPage from \"../AccountPage.js\"\n\nconst TrainerHeadquarters=({user,setUser,setNotification })=>{ \n\tconst history=useHistory()\n\n\tconst [clients, setClients] = useState(null) \n\tconst [routines, setRoutines] = useState(null)\n\n\tuseEffect(()=>{ //set trainer's clients\n\t\tif(user && user.isTrainer){ \n\t\t\tconst storedClients=JSON.parse(window.localStorage.getItem(\"clients\"))\n\t\t\tstoredClients && setClients(storedClients)  \n\t\t\tsetRoutines(JSON.parse(window.localStorage.getItem(\"routines\"))) \n\t\t}\n\t},[user])\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/dailySubmission\">\n\t\t\t\t<ExerciseSubmission_T clients={clients} setClients={setClients} \n\t\t\t\t\tsetNotification={setNotification}/>\n\t\t\t</Route>\n\t\t\t<Route path=\"/history\">\n\t\t\t\t<History_T clients={clients} setClients={setClients} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/clients\">\n\t\t\t\t<ClientsPage user={user}setUser={setUser} clients={clients} \n\t\t\t\t\tsetClients={setClients} routines={routines} setNotification={setNotification}/>\n\t\t\t</Route>\n\t\t\t<Route path=\"/analysis\">\n\t\t\t\t<Analysis_T clients={clients} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/routines\"> \n\t\t\t\t<RoutinePage user={user}setUser={setUser} routines={routines} setRoutines={setRoutines}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/account\"> \n\t\t\t\t<AccountPage setNotification={setNotification} user={user}setUser={setUser} routines={routines} setRoutines={setRoutines}/> \n\t\t\t</Route>\n\t\t\t<Route path=\"/\">\n\t\t\t\t<div className=\"pageContainer\">\n\t\t\t\t\t<div className=\"HQ__menu\">\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/clients\")}}>\n\t\t\t\t\t\t\t<h2>  {/*Everything within HQ__items gets styled in CSS*/}\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>My Clients</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/dailySubmission\")}}>\n\t\t\t\t\t\t\t<h2>  {/*Everything within HQ__items gets styled in CSS*/}\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>Workout Submission</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/analysis\")}}>\n\t\t\t\t\t\t\t<h2>  \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>Analysis</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/history\")}}>\n\t\t\t\t\t\t\t<h2>  \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>History</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/routines\")}} > \n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>My Routines </a>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<div className=\"HQ__item\" onClick={()=>{history.push(\"/account\")}} >\n\t\t\t\t\t\t\t<h2> \n\t\t\t\t\t\t\t\t<a> <GoPlusSmall/>My Account</a>\n\t\t\t\t\t\t\t</h2> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n\nexport default TrainerHeadquarters ","import React from \"react\"\n\nconst Notification = ({message,color}) => { \n\tif(message){\n\t\treturn(\n\t\t\t<div style={{textAlign:\"center\",zIndex:\"1\",width:\"100vw\",position:\"absolute\", top:\"0\",backgroundColor:color}}> \n\t\t\t\t<h1>{message}</h1>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn(null)\n}\nexport default Notification","import axios from \"axios\"\nconst baseurl = \"/api/users\"\n\nconst register = async credentials => {\n\ttry{\n\t\tconst response = await axios.post(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default {register}\n","import axios from \"axios\"\nconst baseurl = \"/api/login\"\n\nconst login = async credentials => {\n\ttry{\n\t\tconst response = await axios.post(baseurl, credentials)\n\t\treturn response.data\n\t}\n\tcatch{\n\t\treturn false\n\t}\n}\n\nexport default { login }\n\n","import tokenService from \"../Services/token\"\nimport LoginService from \"../Services/login\"\n\nexport const login = async(username, password) => {\n\tconst user = await LoginService.login(username, password)\n\ttokenService.setToken(user.token) \n\n\tif (user.isTrainer) { \n\t\twindow.localStorage.setItem(\"clients\",JSON.stringify(user.clients)) \n\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({isTrainer:user.isTrainer,token:user.token, username:user.username,name:user.name})) \n\t\twindow.localStorage.setItem(\"routines\",JSON.stringify(user.routines))\n\t}\n\telse{\n\t\twindow.localStorage.setItem(\"loggedUser\",JSON.stringify({token:user.token, username:user.username,name:user.name, regIsSet:user.regIsSet})) \n\t\twindow.localStorage.setItem(\"userWorkouts\",JSON.stringify(user.days)) // workout history of user \n\t\twindow.localStorage.setItem(\"currentRegiment\",JSON.stringify(user.currentRegiment)) //if not, will be object with empty arrays\n\t}\n\treturn user\n}\n\nexport const logout = (setUser)=>{\n\twindow.localStorage.removeItem(\"loggedUser\")\n\twindow.localStorage.removeItem(\"userWorkouts\")\n\twindow.localStorage.removeItem(\"currentRegiment\")\n\twindow.localStorage.removeItem(\"clients\")\n\twindow.localStorage.removeItem(\"routines\")\n\tsetUser(null)\n}\n","import React,{useState,useEffect} from \"react\"\nimport {\n\tSwitch,\n\tRoute,\n} from \"react-router-dom\"\n\nimport LoginForm from \"./Components/LoginForm\"\nimport RegisterForm from \"./Components/RegisterForm\"\nimport Banner from \"./Components/Banner\"\nimport LandingPage from \"./Components/LandingPage\"\nimport TutorialPage from \"./Components/TutorialPage\"\nimport Headquarters_A from \"./Components/Athlete/Headquarters_A\"\nimport Headquarters_T from \"./Components/Trainer/Headquarters_T\"\nimport Notification from \"./Components/Notification\"\n\nimport registerService from \"./Services/register\"\nimport tokenService from \"./Services/token\"\nimport {login,logout}from \"./Functions/userFunctions\" \n\nfunction App(){ \n\tconst [backgroundImage,setBackgroundImage] = useState(\"Media/weightLiftingGirl.png\")\n\tconst [notification,setNotification] = useState(null) //Action feedback + Error messages\n\t//will be object e.g. {color:\"red\",message:\"text\"}\n\n\tconst [user, setUser] = useState(null) \t\n\t/*user contains authorization token, username, and bool flag to show if trainer or athlete. \n\tAthletes have 1) currentRegiment obj, showing target exercises for each day of week.\n\t\t\t\t\t\t\t\t2) days array, showing their whole workout history\n\n\tTrainers have 1) clients array\n\t\t\t\t\t\t\t\t2) routines array, to save frequently prescribed workout routines for easy access \n\t */ \n\n\tuseEffect(()=>{ //Turn off notification after 3 sec\n\t\tif(notification){\n\t\t\tsetTimeout(() => { \n\t\t\t\tsetNotification(null)\n\t\t\t}, 3000)\n\t\t} \n\t},[notification])\n\n\tuseEffect(()=>{  //Check to see if user is already logged in\n\t\tconst user = JSON.parse(window.localStorage.getItem(\"loggedUser\"))\n\t\tif(user){\n\t\t\tsetUser(user)\n\t\t\ttokenService.setToken(user.token) //token will be set on each render\n\t\t}}\n\t,[]) \n\n\tuseEffect(()=>{  //different background if logged in\n\t\tif (user){ setBackgroundImage(\"Media/weights_dark_flipped.jpeg\") }\n\t\telse { setBackgroundImage(\"Media/weightLiftingGirl.png\") }\n\t}\n\t,[user]) \n\n\treturn ( \n\t\t<div className=\"App\" style={{height:\"100vh\", backgroundImage:`url(${backgroundImage})`,backgroundSize:\"cover\"}}>\n\t\t\t{notification && <Notification color={notification.color} message={notification.message}/>}\n\n\t\t\t{user ? //if user is logged in\n\t\t\t\t<>\n\t\t\t\t\t{user.isTrainer //user is a trainer\n\t\t\t\t\t\t?<>\n\t\t\t\t\t\t\t<Banner user={user} logout={()=>{logout(setUser) }}/>  \n\t\t\t\t\t\t\t<Headquarters_T user={user} setUser={setUser} setNotification={setNotification} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: //user is an athlete\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{user.regIsSet \n\t\t\t\t\t\t\t\t?  //User isn't new - allow submissions, performance analysis & workout history view\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Banner user={user} logout={()=>{logout(setUser) }}/>  \n\t\t\t\t\t\t\t\t\t<Headquarters_A  user={user} setUser={setUser} setNotification={setNotification}  />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t:  //if user hasn't set a regiment, do that. \n\t\t\t\t\t\t\t\t<LandingPage  user={user} setUser={setUser} setNotification={setNotification}/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</> \n\t\t\t\t\t}\n\t\t\t\t</>\n\t\t\t\t: //if no user, register or login\n\t\t\t\t<div style={{height:\"100%\",display:\"flex\",  justifyItems:\"flex-start\"}}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/tutorial\">\n\t\t\t\t\t\t\t<TutorialPage/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t\t<RegisterForm setNotification={setNotification} submitCredentials={registerService.register}/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<LoginForm setNotification={setNotification} submitCredentials={login} setUser={setUser}/> \n\t\t\t\t\t\t\t<div style={{ padding:\"40px\",marginTop:\"auto\",marginLeft:\"auto\",marginBottom:\"57px\",\n\n\t\t\t\t\t\t\t\tborderRadius:\"20px 0px 0px 20px\",\n\t\t\t\t\t\t\t\tdisplay:\"flex\",alignItems:\"center\",backgroundColor:\"white\"}}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<h3 style={{marginBottom:\"20px\"}}>Demo Accounts:</h3>\n\t\t\t\t\t\t\t\t\t<h4 style={{marginBottom:\"10px\"}}>Trainer:</h4>\n\t\t\t\t\t\t\t\t\t<h5 style={{marginBottom:\"10px\"}}>username:ski</h5>\n\t\t\t\t\t\t\t\t\t<h5 style={{marginBottom:\"20px\"}}>password:ski</h5>\n\t\t\t\t\t\t\t\t\t<h4>Athlete:</h4>\n\t\t\t\t\t\t\t\t\t<h5>username:ic768</h5>\n\t\t\t\t\t\t\t\t\t<h5>password:a</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch> \n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t) \n} \n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"bootstrap/dist/js/bootstrap.js\"\nimport {BrowserRouter as Router} from  \"react-router-dom\"\n\n\nReactDOM.render(\n\t<Router>\n\t\t<App /> \n\t</Router>,\n\tdocument.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}